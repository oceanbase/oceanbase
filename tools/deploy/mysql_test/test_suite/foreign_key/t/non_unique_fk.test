#### owner: fangzhou.yfz
#### owner group: 
#### description: foreign key update casacde cycle reference test

--disable_warnings

drop table if exists A, B, C, D, E;

# test 1: 2 tables, one non-unique index, insert/update cascade/delete cascade

create table A(a int, msg int);
create index Aindex on A(a);
create table B(a int, FOREIGN KEY(a) REFERENCES A(a) on update cascade on delete cascade);
insert into A values (2, 10), (3, 11), (3, 12), (NULL, 10), (NULL, 11);
insert into B values (2), (2), (2), (3), (3), (3), (NULL);
select * from B;
--error ER_NO_REFERENCED_ROW_2
insert into B values (10);
update A set a = 4 where a = 2;
delete from A where a = 4;
select * from A;
drop table A, B;

# test 2: 2 tables, one non-unique index, insert/non-cascade update/non-delete cascade

create table A(a int, msg int);
create index Aindex on A(a);
create table B(a int, FOREIGN KEY(a) REFERENCES A(a));
insert into A values (2, 10), (3, 11), (3, 12);
insert into B values (2), (2), (2), (3), (3), (3);
--error ER_NO_REFERENCED_ROW_2
insert into B values (10);
select * from B;
--error ER_ROW_IS_REFERENCED_2
update A set a = 4 where a = 2;
--error ER_ROW_IS_REFERENCED_2
delete from A where a = 2;
drop table A, B;

# test 3: 4 tables, one non-unique index of multiple columns.

create table A(b int, a2 int, a3 int, msg int);
create index Aindex on A(b, a2, a3);
create index Ai2 on A(msg);
create index Ai3 on A(a3, msg, a2);
create table B(a int, FOREIGN KEY(a) REFERENCES A(b));
--error ER_CANNOT_ADD_FOREIGN
create table C(a2 int, FOREIGN KEY(a2) REFERENCES A(a2));
--error ER_CANNOT_ADD_FOREIGN
create table C(a2 int, a3 int, FOREIGN KEY(a2, a3) REFERENCES A(a2, a3));
insert into A values (2, 100, 10, NULL), (3, 101, 11, NULL), (3, 101, 12, NULL);
insert into B values (2), (2), (2), (3), (3), (3);
--error ER_NO_REFERENCED_ROW_2
insert into B values (10);
select * from B;
--error ER_ROW_IS_REFERENCED_2
update A set b = 4 where b = 2;
--error ER_ROW_IS_REFERENCED_2
delete from A where b = 2;

create table C(a2 int, b int, FOREIGN KEY(a2, b) REFERENCES A(a2, b));
insert into C values (100, 2), (101, 3), (101, 3), (100, 2);
select * from C;
--error ER_NO_REFERENCED_ROW_2
insert into C values (100, 100);

create table D(a2 int, b int, FOREIGN KEY(b, a2) REFERENCES A(b, a2));
insert into D values (100, 2), (101, 3), (101, 3), (100, 2);
select * from D;

create table E(a3 int, a2 int, b int, FOREIGN KEY(b, a2, a3) REFERENCES A(b, a2, a3));
insert into E values (10, 100, 2), (11, 101, 3), (12, 101, 3), (10, 100, 2);
select * from E;

# Check drop index
--error 4714
alter table A drop index Aindex;
alter table A drop index Ai2;
alter table A drop index Ai3;
drop table E;
--error 4714
alter table A drop index Aindex;
drop table D;
--error 4714
alter table A drop index Aindex;
drop table C;
--error 4714
alter table A drop index Aindex;
drop table B;
alter table A drop index Aindex;
drop table A;

# test 4: self-reference

create table A(a int, a2 int, a3 int, a4 int);
create index Aindex on A(a, a2, a3, a4);
alter table A add foreign key (a2) references A(a) on update cascade;
alter table A add foreign key (a3, a4) references A(a, a2) on update cascade;
insert into A values (1, NULL, NULL, NULL);
insert into A values (1, 1, NULL, NULL);
insert into A values (NULL, NULL, 1, 1);
select * from A;
--error 4714
alter table A drop index Aindex;
drop table A;

create table A(pk1 int, pk2 int, a int, a2 int, primary key A(a, pk1, pk2), foreign key (a2) references A(a));
insert into A values (0, 0, 1, NULL);
insert into A values (0, 1, 1, NULL);
insert into A values (0, 0, 2, 1);
select * from A;
drop table A;

create table A(a int, a2 int, a3 int, a4 int, index Aindex(a, a2, a3, a4), foreign key (a2) references A(a), foreign key (a4, a3) references A(a, a2));
--error ER_CANNOT_ADD_FOREIGN
create table B(a varchar(20), a2 int, a3 int, a4 int, index Bindex(a, a2, a3, a4), foreign key (a2) references B(a), foreign key (a4, a3) references B(a, a2));
--error ER_CANNOT_ADD_FOREIGN
create table B(a int, a2 int, a3 int, a4 int, index Bindex(a, a2, a4), foreign key (a2) references B(a), foreign key (a3, a4) references B(a4, a2));
--error ER_CANNOT_ADD_FOREIGN
create table B(a int, a2 int, a3 int, a4 int, index Bindex(a4, a2, a), foreign key (a2) references B(a), foreign key (a3, a4) references B(a, a2));
insert into A values (1, NULL, NULL, NULL);
insert into A values (1, 1, NULL, NULL);
insert into A values (NULL, NULL, 1, 1);
select * from A;
drop table A;


# test 5: reference string column

create table A(a varchar(20), a2 varchar(20));
create index Aindex on A(a2, a);
create table B(a varchar(20), foreign key (a) references A(a2));
insert into A values ('a', 'a2'), ('a3', 'a4'), ('a', 'a2'), ('a3', 'a4');
insert into B values ('a2'), ('a2'), ('a4'), ('a4');
select * from B;
select * from A;
--error ER_NO_REFERENCED_ROW_2
insert into B values ('');
drop table A, B;

# test 6: choose unique index rather than choosing non-unique index

create table A(a int, a2 int);
create index Ai on A(a);
create unique index Aui on A(a);
create index Ai2 on A(a);
create table B(a int, foreign key (a) references A(a));
--error 4714
alter table A drop index Aui;
alter table A drop index Ai;
alter table A drop index Ai2;
insert into A values (1, 10), (2, 20);
insert into B values (1), (1), (2), (2);
select * from A;
select * from B;
drop table A, B;

create table A(a int, a2 int, primary key (a, a2));
create unique index Aui on A(a2);
create table B(a2 int, foreign key (a2) references A(a2));
--error 4714
alter table A drop index Aui;
insert into A values (1, 10), (2, 11);
insert into B values (10), (10), (11), (11);
select * from A;
select * from B;
drop table A, B;

create table A(a int, a2 int, primary key (a));
create unique index Aui on A(a);
create table B(a int, foreign key (a) references A(a));
alter table A drop index Aui;
insert into A values (1, 10), (2, 11);
insert into B values (1), (1), (2), (2);
select * from A;
select * from B;
drop table A, B;

create table A(a int, a2 int);
create index Aindex on A(a);
create table B(a int, foreign key (a) references A(a));
create unique index Aui on A(a);
insert into A values (1, 10), (2, 11);
insert into B values (1), (1), (2), (2);
select * from A;
select * from B;
alter table A drop index Aui;
insert into B values (1), (1), (2), (2);
select * from B;
drop table A, B;

--enable_warnings
