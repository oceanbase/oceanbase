#
# Bug#51457 Firstmatch semijoin strategy gives wrong results for
#           certain query plans
#
drop table if exists t0, t1, t2, t3, t6, t8;
drop view if exists v1, v2, v3, v_t2, view_b, view_c;
CREATE TABLE t0(a INTEGER);
CREATE TABLE t1(a INTEGER);
INSERT INTO t1 VALUES(1);
CREATE TABLE t2(a INTEGER);
INSERT INTO t2 VALUES(5), (8);
CREATE TABLE t6(a INTEGER);
INSERT INTO t6 VALUES(7), (1), (0), (5), (1), (4);
CREATE TABLE t8(a INTEGER);
INSERT INTO t8 VALUES(1), (3), (5), (7), (9), (7), (3), (1);
EXPLAIN 
SELECT *
FROM t2 AS nt2
WHERE 1 IN (SELECT it1.a
FROM t1 AS it1 JOIN t6 AS it3 ON it1.a=it3.a);
Query Plan
====================================================================
|ID|OPERATOR                           |NAME |EST.ROWS|EST.TIME(us)|
--------------------------------------------------------------------
|0 |NESTED-LOOP JOIN CARTESIAN         |     |2       |7           |
|1 |├─TABLE FULL SCAN                  |nt2  |2       |3           |
|2 |└─MATERIAL                         |     |1       |5           |
|3 |  └─SUBPLAN SCAN                   |VIEW1|1       |5           |
|4 |    └─LIMIT                        |     |1       |5           |
|5 |      └─NESTED-LOOP JOIN CARTESIAN |     |1       |5           |
|6 |        ├─SUBPLAN SCAN             |VIEW3|1       |3           |
|7 |        │ └─TABLE FULL SCAN        |it3  |1       |3           |
|8 |        └─MATERIAL                 |     |1       |3           |
|9 |          └─SUBPLAN SCAN           |VIEW2|1       |3           |
|10|            └─TABLE FULL SCAN      |it1  |1       |3           |
====================================================================
Outputs & filters:
-------------------------------------
  0 - output([nt2.a]), filter(nil), rowset=16
      conds(nil), nl_params_(nil), use_batch=false
  1 - output([nt2.a]), filter(nil), rowset=16
      access([nt2.a]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([nt2.__pk_increment]), range(MIN ; MAX)always true
  2 - output(nil), filter(nil), rowset=16
  3 - output(nil), filter(nil), rowset=16
      access(nil)
  4 - output([1]), filter(nil), rowset=16
      limit(1), offset(nil)
  5 - output(nil), filter(nil), rowset=16
      conds(nil), nl_params_(nil), use_batch=false
  6 - output(nil), filter(nil), rowset=16
      access(nil)
  7 - output([1]), filter([it3.a = 1]), rowset=16
      access([it3.a]), partitions(p0)
      limit(1), offset(nil), is_index_back=false, is_global_index=false, filter_before_indexback[false], 
      range_key([it3.__pk_increment]), range(MIN ; MAX)always true
  8 - output(nil), filter(nil), rowset=16
  9 - output(nil), filter(nil), rowset=16
      access(nil)
 10 - output([1]), filter([it1.a = 1]), rowset=16
      access([it1.a]), partitions(p0)
      limit(1), offset(nil), is_index_back=false, is_global_index=false, filter_before_indexback[false], 
      range_key([it1.__pk_increment]), range(MIN ; MAX)always true
SELECT *
FROM t2 AS nt2
WHERE 1 IN (SELECT it1.a
FROM t1 AS it1 JOIN t6 AS it3 ON it1.a=it3.a);
a
5
8
EXPLAIN 
SELECT *
FROM t2 AS nt2, t8 AS nt4
WHERE 1 IN (SELECT it1.a
FROM t1 AS it1 JOIN t6 AS it3 ON it1.a=it3.a);
Query Plan
========================================================================
|ID|OPERATOR                               |NAME |EST.ROWS|EST.TIME(us)|
------------------------------------------------------------------------
|0 |NESTED-LOOP JOIN CARTESIAN             |     |16      |10          |
|1 |├─TABLE FULL SCAN                      |nt4  |8       |3           |
|2 |└─MATERIAL                             |     |2       |7           |
|3 |  └─NESTED-LOOP JOIN CARTESIAN         |     |2       |7           |
|4 |    ├─TABLE FULL SCAN                  |nt2  |2       |3           |
|5 |    └─MATERIAL                         |     |1       |5           |
|6 |      └─SUBPLAN SCAN                   |VIEW1|1       |5           |
|7 |        └─LIMIT                        |     |1       |5           |
|8 |          └─NESTED-LOOP JOIN CARTESIAN |     |1       |5           |
|9 |            ├─SUBPLAN SCAN             |VIEW3|1       |3           |
|10|            │ └─TABLE FULL SCAN        |it3  |1       |3           |
|11|            └─MATERIAL                 |     |1       |3           |
|12|              └─SUBPLAN SCAN           |VIEW2|1       |3           |
|13|                └─TABLE FULL SCAN      |it1  |1       |3           |
========================================================================
Outputs & filters:
-------------------------------------
  0 - output([nt2.a], [nt4.a]), filter(nil), rowset=16
      conds(nil), nl_params_(nil), use_batch=false
  1 - output([nt4.a]), filter(nil), rowset=16
      access([nt4.a]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([nt4.__pk_increment]), range(MIN ; MAX)always true
  2 - output([nt2.a]), filter(nil), rowset=16
  3 - output([nt2.a]), filter(nil), rowset=16
      conds(nil), nl_params_(nil), use_batch=false
  4 - output([nt2.a]), filter(nil), rowset=16
      access([nt2.a]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([nt2.__pk_increment]), range(MIN ; MAX)always true
  5 - output(nil), filter(nil), rowset=16
  6 - output(nil), filter(nil), rowset=16
      access(nil)
  7 - output([1]), filter(nil), rowset=16
      limit(1), offset(nil)
  8 - output(nil), filter(nil), rowset=16
      conds(nil), nl_params_(nil), use_batch=false
  9 - output(nil), filter(nil), rowset=16
      access(nil)
 10 - output([1]), filter([it3.a = 1]), rowset=16
      access([it3.a]), partitions(p0)
      limit(1), offset(nil), is_index_back=false, is_global_index=false, filter_before_indexback[false], 
      range_key([it3.__pk_increment]), range(MIN ; MAX)always true
 11 - output(nil), filter(nil), rowset=16
 12 - output(nil), filter(nil), rowset=16
      access(nil)
 13 - output([1]), filter([it1.a = 1]), rowset=16
      access([it1.a]), partitions(p0)
      limit(1), offset(nil), is_index_back=false, is_global_index=false, filter_before_indexback[false], 
      range_key([it1.__pk_increment]), range(MIN ; MAX)always true
SELECT *
FROM t2 AS nt2, t8 AS nt4
WHERE 1 IN (SELECT it1.a
FROM t1 AS it1 JOIN t6 AS it3 ON it1.a=it3.a);
a	a
5	1
8	1
5	3
8	3
5	5
8	5
5	7
8	7
5	9
8	9
5	7
8	7
5	3
8	3
5	1
8	1
EXPLAIN 
SELECT *
FROM t0 AS ot1, t2 AS nt3
WHERE ot1.a IN (SELECT it2.a
FROM t1 AS it2 JOIN t8 AS it4 ON it2.a=it4.a);
Query Plan
============================================================
|ID|OPERATOR                   |NAME |EST.ROWS|EST.TIME(us)|
------------------------------------------------------------
|0 |NESTED-LOOP JOIN CARTESIAN |     |2       |11          |
|1 |├─TABLE FULL SCAN          |nt3  |2       |3           |
|2 |└─MATERIAL                 |     |1       |8           |
|3 |  └─HASH SEMI JOIN         |     |1       |8           |
|4 |    ├─TABLE FULL SCAN      |ot1  |1       |3           |
|5 |    └─SUBPLAN SCAN         |VIEW1|2       |6           |
|6 |      └─HASH JOIN          |     |2       |6           |
|7 |        ├─TABLE FULL SCAN  |it2  |1       |3           |
|8 |        └─TABLE FULL SCAN  |it4  |8       |3           |
============================================================
Outputs & filters:
-------------------------------------
  0 - output([ot1.a], [nt3.a]), filter(nil), rowset=16
      conds(nil), nl_params_(nil), use_batch=false
  1 - output([nt3.a]), filter(nil), rowset=16
      access([nt3.a]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([nt3.__pk_increment]), range(MIN ; MAX)always true
  2 - output([ot1.a]), filter(nil), rowset=16
  3 - output([ot1.a]), filter(nil), rowset=16
      equal_conds([ot1.a = VIEW1.a]), other_conds(nil)
  4 - output([ot1.a]), filter(nil), rowset=16
      access([ot1.a]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([ot1.__pk_increment]), range(MIN ; MAX)always true
  5 - output([VIEW1.a]), filter(nil), rowset=16
      access([VIEW1.a])
  6 - output([it2.a]), filter(nil), rowset=16
      equal_conds([it2.a = it4.a]), other_conds(nil)
  7 - output([it2.a]), filter(nil), rowset=16
      access([it2.a]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([it2.__pk_increment]), range(MIN ; MAX)always true
  8 - output([it4.a]), filter(nil), rowset=16
      access([it4.a]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([it4.__pk_increment]), range(MIN ; MAX)always true
SELECT *
FROM t0 as ot1, t2 AS nt3
WHERE ot1.a IN (SELECT it2.a
FROM t1 AS it2 JOIN t8 AS it4 ON it2.a=it4.a);
a	a
DROP TABLE t0, t1, t2, t6, t8;
# End of bug#51457
