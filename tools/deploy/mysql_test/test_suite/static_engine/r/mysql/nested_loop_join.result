result_format: 4
explain_protocol: 2


drop table if exists t1, t2;
create table t1(c1 int, c2 int primary key);
create table t2(c1 int primary key, c2 int);
insert/*trace*/ into t1 values(1,1), (1, 2), (null, 3), (2, 4), (3,5);
insert/*trace*/ into t2 values(1, 1), (3, 3), (5,5), (6, null);

set @@ob_enable_plan_cache = 0;

==============================  no use batch nested loop join =========
set _nlj_batching_enabled = false;

EXPLAIN select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1, t2 where t1.c1 = t2.c1;
Query Plan
=================================================
|ID|OPERATOR         |NAME|EST.ROWS|EST.TIME(us)|
-------------------------------------------------
|0 |NESTED-LOOP JOIN |    |4       |96          |
|1 |├─TABLE FULL SCAN|t1  |5       |3           |
|2 |└─TABLE GET      |t2  |1       |18          |
=================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2], [t2.c1], [t2.c2]), filter(nil), rowset=16
      conds(nil), nl_params_([t1.c1(:0)]), use_batch=false
  1 - output([t1.c2], [t1.c1]), filter(nil), rowset=16
      access([t1.c2], [t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2]), range(MIN ; MAX)always true
  2 - output([t2.c1], [t2.c2]), filter(nil), rowset=16
      access([t2.c1], [t2.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1]), range(MIN ; MAX), 
      range_cond([:0 = t2.c1])
select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1, t2 where t1.c1 = t2.c1;
+------+----+----+------+
| c1   | c2 | c1 | c2   |
+------+----+----+------+
|    1 |  1 |  1 |    1 |
|    1 |  2 |  1 |    1 |
|    3 |  5 |  3 |    3 |
+------+----+----+------+

EXPLAIN select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1, t2 where t1.c1 = t2.c2;
Query Plan
===================================================
|ID|OPERATOR           |NAME|EST.ROWS|EST.TIME(us)|
---------------------------------------------------
|0 |NESTED-LOOP JOIN   |    |5       |3           |
|1 |├─TABLE FULL SCAN  |t1  |5       |3           |
|2 |└─MATERIAL         |    |4       |3           |
|3 |  └─TABLE FULL SCAN|t2  |4       |3           |
===================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2], [t2.c1], [t2.c2]), filter(nil), rowset=16
      conds([t1.c1 = t2.c2]), nl_params_(nil), use_batch=false
  1 - output([t1.c2], [t1.c1]), filter(nil), rowset=16
      access([t1.c2], [t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2]), range(MIN ; MAX)always true
  2 - output([t2.c1], [t2.c2]), filter(nil), rowset=16
  3 - output([t2.c1], [t2.c2]), filter(nil), rowset=16
      access([t2.c1], [t2.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1]), range(MIN ; MAX)always true
select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1, t2 where t1.c1 = t2.c2;
+------+----+----+------+
| c1   | c2 | c1 | c2   |
+------+----+----+------+
|    1 |  1 |  1 |    1 |
|    1 |  2 |  1 |    1 |
|    3 |  5 |  3 |    3 |
+------+----+----+------+


EXPLAIN select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1 left join t2 on t1.c1 = t2.c1;
Query Plan
=======================================================
|ID|OPERATOR               |NAME|EST.ROWS|EST.TIME(us)|
-------------------------------------------------------
|0 |NESTED-LOOP OUTER JOIN |    |5       |96          |
|1 |├─TABLE FULL SCAN      |t1  |5       |3           |
|2 |└─TABLE GET            |t2  |1       |18          |
=======================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2], [t2.c1], [t2.c2]), filter(nil), rowset=16
      conds(nil), nl_params_([t1.c1(:0)]), use_batch=false
  1 - output([t1.c2], [t1.c1]), filter(nil), rowset=16
      access([t1.c2], [t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2]), range(MIN ; MAX)always true
  2 - output([t2.c1], [t2.c2]), filter(nil), rowset=16
      access([t2.c1], [t2.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1]), range(MIN ; MAX), 
      range_cond([:0 = t2.c1])
select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1 left join t2 on t1.c1 = t2.c1;
+------+----+----+------+
| c1   | c2 | c1 | c2   |
+------+----+----+------+
|    1 |  1 |  1 |    1 |
|    1 |  2 |  1 |    1 |
| NULL |  3 | NULL | NULL |
|    2 |  4 | NULL | NULL |
|    3 |  5 |  3 |    3 |
+------+----+----+------+

EXPLAIN select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1 left join t2 on t1.c1 = t2.c2;
Query Plan
=======================================================
|ID|OPERATOR               |NAME|EST.ROWS|EST.TIME(us)|
-------------------------------------------------------
|0 |NESTED-LOOP OUTER JOIN |    |5       |3           |
|1 |├─TABLE FULL SCAN      |t1  |5       |3           |
|2 |└─MATERIAL             |    |4       |3           |
|3 |  └─TABLE FULL SCAN    |t2  |4       |3           |
=======================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2], [t2.c1], [t2.c2]), filter(nil), rowset=16
      conds([t1.c1 = t2.c2]), nl_params_(nil), use_batch=false
  1 - output([t1.c2], [t1.c1]), filter(nil), rowset=16
      access([t1.c2], [t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2]), range(MIN ; MAX)always true
  2 - output([t2.c1], [t2.c2]), filter(nil), rowset=16
  3 - output([t2.c1], [t2.c2]), filter(nil), rowset=16
      access([t2.c1], [t2.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1]), range(MIN ; MAX)always true
select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1 left join t2 on t1.c1 = t2.c2;
+------+----+----+------+
| c1   | c2 | c1 | c2   |
+------+----+----+------+
|    1 |  1 |  1 |    1 |
|    1 |  2 |  1 |    1 |
| NULL |  3 | NULL | NULL |
|    2 |  4 | NULL | NULL |
|    3 |  5 |  3 |    3 |
+------+----+----+------+


EXPLAIN select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1 right join t2 on t1.c1 = t2.c1;
Query Plan
===================================================
|ID|OPERATOR           |NAME|EST.ROWS|EST.TIME(us)|
---------------------------------------------------
|0 |MERGE OUTER JOIN   |    |4       |6           |
|1 |├─TABLE FULL SCAN  |t2  |4       |3           |
|2 |└─SORT             |    |5       |3           |
|3 |  └─TABLE FULL SCAN|t1  |5       |3           |
===================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2], [t2.c1], [t2.c2]), filter(nil), rowset=16
      equal_conds([t1.c1 = t2.c1]), other_conds(nil)
      merge_directions([ASC])
  1 - output([t2.c1], [t2.c2]), filter(nil), rowset=16
      access([t2.c1], [t2.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1]), range(MIN ; MAX)always true
  2 - output([t1.c1], [t1.c2]), filter(nil), rowset=16
      sort_keys([t1.c1, ASC])
  3 - output([t1.c2], [t1.c1]), filter(nil), rowset=16
      access([t1.c2], [t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2]), range(MIN ; MAX)always true
select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1 right join t2 on t1.c1 = t2.c1;
+------+----+----+------+
| c1   | c2 | c1 | c2   |
+------+----+----+------+
|    1 |  1 |  1 |    1 |
|    1 |  2 |  1 |    1 |
|    3 |  5 |  3 |    3 |
| NULL | NULL |  5 |    5 |
| NULL | NULL |  6 | NULL |
+------+----+----+------+

EXPLAIN select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1 right join t2 on t1.c1 = t2.c2;
Query Plan
=================================================
|ID|OPERATOR         |NAME|EST.ROWS|EST.TIME(us)|
-------------------------------------------------
|0 |HASH OUTER JOIN  |    |5       |6           |
|1 |├─TABLE FULL SCAN|t2  |4       |3           |
|2 |└─TABLE FULL SCAN|t1  |5       |3           |
=================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2], [t2.c1], [t2.c2]), filter(nil), rowset=16
      equal_conds([t1.c1 = t2.c2]), other_conds(nil)
  1 - output([t2.c1], [t2.c2]), filter(nil), rowset=16
      access([t2.c1], [t2.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1]), range(MIN ; MAX)always true
  2 - output([t1.c2], [t1.c1]), filter(nil), rowset=16
      access([t1.c2], [t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2]), range(MIN ; MAX)always true
select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1 right join t2 on t1.c1 = t2.c2;
+------+----+----+------+
| c1   | c2 | c1 | c2   |
+------+----+----+------+
|    1 |  1 |  1 |    1 |
|    1 |  2 |  1 |    1 |
|    3 |  5 |  3 |    3 |
| NULL | NULL |  5 |    5 |
| NULL | NULL |  6 | NULL |
+------+----+----+------+


EXPLAIN select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1 full join t2 on t1.c1 = t2.c1;
Query Plan
======================================================
|ID|OPERATOR              |NAME|EST.ROWS|EST.TIME(us)|
------------------------------------------------------
|0 |MERGE FULL OUTER JOIN |    |5       |6           |
|1 |├─TABLE FULL SCAN     |t2  |4       |3           |
|2 |└─SORT                |    |5       |3           |
|3 |  └─TABLE FULL SCAN   |t1  |5       |3           |
======================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2], [t2.c1], [t2.c2]), filter(nil), rowset=16
      equal_conds([t1.c1 = t2.c1]), other_conds(nil)
      merge_directions([ASC])
  1 - output([t2.c1], [t2.c2]), filter(nil), rowset=16
      access([t2.c1], [t2.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1]), range(MIN ; MAX)always true
  2 - output([t1.c1], [t1.c2]), filter(nil), rowset=16
      sort_keys([t1.c1, ASC])
  3 - output([t1.c2], [t1.c1]), filter(nil), rowset=16
      access([t1.c2], [t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2]), range(MIN ; MAX)always true
select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1 full join t2 on t1.c1 = t2.c1;
+------+----+----+------+
| c1   | c2 | c1 | c2   |
+------+----+----+------+
| NULL |  3 | NULL | NULL |
|    1 |  1 |  1 |    1 |
|    1 |  2 |  1 |    1 |
|    2 |  4 | NULL | NULL |
|    3 |  5 |  3 |    3 |
| NULL | NULL |  5 |    5 |
| NULL | NULL |  6 | NULL |
+------+----+----+------+

EXPLAIN select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1 full join t2 on t1.c1 = t2.c2;
Query Plan
=====================================================
|ID|OPERATOR             |NAME|EST.ROWS|EST.TIME(us)|
-----------------------------------------------------
|0 |HASH FULL OUTER JOIN |    |5       |6           |
|1 |├─TABLE FULL SCAN    |t2  |4       |3           |
|2 |└─TABLE FULL SCAN    |t1  |5       |3           |
=====================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2], [t2.c1], [t2.c2]), filter(nil), rowset=16
      equal_conds([t1.c1 = t2.c2]), other_conds(nil)
  1 - output([t2.c1], [t2.c2]), filter(nil), rowset=16
      access([t2.c1], [t2.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1]), range(MIN ; MAX)always true
  2 - output([t1.c2], [t1.c1]), filter(nil), rowset=16
      access([t1.c2], [t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2]), range(MIN ; MAX)always true
select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1 full join t2 on t1.c1 = t2.c2;
+------+----+----+------+
| c1   | c2 | c1 | c2   |
+------+----+----+------+
|    1 |  1 |  1 |    1 |
|    1 |  2 |  1 |    1 |
| NULL |  3 | NULL | NULL |
|    2 |  4 | NULL | NULL |
|    3 |  5 |  3 |    3 |
| NULL | NULL |  5 |    5 |
| NULL | NULL |  6 | NULL |
+------+----+----+------+


EXPLAIN select /*+use_nl(t1, t2)*/ * from t1 where exists (select 1 from t2 where t1.c1 =  t2.c2);
Query Plan
======================================================
|ID|OPERATOR              |NAME|EST.ROWS|EST.TIME(us)|
------------------------------------------------------
|0 |NESTED-LOOP SEMI JOIN |    |4       |3           |
|1 |├─TABLE FULL SCAN     |t1  |5       |3           |
|2 |└─MATERIAL            |    |4       |3           |
|3 |  └─TABLE FULL SCAN   |t2  |4       |3           |
======================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2]), filter(nil), rowset=16
      conds([t1.c1 = t2.c2]), nl_params_(nil), use_batch=false
  1 - output([t1.c2], [t1.c1]), filter(nil), rowset=16
      access([t1.c2], [t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2]), range(MIN ; MAX)always true
  2 - output([t2.c2]), filter(nil), rowset=16
  3 - output([t2.c2]), filter(nil), rowset=16
      access([t2.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1]), range(MIN ; MAX)always true
select /*+use_nl(t1, t2)*/ * from t1 where exists (select 1 from t2 where t1.c1 =  t2.c2);
+------+----+
| c1   | c2 |
+------+----+
|    1 |  1 |
|    1 |  2 |
|    3 |  5 |
+------+----+

EXPLAIN select /*+use_nl(t1, t2)*/ * from t1 where exists (select 1 from t2 where t1.c1 =  t2.c1);
Query Plan
=================================================
|ID|OPERATOR         |NAME|EST.ROWS|EST.TIME(us)|
-------------------------------------------------
|0 |NESTED-LOOP JOIN |    |4       |96          |
|1 |├─TABLE FULL SCAN|t1  |5       |3           |
|2 |└─TABLE GET      |t2  |1       |18          |
=================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2]), filter(nil), rowset=16
      conds(nil), nl_params_([t1.c1(:0)]), use_batch=false
  1 - output([t1.c2], [t1.c1]), filter(nil), rowset=16
      access([t1.c2], [t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2]), range(MIN ; MAX)always true
  2 - output(nil), filter(nil), rowset=16
      access(nil), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1]), range(MIN ; MAX), 
      range_cond([:0 = t2.c1])
select /*+use_nl(t1, t2)*/ * from t1 where exists (select 1 from t2 where t1.c1 =  t2.c1);
+------+----+
| c1   | c2 |
+------+----+
|    1 |  1 |
|    1 |  2 |
|    3 |  5 |
+------+----+


EXPLAIN select /*+use_nl(t1, t2)*/ * from t1 where not exists (select 1 from t2 where t1.c1 =  t2.c2);
Query Plan
======================================================
|ID|OPERATOR              |NAME|EST.ROWS|EST.TIME(us)|
------------------------------------------------------
|0 |NESTED-LOOP ANTI JOIN |    |1       |3           |
|1 |├─TABLE FULL SCAN     |t1  |5       |3           |
|2 |└─MATERIAL            |    |4       |3           |
|3 |  └─TABLE FULL SCAN   |t2  |4       |3           |
======================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2]), filter(nil), rowset=16
      conds([t1.c1 = t2.c2]), nl_params_(nil), use_batch=false
  1 - output([t1.c2], [t1.c1]), filter(nil), rowset=16
      access([t1.c2], [t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2]), range(MIN ; MAX)always true
  2 - output([t2.c2]), filter(nil), rowset=16
  3 - output([t2.c2]), filter(nil), rowset=16
      access([t2.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1]), range(MIN ; MAX)always true
select /*+use_nl(t1, t2)*/ * from t1 where not exists (select 1 from t2 where t1.c1 =  t2.c2);
+------+----+
| c1   | c2 |
+------+----+
| NULL |  3 |
|    2 |  4 |
+------+----+

EXPLAIN select /*+use_nl(t1, t2)*/ * from t1 where not exists (select 1 from t2 where t1.c1 =  t2.c1);
Query Plan
======================================================
|ID|OPERATOR              |NAME|EST.ROWS|EST.TIME(us)|
------------------------------------------------------
|0 |NESTED-LOOP ANTI JOIN |    |1       |96          |
|1 |├─TABLE FULL SCAN     |t1  |5       |3           |
|2 |└─TABLE GET           |t2  |1       |18          |
======================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2]), filter(nil), rowset=16
      conds(nil), nl_params_([t1.c1(:0)]), use_batch=false
  1 - output([t1.c2], [t1.c1]), filter(nil), rowset=16
      access([t1.c2], [t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2]), range(MIN ; MAX)always true
  2 - output(nil), filter(nil), rowset=16
      access(nil), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1]), range(MIN ; MAX), 
      range_cond([:0 = t2.c1])
select /*+use_nl(t1, t2)*/ * from t1 where not exists (select 1 from t2 where t1.c1 =  t2.c1);
+------+----+
| c1   | c2 |
+------+----+
| NULL |  3 |
|    2 |  4 |
+------+----+

==============================  use batch nested loop join =========
set _nlj_batching_enabled = true;
EXPLAIN select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1, t2 where t1.c1 = t2.c1;
Query Plan
=================================================
|ID|OPERATOR         |NAME|EST.ROWS|EST.TIME(us)|
-------------------------------------------------
|0 |NESTED-LOOP JOIN |    |4       |83          |
|1 |├─TABLE FULL SCAN|t1  |5       |3           |
|2 |└─TABLE GET      |t2  |1       |16          |
=================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2], [t2.c1], [t2.c2]), filter(nil), rowset=16
      conds(nil), nl_params_([t1.c1(:0)]), use_batch=true
  1 - output([t1.c2], [t1.c1]), filter(nil), rowset=16
      access([t1.c2], [t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2]), range(MIN ; MAX)always true
  2 - output([t2.c1], [t2.c2]), filter(nil), rowset=16
      access([GROUP_ID], [t2.c1], [t2.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1]), range(MIN ; MAX), 
      range_cond([:0 = t2.c1])
select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1, t2 where t1.c1 = t2.c1;
+------+----+----+------+
| c1   | c2 | c1 | c2   |
+------+----+----+------+
|    1 |  1 |  1 |    1 |
|    1 |  2 |  1 |    1 |
|    3 |  5 |  3 |    3 |
+------+----+----+------+
EXPLAIN select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1, t2 where t1.c1 = t2.c2;
Query Plan
===================================================
|ID|OPERATOR           |NAME|EST.ROWS|EST.TIME(us)|
---------------------------------------------------
|0 |NESTED-LOOP JOIN   |    |5       |3           |
|1 |├─TABLE FULL SCAN  |t1  |5       |3           |
|2 |└─MATERIAL         |    |4       |3           |
|3 |  └─TABLE FULL SCAN|t2  |4       |3           |
===================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2], [t2.c1], [t2.c2]), filter(nil), rowset=16
      conds([t1.c1 = t2.c2]), nl_params_(nil), use_batch=false
  1 - output([t1.c2], [t1.c1]), filter(nil), rowset=16
      access([t1.c2], [t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2]), range(MIN ; MAX)always true
  2 - output([t2.c1], [t2.c2]), filter(nil), rowset=16
  3 - output([t2.c1], [t2.c2]), filter(nil), rowset=16
      access([t2.c1], [t2.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1]), range(MIN ; MAX)always true
select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1, t2 where t1.c1 = t2.c2;
+------+----+----+------+
| c1   | c2 | c1 | c2   |
+------+----+----+------+
|    1 |  1 |  1 |    1 |
|    1 |  2 |  1 |    1 |
|    3 |  5 |  3 |    3 |
+------+----+----+------+

EXPLAIN select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1 left join t2 on t1.c1 = t2.c1;
Query Plan
=======================================================
|ID|OPERATOR               |NAME|EST.ROWS|EST.TIME(us)|
-------------------------------------------------------
|0 |NESTED-LOOP OUTER JOIN |    |5       |83          |
|1 |├─TABLE FULL SCAN      |t1  |5       |3           |
|2 |└─TABLE GET            |t2  |1       |16          |
=======================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2], [t2.c1], [t2.c2]), filter(nil), rowset=16
      conds(nil), nl_params_([t1.c1(:0)]), use_batch=true
  1 - output([t1.c2], [t1.c1]), filter(nil), rowset=16
      access([t1.c2], [t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2]), range(MIN ; MAX)always true
  2 - output([t2.c1], [t2.c2]), filter(nil), rowset=16
      access([GROUP_ID], [t2.c1], [t2.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1]), range(MIN ; MAX), 
      range_cond([:0 = t2.c1])
select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1 left join t2 on t1.c1 = t2.c1;
+------+----+----+------+
| c1   | c2 | c1 | c2   |
+------+----+----+------+
|    1 |  1 |  1 |    1 |
|    1 |  2 |  1 |    1 |
| NULL |  3 | NULL | NULL |
|    2 |  4 | NULL | NULL |
|    3 |  5 |  3 |    3 |
+------+----+----+------+
EXPLAIN select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1 left join t2 on t1.c1 = t2.c2;
Query Plan
=======================================================
|ID|OPERATOR               |NAME|EST.ROWS|EST.TIME(us)|
-------------------------------------------------------
|0 |NESTED-LOOP OUTER JOIN |    |5       |3           |
|1 |├─TABLE FULL SCAN      |t1  |5       |3           |
|2 |└─MATERIAL             |    |4       |3           |
|3 |  └─TABLE FULL SCAN    |t2  |4       |3           |
=======================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2], [t2.c1], [t2.c2]), filter(nil), rowset=16
      conds([t1.c1 = t2.c2]), nl_params_(nil), use_batch=false
  1 - output([t1.c2], [t1.c1]), filter(nil), rowset=16
      access([t1.c2], [t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2]), range(MIN ; MAX)always true
  2 - output([t2.c1], [t2.c2]), filter(nil), rowset=16
  3 - output([t2.c1], [t2.c2]), filter(nil), rowset=16
      access([t2.c1], [t2.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1]), range(MIN ; MAX)always true
select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1 left join t2 on t1.c1 = t2.c2;
+------+----+----+------+
| c1   | c2 | c1 | c2   |
+------+----+----+------+
|    1 |  1 |  1 |    1 |
|    1 |  2 |  1 |    1 |
| NULL |  3 | NULL | NULL |
|    2 |  4 | NULL | NULL |
|    3 |  5 |  3 |    3 |
+------+----+----+------+


EXPLAIN select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1 right join t2 on t1.c1 = t2.c1;
Query Plan
===================================================
|ID|OPERATOR           |NAME|EST.ROWS|EST.TIME(us)|
---------------------------------------------------
|0 |MERGE OUTER JOIN   |    |4       |6           |
|1 |├─TABLE FULL SCAN  |t2  |4       |3           |
|2 |└─SORT             |    |5       |3           |
|3 |  └─TABLE FULL SCAN|t1  |5       |3           |
===================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2], [t2.c1], [t2.c2]), filter(nil), rowset=16
      equal_conds([t1.c1 = t2.c1]), other_conds(nil)
      merge_directions([ASC])
  1 - output([t2.c1], [t2.c2]), filter(nil), rowset=16
      access([t2.c1], [t2.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1]), range(MIN ; MAX)always true
  2 - output([t1.c1], [t1.c2]), filter(nil), rowset=16
      sort_keys([t1.c1, ASC])
  3 - output([t1.c2], [t1.c1]), filter(nil), rowset=16
      access([t1.c2], [t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2]), range(MIN ; MAX)always true
select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1 right join t2 on t1.c1 = t2.c1;
+------+----+----+------+
| c1   | c2 | c1 | c2   |
+------+----+----+------+
|    1 |  1 |  1 |    1 |
|    1 |  2 |  1 |    1 |
|    3 |  5 |  3 |    3 |
| NULL | NULL |  5 |    5 |
| NULL | NULL |  6 | NULL |
+------+----+----+------+

EXPLAIN select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1 right join t2 on t1.c1 = t2.c2;
Query Plan
=================================================
|ID|OPERATOR         |NAME|EST.ROWS|EST.TIME(us)|
-------------------------------------------------
|0 |HASH OUTER JOIN  |    |5       |6           |
|1 |├─TABLE FULL SCAN|t2  |4       |3           |
|2 |└─TABLE FULL SCAN|t1  |5       |3           |
=================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2], [t2.c1], [t2.c2]), filter(nil), rowset=16
      equal_conds([t1.c1 = t2.c2]), other_conds(nil)
  1 - output([t2.c1], [t2.c2]), filter(nil), rowset=16
      access([t2.c1], [t2.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1]), range(MIN ; MAX)always true
  2 - output([t1.c2], [t1.c1]), filter(nil), rowset=16
      access([t1.c2], [t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2]), range(MIN ; MAX)always true
select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1 right join t2 on t1.c1 = t2.c2;
+------+----+----+------+
| c1   | c2 | c1 | c2   |
+------+----+----+------+
|    1 |  1 |  1 |    1 |
|    1 |  2 |  1 |    1 |
|    3 |  5 |  3 |    3 |
| NULL | NULL |  5 |    5 |
| NULL | NULL |  6 | NULL |
+------+----+----+------+


EXPLAIN select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1 full join t2 on t1.c1 = t2.c1;
Query Plan
======================================================
|ID|OPERATOR              |NAME|EST.ROWS|EST.TIME(us)|
------------------------------------------------------
|0 |MERGE FULL OUTER JOIN |    |5       |6           |
|1 |├─TABLE FULL SCAN     |t2  |4       |3           |
|2 |└─SORT                |    |5       |3           |
|3 |  └─TABLE FULL SCAN   |t1  |5       |3           |
======================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2], [t2.c1], [t2.c2]), filter(nil), rowset=16
      equal_conds([t1.c1 = t2.c1]), other_conds(nil)
      merge_directions([ASC])
  1 - output([t2.c1], [t2.c2]), filter(nil), rowset=16
      access([t2.c1], [t2.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1]), range(MIN ; MAX)always true
  2 - output([t1.c1], [t1.c2]), filter(nil), rowset=16
      sort_keys([t1.c1, ASC])
  3 - output([t1.c2], [t1.c1]), filter(nil), rowset=16
      access([t1.c2], [t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2]), range(MIN ; MAX)always true
select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1 full join t2 on t1.c1 = t2.c1;
+------+----+----+------+
| c1   | c2 | c1 | c2   |
+------+----+----+------+
| NULL |  3 | NULL | NULL |
|    1 |  1 |  1 |    1 |
|    1 |  2 |  1 |    1 |
|    2 |  4 | NULL | NULL |
|    3 |  5 |  3 |    3 |
| NULL | NULL |  5 |    5 |
| NULL | NULL |  6 | NULL |
+------+----+----+------+

EXPLAIN select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1 full join t2 on t1.c1 = t2.c2;
Query Plan
=====================================================
|ID|OPERATOR             |NAME|EST.ROWS|EST.TIME(us)|
-----------------------------------------------------
|0 |HASH FULL OUTER JOIN |    |5       |6           |
|1 |├─TABLE FULL SCAN    |t2  |4       |3           |
|2 |└─TABLE FULL SCAN    |t1  |5       |3           |
=====================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2], [t2.c1], [t2.c2]), filter(nil), rowset=16
      equal_conds([t1.c1 = t2.c2]), other_conds(nil)
  1 - output([t2.c1], [t2.c2]), filter(nil), rowset=16
      access([t2.c1], [t2.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1]), range(MIN ; MAX)always true
  2 - output([t1.c2], [t1.c1]), filter(nil), rowset=16
      access([t1.c2], [t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2]), range(MIN ; MAX)always true
select /*+use_nl(t1 t2) leading(t1 t2)*/ * from t1 full join t2 on t1.c1 = t2.c2;
+------+----+----+------+
| c1   | c2 | c1 | c2   |
+------+----+----+------+
|    1 |  1 |  1 |    1 |
|    1 |  2 |  1 |    1 |
| NULL |  3 | NULL | NULL |
|    2 |  4 | NULL | NULL |
|    3 |  5 |  3 |    3 |
| NULL | NULL |  5 |    5 |
| NULL | NULL |  6 | NULL |
+------+----+----+------+


EXPLAIN select /*+use_nl(t1, t2)*/ * from t1 where exists (select 1 from t2 where t1.c1 =  t2.c2);
Query Plan
======================================================
|ID|OPERATOR              |NAME|EST.ROWS|EST.TIME(us)|
------------------------------------------------------
|0 |NESTED-LOOP SEMI JOIN |    |4       |3           |
|1 |├─TABLE FULL SCAN     |t1  |5       |3           |
|2 |└─MATERIAL            |    |4       |3           |
|3 |  └─TABLE FULL SCAN   |t2  |4       |3           |
======================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2]), filter(nil), rowset=16
      conds([t1.c1 = t2.c2]), nl_params_(nil), use_batch=false
  1 - output([t1.c2], [t1.c1]), filter(nil), rowset=16
      access([t1.c2], [t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2]), range(MIN ; MAX)always true
  2 - output([t2.c2]), filter(nil), rowset=16
  3 - output([t2.c2]), filter(nil), rowset=16
      access([t2.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1]), range(MIN ; MAX)always true
select /*+use_nl(t1, t2)*/ * from t1 where exists (select 1 from t2 where t1.c1 =  t2.c2);
+------+----+
| c1   | c2 |
+------+----+
|    1 |  1 |
|    1 |  2 |
|    3 |  5 |
+------+----+

EXPLAIN select /*+use_nl(t1, t2)*/ * from t1 where exists (select 1 from t2 where t1.c1 =  t2.c1);
Query Plan
=================================================
|ID|OPERATOR         |NAME|EST.ROWS|EST.TIME(us)|
-------------------------------------------------
|0 |NESTED-LOOP JOIN |    |4       |83          |
|1 |├─TABLE FULL SCAN|t1  |5       |3           |
|2 |└─TABLE GET      |t2  |1       |16          |
=================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2]), filter(nil), rowset=16
      conds(nil), nl_params_([t1.c1(:0)]), use_batch=true
  1 - output([t1.c2], [t1.c1]), filter(nil), rowset=16
      access([t1.c2], [t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2]), range(MIN ; MAX)always true
  2 - output(nil), filter(nil), rowset=16
      access([GROUP_ID]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1]), range(MIN ; MAX), 
      range_cond([:0 = t2.c1])
select /*+use_nl(t1, t2)*/ * from t1 where exists (select 1 from t2 where t1.c1 =  t2.c1);
+------+----+
| c1   | c2 |
+------+----+
|    1 |  1 |
|    1 |  2 |
|    3 |  5 |
+------+----+


EXPLAIN select /*+use_nl(t1, t2)*/ * from t1 where not exists (select 1 from t2 where t1.c1 =  t2.c2);
Query Plan
======================================================
|ID|OPERATOR              |NAME|EST.ROWS|EST.TIME(us)|
------------------------------------------------------
|0 |NESTED-LOOP ANTI JOIN |    |1       |3           |
|1 |├─TABLE FULL SCAN     |t1  |5       |3           |
|2 |└─MATERIAL            |    |4       |3           |
|3 |  └─TABLE FULL SCAN   |t2  |4       |3           |
======================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2]), filter(nil), rowset=16
      conds([t1.c1 = t2.c2]), nl_params_(nil), use_batch=false
  1 - output([t1.c2], [t1.c1]), filter(nil), rowset=16
      access([t1.c2], [t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2]), range(MIN ; MAX)always true
  2 - output([t2.c2]), filter(nil), rowset=16
  3 - output([t2.c2]), filter(nil), rowset=16
      access([t2.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1]), range(MIN ; MAX)always true
select /*+use_nl(t1, t2)*/ * from t1 where not exists (select 1 from t2 where t1.c1 =  t2.c2);
+------+----+
| c1   | c2 |
+------+----+
| NULL |  3 |
|    2 |  4 |
+------+----+

EXPLAIN select /*+use_nl(t1, t2)*/ * from t1 where not exists (select 1 from t2 where t1.c1 =  t2.c1);
Query Plan
======================================================
|ID|OPERATOR              |NAME|EST.ROWS|EST.TIME(us)|
------------------------------------------------------
|0 |NESTED-LOOP ANTI JOIN |    |1       |96          |
|1 |├─TABLE FULL SCAN     |t1  |5       |3           |
|2 |└─TABLE GET           |t2  |1       |18          |
======================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2]), filter(nil), rowset=16
      conds(nil), nl_params_([t1.c1(:0)]), use_batch=false
  1 - output([t1.c2], [t1.c1]), filter(nil), rowset=16
      access([t1.c2], [t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2]), range(MIN ; MAX)always true
  2 - output(nil), filter(nil), rowset=16
      access(nil), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1]), range(MIN ; MAX), 
      range_cond([:0 = t2.c1])
select /*+use_nl(t1, t2)*/ * from t1 where not exists (select 1 from t2 where t1.c1 =  t2.c1);
+------+----+
| c1   | c2 |
+------+----+
| NULL |  3 |
|    2 |  4 |
+------+----+

drop table t1;
drop table t2;

