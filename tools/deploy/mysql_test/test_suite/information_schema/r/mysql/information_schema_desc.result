use information_schema;
desc character_sets;
Field	Type	Null	Key	Default	Extra
CHARACTER_SET_NAME	varchar(128)	NO			
DEFAULT_COLLATE_NAME	varchar(128)	NO			
DESCRIPTION	varchar(64)	NO			
MAXLEN	bigint(20)	NO			
desc collation_character_set_applicability;
Field	Type	Null	Key	Default	Extra
COLLATION_NAME	varchar(128)	NO			
CHARACTER_SET_NAME	varchar(128)	NO			
desc collations;
Field	Type	Null	Key	Default	Extra
COLLATION_NAME	varchar(128)	NO			
CHARACTER_SET_NAME	varchar(128)	NO			
ID	bigint(20)	NO			
IS_DEFAULT	varchar(4)	NO			
IS_COMPILED	varchar(4)	NO			
SORTLEN	bigint(20)	NO			
desc columns;
Field	Type	Null	Key	Default	Extra
TABLE_CATALOG	varchar(4096)	NO			
TABLE_SCHEMA	varchar(128)	NO		NULL	
TABLE_NAME	varchar(256)	NO		NULL	
COLUMN_NAME	varchar(128)	NO			
ORDINAL_POSITION	bigint(20) unsigned	NO			
COLUMN_DEFAULT	longtext	YES		NULL	
IS_NULLABLE	varchar(4)	NO			
DATA_TYPE	longtext	NO			
CHARACTER_MAXIMUM_LENGTH	bigint(20) unsigned	YES		NULL	
CHARACTER_OCTET_LENGTH	bigint(20) unsigned	YES		NULL	
NUMERIC_PRECISION	bigint(20) unsigned	YES		NULL	
NUMERIC_SCALE	bigint(20) unsigned	YES		NULL	
DATETIME_PRECISION	bigint(20) unsigned	YES		NULL	
CHARACTER_SET_NAME	varchar(128)	YES		NULL	
COLLATION_NAME	varchar(128)	YES		NULL	
COLUMN_TYPE	longtext	NO		NULL	
COLUMN_KEY	varchar(3)	NO			
EXTRA	varchar(4096)	NO			
PRIVILEGES	varchar(200)	NO			
COLUMN_COMMENT	longtext	NO			
GENERATION_EXPRESSION	longtext	NO			
SRS_ID	int(10) unsigned	YES		NULL	
desc global_status;
Field	Type	Null	Key	Default	Extra
VARIABLE_NAME	varchar(128)	NO			
VARIABLE_VALUE	varchar(1024)	YES		NULL	
desc global_variables;
Field	Type	Null	Key	Default	Extra
VARIABLE_NAME	varchar(128)	NO			
VARIABLE_VALUE	varchar(65536)	YES		NULL	
desc key_column_usage;
Field	Type	Null	Key	Default	Extra
CONSTRAINT_CATALOG	varchar(3)	NO			
CONSTRAINT_SCHEMA	varchar(128)	NO			
CONSTRAINT_NAME	varchar(7)	NO			
TABLE_CATALOG	varchar(3)	NO			
TABLE_SCHEMA	varchar(128)	NO			
TABLE_NAME	varchar(256)	NO			
COLUMN_NAME	varchar(128)	NO			
ORDINAL_POSITION	bigint(20)	NO			
POSITION_IN_UNIQUE_CONSTRAINT	bigint(0) unsigned	NO			
REFERENCED_TABLE_SCHEMA	varchar(64)	NO			
REFERENCED_TABLE_NAME	varchar(64)	NO			
REFERENCED_COLUMN_NAME	varchar(64)	NO			
desc partitions;
Field	Type	Null	Key	Default	Extra
TABLE_CATALOG	text	NO			
TABLE_SCHEMA	varchar(128)	NO			
TABLE_NAME	varchar(256)	NO			
PARTITION_NAME	varchar(64)	NO			
SUBPARTITION_NAME	varchar(64)	NO			
PARTITION_ORDINAL_POSITION	bigint(20) unsigned	NO			
SUBPARTITION_ORDINAL_POSITION	bigint(20) unsigned	NO			
PARTITION_METHOD	varchar(13)	NO			
SUBPARTITION_METHOD	varchar(13)	NO			
PARTITION_EXPRESSION	text	NO			
SUBPARTITION_EXPRESSION	text	NO			
PARTITION_DESCRIPTION	text	NO			
SUBPARTITION_DESCRIPTION	text	NO			
TABLE_ROWS	bigint(20) unsigned	NO		NULL	
AVG_ROW_LENGTH	bigint(21) unsigned	NO		NULL	
DATA_LENGTH	bigint(20) unsigned	NO			
MAX_DATA_LENGTH	bigint(0) unsigned	NO			
INDEX_LENGTH	bigint(21) unsigned	NO			
DATA_FREE	bigint(0) unsigned	NO			
CREATE_TIME	timestamp(6)	YES		NULL	
UPDATE_TIME	datetime	NO			
CHECK_TIME	datetime	NO			
CHECKSUM	bigint(0)	NO			
PARTITION_COMMENT	text	NO			
NODEGROUP	varchar(256)	NO			
TABLESPACE_NAME	varchar(268)	NO		NULL	
desc processlist;
Field	Type	Null	Key	Default	Extra
ID	bigint(20) unsigned	NO			
USER	varchar(32)	NO			
HOST	varchar(67)	YES		NULL	
DB	varchar(128)	YES		NULL	
COMMAND	varchar(4096)	NO			
TIME	bigint(21)	NO		NULL	
STATE	varchar(128)	YES		NULL	
INFO	varchar(262143)	YES		NULL	
desc schema_privileges;
Field	Type	Null	Key	Default	Extra
GRANTEE	varchar(81)	NO			
TABLE_CATALOG	varchar(512)	NO			
TABLE_SCHEMA	varchar(128)	NO			
PRIVILEGE_TYPE	varchar(64)	NO			
IS_GRANTABLE	varchar(3)	NO			
desc schemata;
Field	Type	Null	Key	Default	Extra
CATALOG_NAME	varchar(3)	NO			
SCHEMA_NAME	varchar(128)	NO			
DEFAULT_CHARACTER_SET_NAME	varchar(128)	NO			
DEFAULT_COLLATION_NAME	varchar(128)	NO			
SQL_PATH	varchar(512)	NO			
DEFAULT_ENCRYPTION	varchar(2)	NO			
desc session_status;
Field	Type	Null	Key	Default	Extra
VARIABLE_NAME	varchar(128)	NO			
VARIABLE_VALUE	varchar(1024)	YES		NULL	
desc session_variables;
Field	Type	Null	Key	Default	Extra
VARIABLE_NAME	varchar(128)	NO			
VARIABLE_VALUE	varchar(1024)	YES		NULL	
desc statistics;
Field	Type	Null	Key	Default	Extra
TABLE_CATALOG	varchar(512)	NO			
TABLE_SCHEMA	varchar(128)	NO			
TABLE_NAME	varchar(256)	NO			
NON_UNIQUE	bigint(20)	NO			
INDEX_SCHEMA	varchar(128)	NO			
INDEX_NAME	varchar(256)	NO			
SEQ_IN_INDEX	bigint(20) unsigned	NO			
COLUMN_NAME	varchar(128)	NO			
COLLATION	varchar(1)	NO			
CARDINALITY	bigint(0)	NO			
SUB_PART	bigint(20)	NO			
PACKED	varchar(10)	NO			
NULLABLE	varchar(3)	NO			
INDEX_TYPE	varchar(16)	NO			
COMMENT	varchar(16)	NO			
INDEX_COMMENT	text	NO			
IS_VISIBLE	varchar(3)	NO			
EXPRESSION	varbinary(262144)	NO			
desc table_constraints;
Field	Type	Null	Key	Default	Extra
CONSTRAINT_CATALOG	varchar(64)	NO			
CONSTRAINT_SCHEMA	varchar(128)	NO			
CONSTRAINT_NAME	varchar(256)	NO			
TABLE_SCHEMA	varchar(128)	NO			
TABLE_NAME	varchar(256)	NO			
CONSTRAINT_TYPE	varchar(11)	NO			
ENFORCED	varchar(3)	NO			
desc table_privileges;
Field	Type	Null	Key	Default	Extra
GRANTEE	varchar(81)	NO			
TABLE_CATALOG	varchar(512)	NO			
TABLE_SCHEMA	varchar(128)	NO			
TABLE_NAME	varchar(64)	NO			
PRIVILEGE_TYPE	varchar(64)	NO			
IS_GRANTABLE	varchar(3)	NO			
desc tables;
Field	Type	Null	Key	Default	Extra
TABLE_CATALOG	varchar(512)	NO			
TABLE_SCHEMA	varchar(64)	NO			
TABLE_NAME	varchar(64)	NO			
TABLE_TYPE	varchar(64)	NO			
ENGINE	varchar(64)	NO			
VERSION	bigint(0) unsigned	NO			
ROW_FORMAT	varchar(10)	NO			
TABLE_ROWS	bigint(20) unsigned	NO			
AVG_ROW_LENGTH	bigint(21) unsigned	NO			
DATA_LENGTH	bigint(20) unsigned	NO			
MAX_DATA_LENGTH	bigint(0) unsigned	NO			
INDEX_LENGTH	bigint(21) unsigned	NO			
DATA_FREE	bigint(0) unsigned	NO			
AUTO_INCREMENT	bigint(0) unsigned	NO			
CREATE_TIME	datetime	NO			
UPDATE_TIME	datetime	NO			
CHECK_TIME	datetime	NO			
TABLE_COLLATION	varchar(32)	NO			
CHECKSUM	bigint(0) unsigned	NO			
CREATE_OPTIONS	varchar(255)	NO			
TABLE_COMMENT	text	NO			
AUTO_SPLIT	varchar(16)	NO			
AUTO_SPLIT_TABLET_SIZE	bigint(20) unsigned	NO			
ORGANIZATION	varchar(12)	NO			
desc user_privileges;
Field	Type	Null	Key	Default	Extra
GRANTEE	varchar(81)	NO			
TABLE_CATALOG	varchar(512)	NO			
PRIVILEGE_TYPE	varchar(64)	NO			
IS_GRANTABLE	varchar(3)	NO			
desc views;
Field	Type	Null	Key	Default	Extra
TABLE_CATALOG	varchar(64)	NO			
TABLE_SCHEMA	varchar(128)	NO			
TABLE_NAME	varchar(256)	NO			
VIEW_DEFINITION	longtext	NO		NULL	
CHECK_OPTION	varchar(8)	NO		NULL	
IS_UPDATABLE	varchar(3)	NO		NULL	
DEFINER	varchar(288)	NO			
SECURITY_TYPE	varchar(7)	NO			
CHARACTER_SET_CLIENT	varchar(64)	NO			
COLLATION_CONNECTION	varchar(64)	NO			
show create table  character_sets;
View	Create View	character_set_client	collation_connection
CHARACTER_SETS	CREATE VIEW `CHARACTER_SETS` AS    SELECT CHARSET AS CHARACTER_SET_NAME, DEFAULT_COLLATION AS DEFAULT_COLLATE_NAME, DESCRIPTION, max_length AS MAXLEN FROM oceanbase.__tenant_virtual_charset 	utf8mb4	utf8mb4_general_ci
show create table  collation_character_set_applicability;
View	Create View	character_set_client	collation_connection
COLLATION_CHARACTER_SET_APPLICABILITY	CREATE VIEW `COLLATION_CHARACTER_SET_APPLICABILITY` AS select collation as COLLATION_NAME, charset as CHARACTER_SET_NAME from oceanbase.__tenant_virtual_collation 	utf8mb4	utf8mb4_general_ci
show create table  collations;
View	Create View	character_set_client	collation_connection
COLLATIONS	CREATE VIEW `COLLATIONS` AS select collation as COLLATION_NAME, charset as CHARACTER_SET_NAME, id as ID, `is_default` as IS_DEFAULT, is_compiled as IS_COMPILED, sortlen as SORTLEN from oceanbase.__tenant_virtual_collation 	utf8mb4	utf8mb4_general_ci
show create table  columns;
View	Create View	character_set_client	collation_connection
COLUMNS	CREATE VIEW `COLUMNS` AS SELECT TABLE_CATALOG,
                    TABLE_SCHEMA collate utf8mb4_name_case as TABLE_SCHEMA,
                    TABLE_NAME collate utf8mb4_name_case as TABLE_NAME,
                    COLUMN_NAME,
                    ORDINAL_POSITION,
                    COLUMN_DEFAULT,
                    IS_NULLABLE,
                    DATA_TYPE,
                    CHARACTER_MAXIMUM_LENGTH,
                    CHARACTER_OCTET_LENGTH,
                    NUMERIC_PRECISION,
                    NUMERIC_SCALE,
                    DATETIME_PRECISION,
                    CHARACTER_SET_NAME,
                    COLLATION_NAME,
                    COLUMN_TYPE,
                    COLUMN_KEY,
                    EXTRA,
                    PRIVILEGES,
                    COLUMN_COMMENT,
                    GENERATION_EXPRESSION,
                    SRS_ID
  		    FROM OCEANBASE.__ALL_VIRTUAL_INFORMATION_COLUMNS where 0 = sys_privilege_check('table_acc', effective_tenant_id(), table_schema, table_name)	utf8mb4	utf8mb4_general_ci
show create table  global_status;
Table	Create Table
GLOBAL_STATUS	CREATE TABLE `GLOBAL_STATUS` (
  `VARIABLE_NAME` varchar(128) NOT NULL DEFAULT '',
  `VARIABLE_VALUE` varchar(1024) DEFAULT NULL
) ORGANIZATION INDEX DEFAULT CHARSET = utf8mb4 COMPRESSION = 'none' REPLICA_NUM = 1 BLOCK_SIZE = 16384 USE_BLOOM_FILTER = FALSE ENABLE_MACRO_BLOCK_BLOOM_FILTER = FALSE TABLET_SIZE = 134217728 PCTFREE = 10
show create table  global_variables;
View	Create View	character_set_client	collation_connection
GLOBAL_VARIABLES	CREATE VIEW `GLOBAL_VARIABLES` AS    SELECT `variable_name` as VARIABLE_NAME, `value` as VARIABLE_VALUE  FROM oceanbase.__tenant_virtual_global_variable 	utf8mb4	utf8mb4_general_ci
show create table  key_column_usage;
View	Create View	character_set_client	collation_connection
KEY_COLUMN_USAGE	CREATE VIEW `KEY_COLUMN_USAGE` AS                      (select 'def' as CONSTRAINT_CATALOG,                     c.database_name collate utf8mb4_name_case as  CONSTRAINT_SCHEMA,                     'PRIMARY' as CONSTRAINT_NAME, 'def' as TABLE_CATALOG,                     c.database_name collate utf8mb4_name_case as TABLE_SCHEMA,                     a.table_name collate utf8mb4_name_case as TABLE_NAME,                     b.column_name as COLUMN_NAME,                     b.rowkey_position as ORDINAL_POSITION,                     CAST(NULL AS UNSIGNED) as POSITION_IN_UNIQUE_CONSTRAINT,                     CAST(NULL AS CHAR(64)) as REFERENCED_TABLE_SCHEMA,                     CAST(NULL AS CHAR(64)) as REFERENCED_TABLE_NAME,                     CAST(NULL AS CHAR(64)) as REFERENCED_COLUMN_NAME                     from oceanbase.__all_table a                     join oceanbase.__all_column b                       on a.tenant_id = b.tenant_id and a.table_id = b.table_id                     join oceanbase.__all_database c                       on a.tenant_id = c.tenant_id and a.database_id = c.database_id                     where a.tenant_id = 0                       and a.table_mode >> 12 & 15 in (0,1)                       and a.index_attributes_set & 16 = 0                       and c.in_recyclebin = 0                       and c.database_name != '__recyclebin'                       and b.rowkey_position > 0                       and b.column_id >= 16                       and a.table_type != 5 and a.table_type != 12 and a.table_type != 13                       and b.column_flags & (0x1 << 8) = 0                       and (0 = sys_privilege_check('table_acc', effective_tenant_id())                            or 0 = sys_privilege_check('table_acc', effective_tenant_id(), c.database_name, a.table_name)))                      union all                     (select 'def' as CONSTRAINT_CATALOG,                     d.database_name collate utf8mb4_name_case as CONSTRAINT_SCHEMA,                     substr(a.table_name, 2 + length(substring_index(a.table_name,'_',4))) as CONSTRAINT_NAME,                     'def' as TABLE_CATALOG,                     d.database_name collate utf8mb4_name_case as TABLE_SCHEMA,                     c.table_name collate utf8mb4_name_case as TABLE_NAME,                     b.column_name as COLUMN_NAME,                     b.index_position as ORDINAL_POSITION,                     CAST(NULL AS UNSIGNED) as POSITION_IN_UNIQUE_CONSTRAINT,                     CAST(NULL AS CHAR(64)) as REFERENCED_TABLE_SCHEMA,                     CAST(NULL AS CHAR(64)) as REFERENCED_TABLE_NAME,                     CAST(NULL AS CHAR(64)) as REFERENCED_COLUMN_NAME                     from oceanbase.__all_table a                     join oceanbase.__all_column b                       on a.tenant_id = b.tenant_id and a.table_id = b.table_id                     join oceanbase.__all_table c                       on a.tenant_id = c.tenant_id and a.data_table_id = c.table_id                     join oceanbase.__all_database d                       on a.tenant_id = d.tenant_id and c.database_id = d.database_id                     where a.tenant_id = 0                       and d.in_recyclebin = 0                       and d.database_name != '__recyclebin'                       and a.table_type = 5                       and a.index_type in (2, 4, 8, 41)                       and b.index_position > 0                       and (0 = sys_privilege_check('table_acc', effective_tenant_id())                            or 0 = sys_privilege_check('table_acc', effective_tenant_id(), d.database_name, c.table_name))                      union all                     (select 'def' as CONSTRAINT_CATALOG,                     d.database_name collate utf8mb4_name_case as CONSTRAINT_SCHEMA,                     f.foreign_key_name as CONSTRAINT_NAME,                     'def' as TABLE_CATALOG,                     d.database_name collate utf8mb4_name_case as TABLE_SCHEMA,                     t.table_name collate utf8mb4_name_case as TABLE_NAME,                     c.column_name as COLUMN_NAME,                     fc.position as ORDINAL_POSITION,                     CAST(fc.position AS UNSIGNED) as POSITION_IN_UNIQUE_CONSTRAINT,                     d2.database_name as REFERENCED_TABLE_SCHEMA,                     t2.table_name as REFERENCED_TABLE_NAME,                     c2.column_name as REFERENCED_COLUMN_NAME                     from                     oceanbase.__all_foreign_key f                     join oceanbase.__all_table t                       on f.tenant_id = t.tenant_id and f.child_table_id = t.table_id                     join oceanbase.__all_database d                       on f.tenant_id = d.tenant_id and t.database_id = d.database_id                     join oceanbase.__all_foreign_key_column fc                       on f.tenant_id = fc.tenant_id and f.foreign_key_id = fc.foreign_key_id                     join oceanbase.__all_column c                       on f.tenant_id = c.tenant_id and fc.child_column_id = c.column_id and t.table_id = c.table_id                     join oceanbase.__all_table t2                       on f.tenant_id = t2.tenant_id and f.parent_table_id = t2.table_id                     join oceanbase.__all_database d2                       on f.tenant_id = d2.tenant_id and t2.database_id = d2.database_id                     join oceanbase.__all_column c2                       on f.tenant_id = c2.tenant_id and fc.parent_column_id = c2.column_id and t2.table_id = c2.table_id                     where f.tenant_id = 0                       and (0 = sys_privilege_check('table_acc', effective_tenant_id())                            or 0 = sys_privilege_check('table_acc', effective_tenant_id(), d.database_name, t.table_name))                      union all                     (select 'def' as CONSTRAINT_CATALOG,                     d.database_name collate utf8mb4_name_case as CONSTRAINT_SCHEMA,                     f.foreign_key_name as CONSTRAINT_NAME,                     'def' as TABLE_CATALOG,                     d.database_name collate utf8mb4_name_case as TABLE_SCHEMA,                     t.table_name collate utf8mb4_name_case as TABLE_NAME,                     c.column_name as COLUMN_NAME,                     fc.position as ORDINAL_POSITION,                     CAST(fc.position AS UNSIGNED) as POSITION_IN_UNIQUE_CONSTRAINT,                     d.database_name as REFERENCED_TABLE_SCHEMA,                     t2.mock_fk_parent_table_name as REFERENCED_TABLE_NAME,                     c2.parent_column_name as REFERENCED_COLUMN_NAME                     from oceanbase.__all_foreign_key f                     join oceanbase.__all_table t                       on f.tenant_id = t.tenant_id and f.child_table_id = t.table_id                     join oceanbase.__all_database d                       on f.tenant_id = d.tenant_id and t.database_id = d.database_id                     join oceanbase.__all_foreign_key_column fc                       on f.tenant_id = fc.tenant_id and f.foreign_key_id = fc.foreign_key_id                     join oceanbase.__all_column c                       on f.tenant_id = c.tenant_id and fc.child_column_id = c.column_id and t.table_id = c.table_id                     join oceanbase.__all_mock_fk_parent_table t2                       on f.tenant_id = t2.tenant_id and f.parent_table_id = t2.mock_fk_parent_table_id                     join oceanbase.__all_mock_fk_parent_table_column c2                       on f.tenant_id = c2.tenant_id and fc.parent_column_id = c2.parent_column_id and t2.mock_fk_parent_table_id = c2.mock_fk_parent_table_id                     where f.tenant_id = 0                       and (0 = sys_privilege_check('table_acc', effective_tenant_id())                            or 0 = sys_privilege_check('table_acc', effective_tenant_id(), d.database_name, t.table_name)))))                     	utf8mb4	utf8mb4_general_ci
show create table  partitions;
View	Create View	character_set_client	collation_connection
PARTITIONS	CREATE VIEW `PARTITIONS` AS SELECT   CAST('def' as CHAR(4096)) AS TABLE_CATALOG,   DB.DATABASE_NAME collate utf8mb4_name_case AS TABLE_SCHEMA,   T.TABLE_NAME collate utf8mb4_name_case AS TABLE_NAME,   P.PART_NAME AS PARTITION_NAME,   SP.SUB_PART_NAME AS SUBPARTITION_NAME,   CAST(PART_POSITION AS UNSIGNED) AS PARTITION_ORDINAL_POSITION,   CAST(SUB_PART_POSITION AS UNSIGNED) AS SUBPARTITION_ORDINAL_POSITION,   CAST(CASE WHEN T.PART_LEVEL = 0             THEN NULL             ELSE (CASE T.PART_FUNC_TYPE                     WHEN 0 THEN 'HASH'                     WHEN 1 THEN 'KEY'                     WHEN 2 THEN 'KEY'                     WHEN 3 THEN 'RANGE'                     WHEN 4 THEN 'RANGE COLUMNS'                     WHEN 5 THEN 'LIST'                     WHEN 6 THEN 'LIST COLUMNS'                     WHEN 7 THEN 'RANGE'                   END)        END AS CHAR(13)) PARTITION_METHOD,   CAST(CASE WHEN (T.PART_LEVEL = 0 OR T.PART_LEVEL = 1)             THEN NULL             ELSE (CASE T.SUB_PART_FUNC_TYPE                     WHEN 0 THEN 'HASH'                     WHEN 1 THEN 'KEY'                     WHEN 2 THEN 'KEY'                     WHEN 3 THEN 'RANGE'                     WHEN 4 THEN 'RANGE COLUMNS'                     WHEN 5 THEN 'LIST'                     WHEN 6 THEN 'LIST COLUMNS'                     WHEN 7 THEN 'RANGE'                   END)        END AS CHAR(13)) SUBPARTITION_METHOD,   CAST(CASE WHEN (T.PART_LEVEL = 0)             THEN NULL             ELSE T.PART_FUNC_EXPR        END AS CHAR(2048)) PARTITION_EXPRESSION,   CAST(CASE WHEN (T.PART_LEVEL = 0 OR T.PART_LEVEL = 1)             THEN NULL             ELSE T.SUB_PART_FUNC_EXPR        END AS CHAR(2048)) SUBPARTITION_EXPRESSION,   CAST(CASE WHEN (T.PART_LEVEL = 0)             THEN NULL             ELSE (CASE WHEN LENGTH(P.HIGH_BOUND_VAL) > 0                        THEN P.HIGH_BOUND_VAL                        ELSE P.LIST_VAL                   END)        END AS CHAR(4096)) AS PARTITION_DESCRIPTION,   CAST(CASE WHEN (T.PART_LEVEL = 0 OR T.PART_LEVEL = 1)             THEN NULL             ELSE (CASE WHEN LENGTH(SP.HIGH_BOUND_VAL) > 0                        THEN SP.HIGH_BOUND_VAL                        ELSE SP.LIST_VAL                   END)        END AS CHAR(4096)) AS SUBPARTITION_DESCRIPTION,   CAST(TS.ROW_CNT AS UNSIGNED) AS TABLE_ROWS,   CAST(TS.AVG_ROW_LEN AS UNSIGNED) AS AVG_ROW_LENGTH,   CAST(COALESCE(TS.MACRO_BLK_CNT * 2 * 1024 * 1024, 0) AS UNSIGNED) AS DATA_LENGTH,   CAST(NULL AS UNSIGNED) AS MAX_DATA_LENGTH,   CAST(COALESCE(IDX_STAT.INDEX_LENGTH, 0) AS UNSIGNED) AS INDEX_LENGTH,   CAST(NULL AS UNSIGNED) AS DATA_FREE,   CASE T.PART_LEVEL     WHEN 0 THEN T.GMT_CREATE     WHEN 1 THEN P.GMT_CREATE     WHEN 2 THEN SP.GMT_CREATE   END AS CREATE_TIME,   CAST(NULL AS DATETIME) AS UPDATE_TIME,   CAST(NULL AS DATETIME) AS CHECK_TIME,   CAST(NULL AS SIGNED) AS CHECKSUM,   CAST(CASE T.PART_LEVEL          WHEN 0 THEN NULL          WHEN 1 THEN P.COMMENT          WHEN 2 THEN SP.COMMENT        END AS CHAR(1024)) AS PARTITION_COMMENT,   CAST('default' AS CHAR(256)) NODEGROUP,   CAST(TP.TABLESPACE_NAME AS CHAR(268)) AS TABLESPACE_NAME FROM   OCEANBASE.__ALL_TABLE T   JOIN OCEANBASE.__ALL_DATABASE DB ON T.DATABASE_ID = DB.DATABASE_ID AND T.TENANT_ID = DB.TENANT_ID      AND T.TABLE_MODE >> 12 & 15 in (0,1)     AND T.INDEX_ATTRIBUTES_SET & 16 = 0   LEFT JOIN (       SELECT         TENANT_ID,         TABLE_ID,         PART_ID,         PART_NAME,         HIGH_BOUND_VAL,         LIST_VAL,         TABLESPACE_ID,         GMT_CREATE,         COMMENT,         PARTITION_TYPE,         PART_IDX,         ROW_NUMBER() OVER(PARTITION BY TENANT_ID,TABLE_ID ORDER BY PART_IDX) AS PART_POSITION       FROM OCEANBASE.__ALL_PART   ) P ON T.TABLE_ID = P.TABLE_ID AND T.TENANT_ID = P.TENANT_ID   LEFT JOIN (     SELECT         TENANT_ID,         TABLE_ID,         PART_ID,         SUB_PART_ID,         SUB_PART_NAME,         HIGH_BOUND_VAL,         LIST_VAL,         TABLESPACE_ID,         GMT_CREATE,         COMMENT,         PARTITION_TYPE,         SUB_PART_IDX,         ROW_NUMBER() OVER(PARTITION BY TENANT_ID,TABLE_ID,PART_ID ORDER BY SUB_PART_IDX) AS SUB_PART_POSITION     FROM OCEANBASE.__ALL_SUB_PART   ) SP ON T.TABLE_ID = SP.TABLE_ID AND P.PART_ID = SP.PART_ID AND T.TENANT_ID = SP.TENANT_ID   LEFT JOIN OCEANBASE.__ALL_TENANT_TABLESPACE TP ON TP.TABLESPACE_ID = IFNULL(SP.TABLESPACE_ID, P.TABLESPACE_ID) AND TP.TENANT_ID = T.TENANT_ID   LEFT JOIN OCEANBASE.__ALL_TABLE_STAT TS ON T.TENANT_ID = TS.TENANT_ID AND TS.TABLE_ID = T.TABLE_ID AND TS.PARTITION_ID = CASE T.PART_LEVEL WHEN 0 THEN T.TABLE_ID WHEN 1 THEN P.PART_ID WHEN 2 THEN SP.SUB_PART_ID END   LEFT JOIN (     SELECT E.TENANT_ID AS TENANT_ID,     		E.DATA_TABLE_ID AS DATA_TABLE_ID,         F.PART_IDX AS PART_IDX,         SF.SUB_PART_IDX AS SUB_PART_IDX,            SUM(G.macro_blk_cnt * 2 * 1024 * 1024) AS INDEX_LENGTH     FROM OCEANBASE.__ALL_TABLE E LEFT JOIN OCEANBASE.__ALL_PART F ON E.TENANT_ID = F.TENANT_ID AND E.TABLE_ID = F.TABLE_ID                                  LEFT JOIN OCEANBASE.__ALL_SUB_PART SF ON E.TENANT_ID = SF.TENANT_ID AND E.TABLE_ID = SF.TABLE_ID AND F.PART_ID = SF.PART_ID          JOIN OCEANBASE.__ALL_TABLE_STAT G ON E.TENANT_ID = G.TENANT_ID AND E.TABLE_ID = G.TABLE_ID AND G.PARTITION_ID = CASE E.PART_LEVEL WHEN 0 THEN E.TABLE_ID WHEN 1 THEN F.PART_ID WHEN 2 THEN SF.SUB_PART_ID END     WHERE E.INDEX_TYPE in (1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 41) AND E.TABLE_TYPE = 5 GROUP BY TENANT_ID, DATA_TABLE_ID, PART_IDX, SUB_PART_IDX   ) IDX_STAT ON IDX_STAT.TENANT_ID = T.TENANT_ID AND                 IDX_STAT.DATA_TABLE_ID = T.TABLE_ID AND                 CASE T.PART_LEVEL WHEN 0 THEN 1 WHEN 1 THEN P.PART_IDX = IDX_STAT.PART_IDX WHEN 2 THEN P.PART_IDX = IDX_STAT.PART_IDX AND SP.SUB_PART_IDX = IDX_STAT.SUB_PART_IDX END WHERE T.TABLE_TYPE IN (3,6,8,9,14,15)       AND (P.PARTITION_TYPE = 0 OR P.PARTITION_TYPE is NULL)       AND (SP.PARTITION_TYPE = 0 OR SP.PARTITION_TYPE is NULL)       AND (0 = sys_privilege_check('table_acc', effective_tenant_id())            OR 0 = sys_privilege_check('table_acc', effective_tenant_id(), DB.DATABASE_NAME, T.TABLE_NAME))   	utf8mb4	utf8mb4_general_ci
show create table  processlist;
View	Create View	character_set_client	collation_connection
PROCESSLIST	CREATE VIEW `PROCESSLIST` AS SELECT id AS ID, user AS USER, concat(user_client_ip, ':', user_client_port) AS HOST, db AS DB, command AS COMMAND, cast(time as SIGNED) AS TIME, state AS STATE, info AS INFO FROM oceanbase.__all_virtual_processlist WHERE  is_serving_tenant(svr_ip, svr_port, effective_tenant_id()) 	utf8mb4	utf8mb4_general_ci
show create table  schema_privileges;
View	Create View	character_set_client	collation_connection
SCHEMA_PRIVILEGES	CREATE VIEW `SCHEMA_PRIVILEGES` AS    WITH DB_PRIV AS (     select A.tenant_id TENANT_ID,            A.user_id USER_ID,            A.database_name DATABASE_NAME,            A.priv_alter PRIV_ALTER,            A.priv_create PRIV_CREATE,            A.priv_delete PRIV_DELETE,            A.priv_drop PRIV_DROP,            A.priv_grant_option PRIV_GRANT_OPTION,            A.priv_insert PRIV_INSERT,            A.priv_update PRIV_UPDATE,            A.priv_select PRIV_SELECT,            A.priv_index PRIV_INDEX,            A.priv_create_view PRIV_CREATE_VIEW,            A.priv_show_view PRIV_SHOW_VIEW,            A.priv_others PRIV_OTHERS     from oceanbase.__all_database_privilege_history A,          (select tenant_id, user_id, database_name, max(schema_version) schema_version from oceanbase.__all_database_privilege_history group by tenant_id, user_id, database_name, database_name collate utf8mb4_bin) B     where A.tenant_id = B.tenant_id and A.user_id = B.user_id and A.database_name collate utf8mb4_bin = B.database_name collate utf8mb4_bin and A.schema_version = B.schema_version and A.is_deleted = 0   )   SELECT CAST(CONCAT('''', V.USER_NAME, '''', '@', '''', V.HOST, '''') AS CHAR(81)) AS GRANTEE ,          CAST('def' AS CHAR(512)) AS TABLE_CATALOG ,          CAST(V.DATABASE_NAME AS CHAR(128)) collate utf8mb4_name_case AS TABLE_SCHEMA ,          CAST(V.PRIVILEGE_TYPE AS CHAR(64)) AS PRIVILEGE_TYPE ,          CAST(V.IS_GRANTABLE AS CHAR(3)) AS IS_GRANTABLE   FROM     (SELECT DP.DATABASE_NAME DATABASE_NAME,             U.USER_NAME AS USER_NAME,             U.HOST AS HOST,             CASE                 WHEN V1.C1 = 1                      AND DP.PRIV_ALTER = 1 THEN 'ALTER'                 WHEN V1.C1 = 2                      AND DP.PRIV_CREATE = 1 THEN 'CREATE'                 WHEN V1.C1 = 4                      AND DP.PRIV_DELETE = 1 THEN 'DELETE'                 WHEN V1.C1 = 5                      AND DP.PRIV_DROP = 1 THEN 'DROP'                 WHEN V1.C1 = 7                      AND DP.PRIV_INSERT = 1 THEN 'INSERT'                 WHEN V1.C1 = 8                      AND DP.PRIV_UPDATE = 1 THEN 'UPDATE'                 WHEN V1.C1 = 9                      AND DP.PRIV_SELECT = 1 THEN 'SELECT'                 WHEN V1.C1 = 10                      AND DP.PRIV_INDEX = 1 THEN 'INDEX'                 WHEN V1.C1 = 11                      AND DP.PRIV_CREATE_VIEW = 1 THEN 'CREATE VIEW'                 WHEN V1.C1 = 12                      AND DP.PRIV_SHOW_VIEW = 1 THEN 'SHOW VIEW'                 WHEN V1.C1 = 22                      AND (DP.PRIV_OTHERS & (1 << 6)) != 0 THEN 'REFERENCES'                 WHEN V1.C1 = 23                      AND (DP.PRIV_OTHERS & (1 << 0)) != 0 THEN 'EXECUTE'                 WHEN V1.C1 = 37                      AND (DP.PRIV_OTHERS & (1 << 1)) != 0 THEN 'ALTER ROUTINE'                 WHEN V1.C1 = 38                      AND (DP.PRIV_OTHERS & (1 << 2)) != 0 THEN 'CREATE ROUTINE'                 WHEN V1.C1 = 44                      AND (DP.PRIV_OTHERS & (1 << 9)) != 0 THEN 'TRIGGER'                 ELSE NULL             END PRIVILEGE_TYPE ,             CASE                 WHEN DP.PRIV_GRANT_OPTION = 1 THEN 'YES'                 WHEN DP.PRIV_GRANT_OPTION = 0 THEN 'NO'             END IS_GRANTABLE      FROM DB_PRIV DP,                       oceanbase.__all_user U,        (SELECT 1 AS C1         UNION ALL SELECT 2 AS C1         UNION ALL SELECT 4 AS C1         UNION ALL SELECT 5 AS C1         UNION ALL SELECT 7 AS C1         UNION ALL SELECT 8 AS C1         UNION ALL SELECT 9 AS C1         UNION ALL SELECT 10 AS C1         UNION ALL SELECT 11 AS C1         UNION ALL SELECT 12 AS C1         UNION ALL SELECT 22 AS C1         UNION ALL SELECT 23 AS C1         UNION ALL SELECT 37 AS C1         UNION ALL SELECT 38 AS C1         UNION ALL SELECT 44 AS C1) V1,        (SELECT USER_ID         FROM oceanbase.__all_user         WHERE TENANT_ID= 0           AND CONCAT(USER_NAME, '@', HOST) = CURRENT_USER()) CURR      LEFT JOIN        (SELECT USER_ID         FROM DB_PRIV         WHERE TENANT_ID = 0           AND DATABASE_NAME = 'mysql'           AND PRIV_SELECT = 1) DB ON CURR.USER_ID = DB.USER_ID      WHERE DP.TENANT_ID = 0        AND DP.TENANT_ID = U.TENANT_ID        AND DP.USER_ID = U.USER_ID        AND DP.DATABASE_NAME != '__recyclebin'        AND DP.DATABASE_NAME != '__public'        AND DP.DATABASE_NAME != 'SYS'        AND DP.DATABASE_NAME != 'LBACSYS'        AND DP.DATABASE_NAME != 'ORAAUDITOR'        AND (DB.USER_ID IS NOT NULL             OR 512 & CURRENT_USER_PRIV() = 512             OR DP.USER_ID = CURR.USER_ID)) V   WHERE V.PRIVILEGE_TYPE IS NOT NULL   	utf8mb4	utf8mb4_general_ci
show create table  schemata;
View	Create View	character_set_client	collation_connection
SCHEMATA	CREATE VIEW `SCHEMATA` AS    SELECT 'def' AS CATALOG_NAME,          DATABASE_NAME collate utf8mb4_name_case AS SCHEMA_NAME,          b.charset AS DEFAULT_CHARACTER_SET_NAME,          b.collation AS DEFAULT_COLLATION_NAME,          CAST(NULL AS CHAR(512)) as SQL_PATH,          'NO' as DEFAULT_ENCRYPTION   FROM oceanbase.__all_database a inner join oceanbase.__tenant_virtual_collation b ON a.collation_type = b.collation_type   WHERE a.tenant_id = 0     and in_recyclebin = 0     and a.database_name not in ('__recyclebin', '__public')     and 0 = sys_privilege_check('db_acc', 0, a.database_name)   ORDER BY a.database_id 	utf8mb4	utf8mb4_general_ci
show create table  session_status;
Table	Create Table
SESSION_STATUS	CREATE TABLE `SESSION_STATUS` (
  `VARIABLE_NAME` varchar(128) NOT NULL DEFAULT '',
  `VARIABLE_VALUE` varchar(1024) DEFAULT NULL
) ORGANIZATION INDEX DEFAULT CHARSET = utf8mb4 COMPRESSION = 'none' REPLICA_NUM = 1 BLOCK_SIZE = 16384 USE_BLOOM_FILTER = FALSE ENABLE_MACRO_BLOCK_BLOOM_FILTER = FALSE TABLET_SIZE = 134217728 PCTFREE = 10
show create table  session_variables;
Table	Create Table
SESSION_VARIABLES	CREATE TABLE `SESSION_VARIABLES` (
  `VARIABLE_NAME` varchar(128) NOT NULL DEFAULT '',
  `VARIABLE_VALUE` varchar(1024) DEFAULT NULL
) ORGANIZATION INDEX DEFAULT CHARSET = utf8mb4 COMPRESSION = 'none' REPLICA_NUM = 1 BLOCK_SIZE = 16384 USE_BLOOM_FILTER = FALSE ENABLE_MACRO_BLOCK_BLOOM_FILTER = FALSE TABLET_SIZE = 134217728 PCTFREE = 10
show create table  statistics;
View	Create View	character_set_client	collation_connection
STATISTICS	CREATE VIEW `STATISTICS` AS    SELECT CAST('def' AS             CHAR(512))    AS TABLE_CATALOG,          V.TABLE_SCHEMA collate utf8mb4_name_case AS TABLE_SCHEMA,          V.TABLE_NAME collate utf8mb4_name_case  AS TABLE_NAME,          CAST(V.NON_UNIQUE AS      SIGNED)       AS NON_UNIQUE,          V.INDEX_SCHEMA collate utf8mb4_name_case AS INDEX_SCHEMA,          V.INDEX_NAME collate utf8mb4_name_case  AS INDEX_NAME,          CAST(V.SEQ_IN_INDEX AS    UNSIGNED)     AS SEQ_IN_INDEX,          V.COLUMN_NAME                           AS COLUMN_NAME,          CAST('A' AS               CHAR(1))      AS COLLATION,          CAST(NULL AS              SIGNED)       AS CARDINALITY,          CAST(V.SUB_PART AS        SIGNED)       AS SUB_PART,          CAST(NULL AS              CHAR(10))     AS PACKED,          CAST(V.NULLABLE AS        CHAR(3))      AS NULLABLE,          CAST(V.INDEX_TYPE AS      CHAR(16))     AS INDEX_TYPE,          CAST(V.COMMENT AS         CHAR(16))     AS COMMENT,          CAST(V.INDEX_COMMENT AS   CHAR(1024))   AS INDEX_COMMENT,          CAST(V.IS_VISIBLE AS      CHAR(3))      AS IS_VISIBLE,          V.EXPRESSION                            AS EXPRESSION   FROM   (SELECT db.database_name                                              AS TABLE_SCHEMA,                  t.table_name                                                  AS TABLE_NAME,                  CASE WHEN i.index_type IN (2,4,8,41) THEN 0 ELSE 1 END        AS NON_UNIQUE,                  db.database_name                                              AS INDEX_SCHEMA,                  substr(i.table_name, 7 + instr(substr(i.table_name, 7), '_')) AS INDEX_NAME,                  c.index_position                                              AS SEQ_IN_INDEX,                  CASE WHEN d_col.column_name IS NOT NULL THEN d_col.column_name ELSE c.column_name END AS COLUMN_NAME,                  CASE WHEN d_col.column_name IS NOT NULL THEN c.data_length ELSE NULL END AS SUB_PART,                  CASE WHEN c.nullable = 1 THEN 'YES' ELSE '' END               AS NULLABLE,                  CASE WHEN i.index_type in (15, 18, 21) THEN 'FULLTEXT'                       WHEN i.index_using_type = 0 THEN 'BTREE'                       WHEN i.index_using_type = 1 THEN 'HASH'                       ELSE 'UNKOWN' END      AS INDEX_TYPE,                  CASE i.index_status                  WHEN 2 THEN 'VALID'                  WHEN 3 THEN 'CHECKING'                  WHEN 4 THEN 'INELEGIBLE'                  WHEN 5 THEN 'ERROR'                  ELSE 'UNUSABLE' END                                                  AS COMMENT,                  i.comment                                                     AS INDEX_COMMENT,                  CASE WHEN (i.index_attributes_set & 1) THEN 'NO' ELSE 'YES' END AS IS_VISIBLE,                  d_col2.cur_default_value_v2                                     AS EXPRESSION           FROM   oceanbase.__all_table i           JOIN   oceanbase.__all_table t           ON     i.data_table_id=t.table_id           AND    i.tenant_id = t.tenant_id           AND    i.database_id = t.database_id           AND    i.table_type = 5           AND    i.index_type NOT IN (13, 14, 16, 17, 19, 20, 22)           AND    i.table_mode >> 12 & 15 in (0,1)           AND    i.index_attributes_set & 16 = 0           AND    t.table_type in (0,3)           JOIN   oceanbase.__all_column c           ON     i.table_id=c.table_id           AND    i.tenant_id = c.tenant_id           AND    c.index_position > 0           JOIN   oceanbase.__all_database db           ON     i.tenant_id = db.tenant_id           AND    i.database_id = db.database_id           AND    db.in_recyclebin = 0           AND    db.database_name != '__recyclebin'           LEFT JOIN oceanbase.__all_column d_col           ON    i.data_table_id = d_col.table_id           AND   i.tenant_id = d_col.tenant_id           AND   (case when (c.is_hidden = 1 and substr(c.column_name, 1, 8) = '__substr') then                    substr(c.column_name, 8 + instr(substr(c.column_name, 8), '_')) else 0 end) = d_col.column_id           LEFT JOIN oceanbase.__all_column d_col2           ON    i.data_table_id = d_col2.table_id           AND   i.tenant_id = d_col2.tenant_id           AND   c.column_id = d_col2.column_id           AND   d_col2.cur_default_value_v2 is not null           AND   d_col2.is_hidden = 1           AND   (d_col2.column_flags & (0x1 << 0) = 1 or d_col2.column_flags & (0x1 << 1) = 1)           AND   substr(d_col2.column_name, 1, 6) = 'SYS_NC'         UNION ALL           SELECT  db.database_name  AS TABLE_SCHEMA,                   t.table_name      AS TABLE_NAME,                   0                 AS NON_UNIQUE,                   db.database_name  AS INDEX_SCHEMA,                   'PRIMARY'         AS INDEX_NAME,                   c.rowkey_position AS SEQ_IN_INDEX,                   c.column_name     AS COLUMN_NAME,                   NULL              AS SUB_PART,                   ''                AS NULLABLE,                   CASE WHEN t.index_using_type = 0 THEN 'BTREE' ELSE (                     CASE WHEN t.index_using_type = 1 THEN 'HASH' ELSE 'UNKOWN' END) END AS INDEX_TYPE,                   'VALID'          AS COMMENT,                   t.comment        AS INDEX_COMMENT,                   'YES'            AS IS_VISIBLE,                   NULL             AS EXPRESSION           FROM   oceanbase.__all_table t           JOIN   oceanbase.__all_column c           ON     t.table_id=c.table_id           AND    t.tenant_id = c.tenant_id           AND    c.rowkey_position > 0           AND    c.is_hidden = 0           AND    t.table_type in (0,3)           JOIN   oceanbase.__all_database db           ON     t.tenant_id = db.tenant_id           AND    t.database_id = db.database_id           AND    db.in_recyclebin = 0           AND    db.database_name != '__recyclebin'         UNION ALL           SELECT db.database_name                                           AS TABLE_SCHEMA,               t.table_name                                                  AS TABLE_NAME,               CASE WHEN i.index_type IN (2,4,8,41) THEN 0 ELSE 1 END        AS NON_UNIQUE,               db.database_name                                              AS INDEX_SCHEMA,               substr(i.table_name, 7 + instr(substr(i.table_name, 7), '_')) AS INDEX_NAME,               c.index_position                                              AS SEQ_IN_INDEX,               CASE WHEN d_col.column_name IS NOT NULL THEN d_col.column_name ELSE c.column_name END AS COLUMN_NAME,               CASE WHEN d_col.column_name IS NOT NULL THEN c.data_length ELSE NULL END AS SUB_PART,               CASE WHEN c.nullable = 1 THEN 'YES' ELSE '' END               AS NULLABLE,               CASE WHEN i.index_type in (15, 18, 21) THEN 'FULLTEXT'                    WHEN i.index_using_type = 0 THEN 'BTREE'                    WHEN i.index_using_type = 1 THEN 'HASH'                    ELSE 'UNKOWN' END      AS INDEX_TYPE,               CASE i.index_status               WHEN 2 THEN 'VALID'               WHEN 3 THEN 'CHECKING'               WHEN 4 THEN 'INELEGIBLE'               WHEN 5 THEN 'ERROR'               ELSE 'UNUSABLE' END                                           AS COMMENT,               i.comment                                                     AS INDEX_COMMENT,               CASE WHEN (i.index_attributes_set & 1) THEN 'NO' ELSE 'YES' END AS IS_VISIBLE,               d_col2.cur_default_value_v2                                   AS EXPRESSION           FROM   oceanbase.__ALL_VIRTUAL_CORE_ALL_TABLE i           JOIN   oceanbase.__ALL_VIRTUAL_CORE_ALL_TABLE t           ON     i.data_table_id=t.table_id           AND    i.tenant_id = t.tenant_id           AND    i.database_id = t.database_id           AND    i.table_type = 5           AND    i.index_type NOT IN (13, 14, 16, 17, 19, 20, 22)           AND    t.table_type in (0,3)           AND    t.tenant_id = EFFECTIVE_TENANT_ID()           JOIN   oceanbase.__ALL_VIRTUAL_CORE_COLUMN_TABLE c           ON     i.table_id=c.table_id           AND    i.tenant_id = c.tenant_id           AND    c.index_position > 0           JOIN   oceanbase.__all_database db           ON     i.database_id = db.database_id           LEFT JOIN oceanbase.__ALL_VIRTUAL_CORE_COLUMN_TABLE d_col           ON    i.data_table_id = d_col.table_id           AND   i.tenant_id = d_col.tenant_id           AND   (case when (c.is_hidden = 1 and substr(c.column_name, 1, 8) = '__substr') then                    substr(c.column_name, 8 + instr(substr(c.column_name, 8), '_')) else 0 end) = d_col.column_id           LEFT JOIN oceanbase.__ALL_VIRTUAL_CORE_COLUMN_TABLE d_col2           ON    i.data_table_id = d_col2.table_id           AND   i.tenant_id = d_col2.tenant_id           AND   c.column_id = d_col2.column_id           AND   d_col2.cur_default_value_v2 is not null           AND   d_col2.is_hidden = 1           AND   (d_col2.column_flags & (0x1 << 0) = 1 or d_col2.column_flags & (0x1 << 1) = 1)           AND   substr(d_col2.column_name, 1, 6) = 'SYS_NC'         UNION ALL           SELECT db.database_name  AS TABLE_SCHEMA,                   t.table_name      AS TABLE_NAME,                   0                 AS NON_UNIQUE,                   db.database_name  AS INDEX_SCHEMA,                   'PRIMARY'         AS INDEX_NAME,                   c.rowkey_position AS SEQ_IN_INDEX,                   c.column_name     AS COLUMN_NAME,                   NULL              AS SUB_PART,                   ''                AS NULLABLE,                   CASE WHEN t.index_using_type = 0 THEN 'BTREE' ELSE (                     CASE WHEN t.index_using_type = 1 THEN 'HASH' ELSE 'UNKOWN' END) END AS INDEX_TYPE,                   'VALID'          AS COMMENT,                   t.comment        AS INDEX_COMMENT,                   'YES'            AS IS_VISIBLE,                   NULL             AS EXPRESSION           FROM   oceanbase.__ALL_VIRTUAL_CORE_ALL_TABLE t           JOIN   oceanbase.__ALL_VIRTUAL_CORE_COLUMN_TABLE c           ON     t.table_id=c.table_id           AND    t.tenant_id = c.tenant_id           AND    t.tenant_id = EFFECTIVE_TENANT_ID()           AND    c.rowkey_position > 0           AND    c.is_hidden = 0           AND    t.table_type in (0,3)           JOIN   oceanbase.__all_database db           ON     t.database_id = db.database_id)V           WHERE 0 = sys_privilege_check('table_acc', effective_tenant_id())                 OR 0 = sys_privilege_check('table_acc', effective_tenant_id(), V.TABLE_SCHEMA, V.TABLE_NAME) 	utf8mb4	utf8mb4_general_ci
show create table  table_constraints;
View	Create View	character_set_client	collation_connection
TABLE_CONSTRAINTS	CREATE VIEW `TABLE_CONSTRAINTS` AS       SELECT            CAST('def' AS CHAR(64)) AS CONSTRAINT_CATALOG,            CAST(d.database_name AS CHAR(128)) collate utf8mb4_name_case AS CONSTRAINT_SCHEMA,            CAST('PRIMARY' AS CHAR(256)) AS CONSTRAINT_NAME,            CAST(d.database_name AS CHAR(128)) collate utf8mb4_name_case AS TABLE_SCHEMA,            CAST(t.table_name AS CHAR(256)) collate utf8mb4_name_case AS TABLE_NAME,            CAST('PRIMARY KEY' AS CHAR(11)) AS CONSTRAINT_TYPE,            CAST('YES' AS CHAR(3)) AS ENFORCED     FROM oceanbase.__all_database d     JOIN oceanbase.__all_table t ON d.database_id = t.database_id     WHERE (d.database_id = 201003 OR d.database_id > 500000) AND d.in_recyclebin = 0       AND t.table_type = 3       AND t.table_mode >> 16 & 1 = 0       AND t.table_mode >> 12 & 15 in (0,1)       AND t.index_attributes_set & 16 = 0       AND (0 = sys_privilege_check('table_acc', effective_tenant_id())            OR 0 = sys_privilege_check('table_acc', effective_tenant_id(), d.database_name, t.table_name))      union all      SELECT            CAST('def' AS CHAR(64)) AS CONSTRAINT_CATALOG,            CAST(d.database_name AS CHAR(128)) collate utf8mb4_name_case AS CONSTRAINT_SCHEMA,            CAST(SUBSTR(it.table_name, 7 + INSTR(SUBSTR(it.table_name, 7), '_')) AS CHAR(256)) AS CONSTRAINT_NAME,            CAST(d.database_name AS CHAR(128)) collate utf8mb4_name_case AS TABLE_SCHEMA,            CAST(ut.table_name AS CHAR(256)) collate utf8mb4_name_case AS TABLE_NAME,            CAST(CASE WHEN it.index_type = 41 THEN 'PRIMARY KEY'                 ELSE 'UNIQUE' END AS CHAR(11)) AS CONSTRAINT_TYPE,            CAST('YES' AS CHAR(3)) AS ENFORCED     FROM oceanbase.__all_database d     JOIN oceanbase.__all_table it ON d.database_id = it.database_id     JOIN oceanbase.__all_table ut ON it.data_table_id = ut.table_id     WHERE d.database_id > 500000 AND d.in_recyclebin = 0       AND it.table_type = 5       AND it.index_type IN (2, 4, 8, 41)       AND (0 = sys_privilege_check('table_acc', effective_tenant_id())            OR 0 = sys_privilege_check('table_acc', effective_tenant_id(), d.database_name, ut.table_name))      union all      SELECT            CAST('def' AS CHAR(64)) AS CONSTRAINT_CATALOG,            CAST(d.database_name AS CHAR(128)) collate utf8mb4_name_case AS CONSTRAINT_SCHEMA,            CAST(c.constraint_name AS CHAR(256)) AS CONSTRAINT_NAME,            CAST(d.database_name AS CHAR(128)) collate utf8mb4_name_case AS TABLE_SCHEMA,            CAST(t.table_name AS CHAR(256)) collate utf8mb4_name_case AS TABLE_NAME,            CAST('CHECK' AS CHAR(11)) AS CONSTRAINT_TYPE,            CAST(CASE WHEN c.enable_flag = 1 THEN 'YES'                 ELSE 'NO' END AS CHAR(3)) AS ENFORCED     FROM oceanbase.__all_database d     JOIN oceanbase.__all_table t ON d.database_id = t.database_id     JOIN oceanbase.__all_constraint c ON t.table_id = c.table_id     WHERE d.database_id > 500000 AND d.in_recyclebin = 0       AND t.table_type = 3       AND c.constraint_type = 3       AND (0 = sys_privilege_check('table_acc', effective_tenant_id())            OR 0 = sys_privilege_check('table_acc', effective_tenant_id(), d.database_name, t.table_name))      union all      SELECT            CAST('def' AS CHAR(64)) AS CONSTRAINT_CATALOG,            CAST(f.constraint_schema AS CHAR(128)) collate utf8mb4_name_case AS CONSTRAINT_SCHEMA,            CAST(f.constraint_name AS CHAR(256)) AS CONSTRAINT_NAME,            CAST(f.constraint_schema AS CHAR(128)) collate utf8mb4_name_case AS TABLE_SCHEMA,            CAST(f.table_name AS CHAR(256)) collate utf8mb4_name_case AS TABLE_NAME,            CAST('FOREIGN KEY' AS CHAR(11)) AS CONSTRAINT_TYPE,            CAST('YES' AS CHAR(3)) AS ENFORCED     FROM information_schema.REFERENTIAL_CONSTRAINTS f    	utf8mb4	utf8mb4_general_ci
show create table  table_privileges;
View	Create View	character_set_client	collation_connection
TABLE_PRIVILEGES	CREATE VIEW `TABLE_PRIVILEGES` AS    WITH DB_PRIV AS (     select A.tenant_id TENANT_ID,            A.user_id USER_ID,            A.database_name DATABASE_NAME,            A.priv_alter PRIV_ALTER,            A.priv_create PRIV_CREATE,            A.priv_delete PRIV_DELETE,            A.priv_drop PRIV_DROP,            A.priv_grant_option PRIV_GRANT_OPTION,            A.priv_insert PRIV_INSERT,            A.priv_update PRIV_UPDATE,            A.priv_select PRIV_SELECT,            A.priv_index PRIV_INDEX,            A.priv_create_view PRIV_CREATE_VIEW,            A.priv_show_view PRIV_SHOW_VIEW,            A.GMT_CREATE GMT_CREATE,            A.GMT_MODIFIED GMT_MODIFIED,            A.PRIV_OTHERS PRIV_OTHERS     from oceanbase.__all_database_privilege_history A,          (select tenant_id, user_id, database_name, max(schema_version) schema_version from oceanbase.__all_database_privilege_history group by tenant_id, user_id, database_name, database_name collate utf8mb4_bin) B     where A.tenant_id = B.tenant_id and A.user_id = B.user_id and A.database_name collate utf8mb4_bin = B.database_name collate utf8mb4_bin and A.schema_version = B.schema_version and A.is_deleted = 0   ),   TABLE_PRIV AS (     select A.tenant_id TENANT_ID,            A.user_id USER_ID,            A.database_name DATABASE_NAME,            A.table_name TABLE_NAME,            A.priv_alter PRIV_ALTER,            A.priv_create PRIV_CREATE,            A.priv_delete PRIV_DELETE,            A.priv_drop PRIV_DROP,            A.priv_grant_option PRIV_GRANT_OPTION,            A.priv_insert PRIV_INSERT,            A.priv_update PRIV_UPDATE,            A.priv_select PRIV_SELECT,            A.priv_index PRIV_INDEX,            A.priv_create_view PRIV_CREATE_VIEW,            A.priv_show_view PRIV_SHOW_VIEW,            A.PRIV_OTHERS PRIV_OTHERS     from oceanbase.__all_table_privilege_history A,          (select tenant_id, user_id, database_name, table_name, max(schema_version) schema_version from oceanbase.__all_table_privilege_history group by tenant_id, user_id, database_name, database_name collate utf8mb4_bin, table_name, table_name collate utf8mb4_bin) B     where A.tenant_id = B.tenant_id and A.user_id = B.user_id and A.database_name collate utf8mb4_bin = B.database_name collate utf8mb4_bin and A.schema_version = B.schema_version and A.table_name collate utf8mb4_bin = B.table_name collate utf8mb4_bin and A.is_deleted = 0   )   SELECT          CAST(CONCAT('''', V.USER_NAME, '''', '@', '''', V.HOST, '''') AS CHAR(81)) AS GRANTEE ,          CAST('def' AS CHAR(512)) AS TABLE_CATALOG ,          CAST(V.DATABASE_NAME AS CHAR(128)) collate utf8mb4_name_case AS TABLE_SCHEMA ,          CAST(V.TABLE_NAME AS CHAR(64)) collate utf8mb4_name_case AS TABLE_NAME,          CAST(V.PRIVILEGE_TYPE AS CHAR(64)) AS PRIVILEGE_TYPE ,          CAST(V.IS_GRANTABLE AS CHAR(3)) AS IS_GRANTABLE   FROM     (SELECT TP.DATABASE_NAME AS DATABASE_NAME,             TP.TABLE_NAME AS TABLE_NAME,             U.USER_NAME AS USER_NAME,             U.HOST AS HOST,             CASE                 WHEN V1.C1 = 1                      AND TP.PRIV_ALTER = 1 THEN 'ALTER'                 WHEN V1.C1 = 2                      AND TP.PRIV_CREATE = 1 THEN 'CREATE'                 WHEN V1.C1 = 4                      AND TP.PRIV_DELETE = 1 THEN 'DELETE'                 WHEN V1.C1 = 5                      AND TP.PRIV_DROP = 1 THEN 'DROP'                 WHEN V1.C1 = 7                      AND TP.PRIV_INSERT = 1 THEN 'INSERT'                 WHEN V1.C1 = 8                      AND TP.PRIV_UPDATE = 1 THEN 'UPDATE'                 WHEN V1.C1 = 9                      AND TP.PRIV_SELECT = 1 THEN 'SELECT'                 WHEN V1.C1 = 10                      AND TP.PRIV_INDEX = 1 THEN 'INDEX'                 WHEN V1.C1 = 11                      AND TP.PRIV_CREATE_VIEW = 1 THEN 'CREATE VIEW'                 WHEN V1.C1 = 12                      AND TP.PRIV_SHOW_VIEW = 1 THEN 'SHOW VIEW'                 WHEN V1.C1 = 22                      AND (TP.PRIV_OTHERS & (1 << 6)) != 0 THEN 'REFERENCES'                 WHEN V1.C1 = 44                      AND (TP.PRIV_OTHERS & (1 << 9)) != 0 THEN 'TRIGGER'                 ELSE NULL             END PRIVILEGE_TYPE ,             CASE                 WHEN TP.PRIV_GRANT_OPTION = 1 THEN 'YES'                 WHEN TP.PRIV_GRANT_OPTION = 0 THEN 'NO'             END IS_GRANTABLE      FROM TABLE_PRIV TP,                       oceanbase.__all_user U,        (SELECT 1 AS C1         UNION ALL SELECT 2 AS C1         UNION ALL SELECT 4 AS C1         UNION ALL SELECT 5 AS C1         UNION ALL SELECT 7 AS C1         UNION ALL SELECT 8 AS C1         UNION ALL SELECT 9 AS C1         UNION ALL SELECT 10 AS C1         UNION ALL SELECT 11 AS C1         UNION ALL SELECT 12 AS C1         UNION ALL SELECT 22 AS C1         UNION ALL SELECT 44 AS C1) V1,        (SELECT USER_ID         FROM oceanbase.__all_user         WHERE TENANT_ID = 0           AND CONCAT(USER_NAME, '@', HOST) = CURRENT_USER()) CURR      LEFT JOIN        (SELECT USER_ID         FROM DB_PRIV         WHERE TENANT_ID = 0           AND DATABASE_NAME = 'mysql'           AND PRIV_SELECT = 1) DB ON CURR.USER_ID = DB.USER_ID      WHERE TP.TENANT_ID = 0        AND TP.TENANT_ID = U.TENANT_ID        AND TP.USER_ID = U.USER_ID        AND (DB.USER_ID IS NOT NULL             OR 512 & CURRENT_USER_PRIV() = 512             OR TP.USER_ID = CURR.USER_ID)) V   WHERE V.PRIVILEGE_TYPE IS NOT NULL   	utf8mb4	utf8mb4_general_ci
show create table  tables;
View	Create View	character_set_client	collation_connection
TABLES	CREATE VIEW `TABLES` AS                      select /*+ leading(a) no_use_nl(ts)*/                     cast('def' as char(512)) as TABLE_CATALOG,                     cast(b.database_name as char(64)) collate utf8mb4_name_case as TABLE_SCHEMA,                     cast(a.table_name as char(64)) collate utf8mb4_name_case as TABLE_NAME,                     cast(case when (a.database_id = 201002 or a.table_type = 1) then 'SYSTEM VIEW'                          when a.table_type in (0, 2) then 'SYSTEM TABLE'                          when a.table_type = 4 then 'VIEW'                          when a.table_type = 14 then 'EXTERNAL TABLE'                          else 'BASE TABLE' end as char(64)) as TABLE_TYPE,                     cast(case when a.table_type in (0,3,5,6,7,11,12,13,15) then 'InnoDB'                         else 'MEMORY' end as char(64)) as ENGINE,                     cast(NULL as unsigned) as VERSION,                     cast(a.store_format as char(10)) as ROW_FORMAT,                     cast( coalesce(ts.row_cnt,0) as unsigned) as TABLE_ROWS,                     cast( coalesce(ts.avg_row_len,0) as unsigned) as AVG_ROW_LENGTH,                     cast( coalesce(ts.data_size,0) as unsigned) as DATA_LENGTH,                     cast(NULL as unsigned) as MAX_DATA_LENGTH,                     cast( coalesce(idx_stat.index_length, 0) as unsigned) as INDEX_LENGTH,                     cast(NULL as unsigned) as DATA_FREE,                     cast(NULL as unsigned) as AUTO_INCREMENT,                     cast(a.gmt_create as datetime) as CREATE_TIME,                     cast(a.gmt_modified as datetime) as UPDATE_TIME,                     cast(NULL as datetime) as CHECK_TIME,                     cast(d.collation as char(32)) as TABLE_COLLATION,                     cast(NULL as unsigned) as CHECKSUM,                     cast(NULL as char(255)) as CREATE_OPTIONS,                     cast(case when a.table_type = 4 then 'VIEW'                              else a.comment end as char(2048)) as TABLE_COMMENT,                     cast(case when a.auto_part = 1 then 'TRUE'                                else 'FALSE' end as char(16)) as AUTO_SPLIT,                     cast(case when a.auto_part = 1 then a.auto_part_size                               else 0 end as unsigned) as AUTO_SPLIT_TABLET_SIZE,                     cast(case when a.table_mode >> 30 = 1 then 'HEAP'                               else 'INDEX' end as char(12)) as ORGANIZATION                     from                     (                     select cast(0 as signed) as tenant_id,                            c.database_id,                            c.table_id,                            c.table_name,                            c.collation_type,                            c.table_type,                            usec_to_time(d.schema_version) as gmt_create,                            usec_to_time(c.schema_version) as gmt_modified,                            c.comment,                            c.store_format,                            c.auto_part,                            c.auto_part_size,                            c.table_mode                     from oceanbase.__all_virtual_core_all_table c                     join oceanbase.__all_virtual_core_all_table d                       on c.tenant_id = d.tenant_id and d.table_name = '__all_core_table'                     where c.tenant_id = effective_tenant_id()                     union all                     select tenant_id,                            database_id,                            table_id,                            table_name,                            collation_type,                            table_type,                            gmt_create,                            gmt_modified,                            comment,                            store_format,                            auto_part,                            auto_part_size,                            table_mode                     from oceanbase.__all_table where table_mode >> 12 & 15 in (0,1) and index_attributes_set & 16 = 0) a                     join oceanbase.__all_database b                     on a.database_id = b.database_id                     and a.tenant_id = b.tenant_id                     join oceanbase.__tenant_virtual_collation d                     on a.collation_type = d.collation_type                     left join (                       select tenant_id,                              table_id,                              row_cnt,                              avg_row_len,                              (macro_blk_cnt * 2 * 1024 * 1024) as data_size                       from oceanbase.__all_table_stat                       where partition_id = -1 or partition_id = table_id) ts                     on a.table_id = ts.table_id                     and a.tenant_id = ts.tenant_id                     left join (                       select e.tenant_id as tenant_id,                              e.data_table_id as data_table_id,                              SUM(f.macro_blk_cnt * 2 * 1024 * 1024) AS index_length                       FROM oceanbase.__all_table e JOIN oceanbase.__all_table_stat f                             ON e.tenant_id = f.tenant_id and e.table_id = f.table_id and (f.partition_id = -1 or f.partition_id = e.table_id)                       WHERE e.index_type in (1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 41) and e.table_type = 5                             group by tenant_id, data_table_id                     ) idx_stat on idx_stat.tenant_id = a.tenant_id and idx_stat.data_table_id = a.table_id                     where a.tenant_id = 0                     and a.table_type in (0, 1, 2, 3, 4, 14, 15)                     and b.database_name != '__recyclebin'                     and b.in_recyclebin = 0                     and 0 = sys_privilege_check('table_acc', effective_tenant_id(), b.database_name, a.table_name) 	utf8mb4	utf8mb4_general_ci
show create table  user_privileges;
View	Create View	character_set_client	collation_connection
USER_PRIVILEGES	CREATE VIEW `USER_PRIVILEGES` AS    SELECT CAST(CONCAT('''', V.USER_NAME, '''', '@', '''', V.HOST, '''') AS CHAR(81)) AS GRANTEE ,          CAST('def' AS CHAR(512)) AS TABLE_CATALOG ,          CAST(V.PRIVILEGE_TYPE AS CHAR(64)) AS PRIVILEGE_TYPE ,          CAST(V.IS_GRANTABLE AS CHAR(3)) AS IS_GRANTABLE   FROM     (SELECT U.USER_NAME AS USER_NAME,             U.HOST AS HOST,             CASE                 WHEN V1.C1 = 1                      AND U.PRIV_ALTER = 1 THEN 'ALTER'                 WHEN V1.C1 = 2                      AND U.PRIV_CREATE = 1 THEN 'CREATE'                 WHEN V1.C1 = 3                      AND U.PRIV_CREATE_USER = 1 THEN 'CREATE USER'                 WHEN V1.C1 = 4                      AND U.PRIV_DELETE = 1 THEN 'DELETE'                 WHEN V1.C1 = 5                      AND U.PRIV_DROP = 1 THEN 'DROP'                 WHEN V1.C1 = 7                      AND U.PRIV_INSERT = 1 THEN 'INSERT'                 WHEN V1.C1 = 8                      AND U.PRIV_UPDATE = 1 THEN 'UPDATE'                 WHEN V1.C1 = 9                      AND U.PRIV_SELECT = 1 THEN 'SELECT'                 WHEN V1.C1 = 10                      AND U.PRIV_INDEX = 1 THEN 'INDEX'                 WHEN V1.C1 = 11                      AND U.PRIV_CREATE_VIEW = 1 THEN 'CREATE VIEW'                 WHEN V1.C1 = 12                      AND U.PRIV_SHOW_VIEW = 1 THEN 'SHOW VIEW'                 WHEN V1.C1 = 13                      AND U.PRIV_SHOW_DB = 1 THEN 'SHOW DATABASES'                 WHEN V1.C1 = 14                      AND U.PRIV_SUPER = 1 THEN 'SUPER'                 WHEN V1.C1 = 15                      AND U.PRIV_PROCESS = 1 THEN 'PROCESS'                 WHEN V1.C1 = 17                      AND U.PRIV_CREATE_SYNONYM = 1 THEN 'CREATE SYNONYM'                 WHEN V1.C1 = 22                      AND (U.PRIV_OTHERS & (1 << 6)) != 0 THEN 'REFERENCES'                 WHEN V1.C1 = 23                      AND (U.PRIV_OTHERS & (1 << 0)) != 0 THEN 'EXECUTE'                 WHEN V1.C1 = 27                      AND U.PRIV_FILE = 1 THEN 'FILE'                 WHEN V1.C1 = 28                      AND U.PRIV_ALTER_TENANT = 1 THEN 'ALTER TENANT'                 WHEN V1.C1 = 29                      AND U.PRIV_ALTER_SYSTEM = 1 THEN 'ALTER SYSTEM'                 WHEN V1.C1 = 30                      AND U.PRIV_CREATE_RESOURCE_POOL = 1 THEN 'CREATE RESOURCE POOL'                 WHEN V1.C1 = 31                      AND U.PRIV_CREATE_RESOURCE_UNIT = 1 THEN 'CREATE RESOURCE UNIT'                 WHEN V1.C1 = 33                      AND U.PRIV_REPL_SLAVE = 1 THEN 'REPLICATION SLAVE'                 WHEN V1.C1 = 34                      AND U.PRIV_REPL_CLIENT = 1 THEN 'REPLICATION CLIENT'                 WHEN V1.C1 = 35                      AND U.PRIV_DROP_DATABASE_LINK = 1 THEN 'DROP DATABASE LINK'                 WHEN V1.C1 = 36                      AND U.PRIV_CREATE_DATABASE_LINK = 1 THEN 'CREATE DATABASE LINK'                 WHEN V1.C1 = 37                      AND (U.PRIV_OTHERS & (1 << 1)) != 0 THEN 'ALTER ROUTINE'                 WHEN V1.C1 = 38                      AND (U.PRIV_OTHERS & (1 << 2)) != 0 THEN 'CREATE ROUTINE'                 WHEN V1.C1 = 39                      AND (U.PRIV_OTHERS & (1 << 3)) != 0 THEN 'CREATE TABLESPACE'                 WHEN V1.C1 = 40                      AND (U.PRIV_OTHERS & (1 << 4)) != 0 THEN 'SHUTDOWN'                 WHEN V1.C1 = 41                      AND (U.PRIV_OTHERS & (1 << 5)) != 0 THEN 'RELOAD'                 WHEN V1.C1 = 42                      AND (U.PRIV_OTHERS & (1 << 7)) != 0 THEN 'CREATE ROLE'                 WHEN V1.C1 = 43                      AND (U.PRIV_OTHERS & (1 << 8)) != 0 THEN 'DROP ROLE'                 WHEN V1.C1 = 44                      AND (U.PRIV_OTHERS & (1 << 9)) != 0 THEN 'TRIGGER'                 WHEN V1.C1 = 46                      AND (U.PRIV_OTHERS & (1 << 11) != 0) THEN 'ENCRYPT'                 WHEN V1.C1 = 47                      AND (U.PRIV_OTHERS & (1 << 12) != 0) THEN 'DECRYPT'                 WHEN V1.C1 = 0                      AND U.PRIV_ALTER = 0                      AND U.PRIV_CREATE = 0                      AND U.PRIV_CREATE_USER = 0                      AND U.PRIV_DELETE = 0                      AND U.PRIV_DROP = 0                      AND U.PRIV_INSERT = 0                      AND U.PRIV_UPDATE = 0                      AND U.PRIV_SELECT = 0                      AND U.PRIV_INDEX = 0                      AND U.PRIV_CREATE_VIEW = 0                      AND U.PRIV_SHOW_VIEW = 0                      AND U.PRIV_SHOW_DB = 0                      AND U.PRIV_SUPER = 0                      AND U.PRIV_PROCESS = 0                      AND U.PRIV_CREATE_SYNONYM = 0                      AND U.PRIV_FILE = 0                      AND U.PRIV_ALTER_TENANT = 0                      AND U.PRIV_ALTER_SYSTEM = 0                      AND U.PRIV_CREATE_RESOURCE_POOL = 0                      AND U.PRIV_CREATE_RESOURCE_UNIT = 0                      AND U.PRIV_REPL_SLAVE = 0                      AND U.PRIV_REPL_CLIENT = 0                       AND U.PRIV_DROP_DATABASE_LINK = 0                       AND U.PRIV_CREATE_DATABASE_LINK = 0                       AND U.PRIV_OTHERS = 0 THEN 'USAGE'             END PRIVILEGE_TYPE ,             CASE                 WHEN U.PRIV_GRANT_OPTION = 0 THEN 'NO'                 WHEN U.PRIV_ALTER = 0                      AND U.PRIV_CREATE = 0                      AND U.PRIV_CREATE_USER = 0                      AND U.PRIV_DELETE = 0                      AND U.PRIV_DROP = 0                      AND U.PRIV_INSERT = 0                      AND U.PRIV_UPDATE = 0                      AND U.PRIV_SELECT = 0                      AND U.PRIV_INDEX = 0                      AND U.PRIV_CREATE_VIEW = 0                      AND U.PRIV_SHOW_VIEW = 0                      AND U.PRIV_SHOW_DB = 0                      AND U.PRIV_SUPER = 0                      AND U.PRIV_PROCESS = 0                      AND U.PRIV_CREATE_SYNONYM = 0                      AND U.PRIV_FILE = 0                      AND U.PRIV_ALTER_TENANT = 0                      AND U.PRIV_ALTER_SYSTEM = 0                      AND U.PRIV_CREATE_RESOURCE_POOL = 0                      AND U.PRIV_CREATE_RESOURCE_UNIT = 0                      AND U.PRIV_REPL_SLAVE = 0                      AND U.PRIV_REPL_CLIENT = 0                       AND U.PRIV_DROP_DATABASE_LINK = 0                       AND U.PRIV_CREATE_DATABASE_LINK = 0                      AND U.PRIV_OTHERS = 0 THEN 'NO'                 WHEN U.PRIV_GRANT_OPTION = 1 THEN 'YES'             END IS_GRANTABLE      FROM oceanbase.__all_user U,        (SELECT 0 AS C1         UNION ALL SELECT 1 AS C1         UNION ALL SELECT 2 AS C1         UNION ALL SELECT 3 AS C1         UNION ALL SELECT 4 AS C1         UNION ALL SELECT 5 AS C1         UNION ALL SELECT 7 AS C1         UNION ALL SELECT 8 AS C1         UNION ALL SELECT 9 AS C1         UNION ALL SELECT 10 AS C1         UNION ALL SELECT 11 AS C1         UNION ALL SELECT 12 AS C1         UNION ALL SELECT 13 AS C1         UNION ALL SELECT 14 AS C1         UNION ALL SELECT 15 AS C1         UNION ALL SELECT 17 AS C1         UNION ALL SELECT 22 AS C1         UNION ALL SELECT 23 AS C1         UNION ALL SELECT 27 AS C1         UNION ALL SELECT 28 AS C1         UNION ALL SELECT 29 AS C1         UNION ALL SELECT 30 AS C1         UNION ALL SELECT 31 AS C1         UNION ALL SELECT 33 AS C1         UNION ALL SELECT 34 AS C1         UNION ALL SELECT 35 AS C1         UNION ALL SELECT 36 AS C1         UNION ALL SELECT 37 AS C1         UNION ALL SELECT 38 AS C1         UNION ALL SELECT 39 AS C1         UNION ALL SELECT 40 AS C1         UNION ALL SELECT 41 AS C1         UNION ALL SELECT 42 AS C1         UNION ALL SELECT 43 AS C1         UNION ALL SELECT 44 AS C1         UNION ALL SELECT 46 AS C1         UNION ALL SELECT 47 AS C1) V1,        (SELECT USER_ID         FROM oceanbase.__all_user         WHERE TENANT_ID = 0           AND CONCAT(USER_NAME, '@', HOST) = CURRENT_USER()) CURR      LEFT JOIN        (SELECT USER_ID         FROM oceanbase.__all_database_privilege         WHERE TENANT_ID = 0           AND DATABASE_NAME = 'mysql'           AND PRIV_SELECT = 1) DB ON CURR.USER_ID = DB.USER_ID      WHERE U.TENANT_ID = 0        AND (DB.USER_ID IS NOT NULL             OR 512 & CURRENT_USER_PRIV() = 512             OR U.USER_ID = CURR.USER_ID)) V   WHERE V.PRIVILEGE_TYPE IS NOT NULL   	utf8mb4	utf8mb4_general_ci
show create table  views;
View	Create View	character_set_client	collation_connection
VIEWS	CREATE VIEW `VIEWS` AS select                    cast('def' as CHAR(64)) AS TABLE_CATALOG,                    d.database_name collate utf8mb4_name_case as TABLE_SCHEMA,                    t.table_name collate utf8mb4_name_case as TABLE_NAME,                    t.view_definition as VIEW_DEFINITION,                    case t.view_check_option when 1 then 'LOCAL' when 2 then 'CASCADED' else 'NONE' end as CHECK_OPTION,                    case t.view_is_updatable when 1 then 'YES' else 'NO' end as IS_UPDATABLE,                    cast((case t.define_user_id                          when -1 then 'NONE'                          else concat(u.user_name, '@', u.host) end) as CHAR(288)) as DEFINER,                    cast('NONE' as CHAR(7)) AS SECURITY_TYPE,                    cast((case t.collation_type                          when 45 then 'utf8mb4'                          else 'NONE' end) as CHAR(64)) AS CHARACTER_SET_CLIENT,                    cast((case t.collation_type                          when 45 then 'utf8mb4_general_ci'                          else 'NONE' end) as CHAR(64)) AS COLLATION_CONNECTION                    from oceanbase.__all_table as t                    join oceanbase.__all_database as d                      on t.tenant_id = d.tenant_id and t.database_id = d.database_id                    left join oceanbase.__all_user as u                      on t.tenant_id = u.tenant_id and t.define_user_id = u.user_id and t.define_user_id != -1                    where t.tenant_id = 0                      and t.table_type in (1, 4)                      and t.table_mode >> 12 & 15 in (0,1)                      and t.index_attributes_set & 16 = 0                      and d.in_recyclebin = 0                      and d.database_name != '__recyclebin'                      and d.database_name != 'information_schema'                      and d.database_name != 'oceanbase'                      and 0 = sys_privilege_check('table_acc', effective_tenant_id(), d.database_name, t.table_name) 	utf8mb4	utf8mb4_general_ci
