drop table if exists t1, t2, t3;
create table t1(c1 int, c2 int, c3 int, c4 int, c5 int, c6 int, c7 int, c8 int, c9 int, c10 int, 
index k1(c1), 
index k2(c1,c2),
index k3(c1,c2,c3),
index k4(c1,c2,c3,c4),
index k5(c1,c2,c3,c4,c5));
create table t2(c1 int, c2 int, c3 int, c4 int, c5 int, c6 int, c7 int, c8 int, c9 int, c10 int, 
primary key(c1, c6, c7),
index k1(c1), 
index k2(c1,c2),
index k3(c1,c2,c3),
index k4(c1,c2,c3,c4),
index k5(c1,c2,c3,c4,c5));
create table t3(c1 int, c2 int, c3 int, c4 int, c5 int, c6 int, c7 int, c8 int, c9 int, c10 int, 
primary key(c1, c2, c6),
index k1(c1), 
index k2(c1,c2),
index k3(c1,c2,c3),
index k4(c1,c2,c3,c4),
index k5(c1,c2,c3,c4,c5));
explain select count(*) from t1;
Query Plan
===================================================
|ID|OPERATOR         |NAME  |EST.ROWS|EST.TIME(us)|
---------------------------------------------------
|0 |SCALAR GROUP BY  |      |1       |4           |
|1 |└─TABLE FULL SCAN|t1(k1)|1       |4           |
===================================================
Outputs & filters:
-------------------------------------
  0 - output([T_FUN_COUNT_SUM(T_FUN_COUNT(*))]), filter(nil), rowset=16
      group(nil), agg_func([T_FUN_COUNT_SUM(T_FUN_COUNT(*))])
  1 - output([T_FUN_COUNT(*)]), filter(nil), rowset=16
      access(nil), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c1], [t1.__pk_increment]), range(MIN,MIN ; MAX,MAX)always true
explain select * from t1 where c1 = 1;
Query Plan
==================================================
|ID|OPERATOR        |NAME  |EST.ROWS|EST.TIME(us)|
--------------------------------------------------
|0 |TABLE RANGE SCAN|t1(k1)|1       |4           |
==================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2], [t1.c3], [t1.c4], [t1.c5], [t1.c6], [t1.c7], [t1.c8], [t1.c9], [t1.c10]), filter(nil), rowset=16
      access([t1.__pk_increment], [t1.c1], [t1.c2], [t1.c3], [t1.c4], [t1.c5], [t1.c6], [t1.c7], [t1.c8], [t1.c9], [t1.c10]), partitions(p0)
      is_index_back=true, is_global_index=false, 
      range_key([t1.c1], [t1.__pk_increment]), range(1,MIN ; 1,MAX), 
      range_cond([t1.c1 = 1])
explain select * from t1 where c1 < 1;
Query Plan
==================================================
|ID|OPERATOR        |NAME  |EST.ROWS|EST.TIME(us)|
--------------------------------------------------
|0 |TABLE RANGE SCAN|t1(k1)|1       |5           |
==================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2], [t1.c3], [t1.c4], [t1.c5], [t1.c6], [t1.c7], [t1.c8], [t1.c9], [t1.c10]), filter(nil), rowset=16
      access([t1.__pk_increment], [t1.c1], [t1.c2], [t1.c3], [t1.c4], [t1.c5], [t1.c6], [t1.c7], [t1.c8], [t1.c9], [t1.c10]), partitions(p0)
      is_index_back=true, is_global_index=false, 
      range_key([t1.c1], [t1.__pk_increment]), range(NULL,MAX ; 1,MIN), 
      range_cond([t1.c1 < 1])
explain select * from t1 where c1 > 1;
Query Plan
==================================================
|ID|OPERATOR        |NAME  |EST.ROWS|EST.TIME(us)|
--------------------------------------------------
|0 |TABLE RANGE SCAN|t1(k1)|1       |5           |
==================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2], [t1.c3], [t1.c4], [t1.c5], [t1.c6], [t1.c7], [t1.c8], [t1.c9], [t1.c10]), filter(nil), rowset=16
      access([t1.__pk_increment], [t1.c1], [t1.c2], [t1.c3], [t1.c4], [t1.c5], [t1.c6], [t1.c7], [t1.c8], [t1.c9], [t1.c10]), partitions(p0)
      is_index_back=true, is_global_index=false, 
      range_key([t1.c1], [t1.__pk_increment]), range(1,MAX ; MAX,MAX), 
      range_cond([t1.c1 > 1])
explain select * from t1 where c1 > 1 and c1 < 10;
Query Plan
==================================================
|ID|OPERATOR        |NAME  |EST.ROWS|EST.TIME(us)|
--------------------------------------------------
|0 |TABLE RANGE SCAN|t1(k1)|1       |4           |
==================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2], [t1.c3], [t1.c4], [t1.c5], [t1.c6], [t1.c7], [t1.c8], [t1.c9], [t1.c10]), filter(nil), rowset=16
      access([t1.__pk_increment], [t1.c1], [t1.c2], [t1.c3], [t1.c4], [t1.c5], [t1.c6], [t1.c7], [t1.c8], [t1.c9], [t1.c10]), partitions(p0)
      is_index_back=true, is_global_index=false, 
      range_key([t1.c1], [t1.__pk_increment]), range(1,MAX ; 10,MIN), 
      range_cond([t1.c1 > 1], [t1.c1 < 10])
explain select * from t1 where c1 = 1 and c2 < 1;
Query Plan
==================================================
|ID|OPERATOR        |NAME  |EST.ROWS|EST.TIME(us)|
--------------------------------------------------
|0 |TABLE RANGE SCAN|t1(k2)|1       |4           |
==================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2], [t1.c3], [t1.c4], [t1.c5], [t1.c6], [t1.c7], [t1.c8], [t1.c9], [t1.c10]), filter(nil), rowset=16
      access([t1.__pk_increment], [t1.c1], [t1.c2], [t1.c3], [t1.c4], [t1.c5], [t1.c6], [t1.c7], [t1.c8], [t1.c9], [t1.c10]), partitions(p0)
      is_index_back=true, is_global_index=false, 
      range_key([t1.c1], [t1.c2], [t1.__pk_increment]), range(1,NULL,MAX ; 1,1,MIN), 
      range_cond([t1.c1 = 1], [t1.c2 < 1])
explain select * from t1 where c1 = 1 and c2 = 1;
Query Plan
==================================================
|ID|OPERATOR        |NAME  |EST.ROWS|EST.TIME(us)|
--------------------------------------------------
|0 |TABLE RANGE SCAN|t1(k2)|1       |4           |
==================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2], [t1.c3], [t1.c4], [t1.c5], [t1.c6], [t1.c7], [t1.c8], [t1.c9], [t1.c10]), filter(nil), rowset=16
      access([t1.__pk_increment], [t1.c1], [t1.c2], [t1.c3], [t1.c4], [t1.c5], [t1.c6], [t1.c7], [t1.c8], [t1.c9], [t1.c10]), partitions(p0)
      is_index_back=true, is_global_index=false, 
      range_key([t1.c1], [t1.c2], [t1.__pk_increment]), range(1,1,MIN ; 1,1,MAX), 
      range_cond([t1.c1 = 1], [t1.c2 = 1])
explain select * from t1 where c1 = 1 and c2 = 1 and c3 < 1;
Query Plan
==================================================
|ID|OPERATOR        |NAME  |EST.ROWS|EST.TIME(us)|
--------------------------------------------------
|0 |TABLE RANGE SCAN|t1(k3)|1       |4           |
==================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2], [t1.c3], [t1.c4], [t1.c5], [t1.c6], [t1.c7], [t1.c8], [t1.c9], [t1.c10]), filter(nil), rowset=16
      access([t1.__pk_increment], [t1.c1], [t1.c2], [t1.c3], [t1.c4], [t1.c5], [t1.c6], [t1.c7], [t1.c8], [t1.c9], [t1.c10]), partitions(p0)
      is_index_back=true, is_global_index=false, 
      range_key([t1.c1], [t1.c2], [t1.c3], [t1.__pk_increment]), range(1,1,NULL,MAX ; 1,1,1,MIN), 
      range_cond([t1.c1 = 1], [t1.c2 = 1], [t1.c3 < 1])
explain select * from t1 where c1 = 1 and c2 = 1 and c3 = 1;
Query Plan
==================================================
|ID|OPERATOR        |NAME  |EST.ROWS|EST.TIME(us)|
--------------------------------------------------
|0 |TABLE RANGE SCAN|t1(k3)|1       |4           |
==================================================
Outputs & filters:
-------------------------------------
  0 - output([t1.c1], [t1.c2], [t1.c3], [t1.c4], [t1.c5], [t1.c6], [t1.c7], [t1.c8], [t1.c9], [t1.c10]), filter(nil), rowset=16
      access([t1.__pk_increment], [t1.c1], [t1.c2], [t1.c3], [t1.c4], [t1.c5], [t1.c6], [t1.c7], [t1.c8], [t1.c9], [t1.c10]), partitions(p0)
      is_index_back=true, is_global_index=false, 
      range_key([t1.c1], [t1.c2], [t1.c3], [t1.__pk_increment]), range(1,1,1,MIN ; 1,1,1,MAX), 
      range_cond([t1.c1 = 1], [t1.c2 = 1], [t1.c3 = 1])
explain select count(*) from t2;
Query Plan
===================================================
|ID|OPERATOR         |NAME  |EST.ROWS|EST.TIME(us)|
---------------------------------------------------
|0 |SCALAR GROUP BY  |      |1       |4           |
|1 |└─TABLE FULL SCAN|t2(k1)|1       |4           |
===================================================
Outputs & filters:
-------------------------------------
  0 - output([T_FUN_COUNT_SUM(T_FUN_COUNT(*))]), filter(nil), rowset=16
      group(nil), agg_func([T_FUN_COUNT_SUM(T_FUN_COUNT(*))])
  1 - output([T_FUN_COUNT(*)]), filter(nil), rowset=16
      access(nil), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1], [t2.c6], [t2.c7]), range(MIN,MIN,MIN ; MAX,MAX,MAX)always true
explain select * from t2 where c1 = 1;
Query Plan
================================================
|ID|OPERATOR        |NAME|EST.ROWS|EST.TIME(us)|
------------------------------------------------
|0 |TABLE RANGE SCAN|t2  |1       |4           |
================================================
Outputs & filters:
-------------------------------------
  0 - output([t2.c1], [t2.c2], [t2.c3], [t2.c4], [t2.c5], [t2.c6], [t2.c7], [t2.c8], [t2.c9], [t2.c10]), filter(nil), rowset=16
      access([t2.c1], [t2.c6], [t2.c7], [t2.c2], [t2.c3], [t2.c4], [t2.c5], [t2.c8], [t2.c9], [t2.c10]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1], [t2.c6], [t2.c7]), range(1,MIN,MIN ; 1,MAX,MAX), 
      range_cond([t2.c1 = 1])
explain select * from t2 where c1 < 1;
Query Plan
================================================
|ID|OPERATOR        |NAME|EST.ROWS|EST.TIME(us)|
------------------------------------------------
|0 |TABLE RANGE SCAN|t2  |1       |4           |
================================================
Outputs & filters:
-------------------------------------
  0 - output([t2.c1], [t2.c2], [t2.c3], [t2.c4], [t2.c5], [t2.c6], [t2.c7], [t2.c8], [t2.c9], [t2.c10]), filter(nil), rowset=16
      access([t2.c1], [t2.c6], [t2.c7], [t2.c2], [t2.c3], [t2.c4], [t2.c5], [t2.c8], [t2.c9], [t2.c10]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1], [t2.c6], [t2.c7]), range(NULL,MAX,MAX ; 1,MIN,MIN), 
      range_cond([t2.c1 < 1])
explain select * from t2 where c1 > 1;
Query Plan
================================================
|ID|OPERATOR        |NAME|EST.ROWS|EST.TIME(us)|
------------------------------------------------
|0 |TABLE RANGE SCAN|t2  |1       |4           |
================================================
Outputs & filters:
-------------------------------------
  0 - output([t2.c1], [t2.c2], [t2.c3], [t2.c4], [t2.c5], [t2.c6], [t2.c7], [t2.c8], [t2.c9], [t2.c10]), filter(nil), rowset=16
      access([t2.c1], [t2.c6], [t2.c7], [t2.c2], [t2.c3], [t2.c4], [t2.c5], [t2.c8], [t2.c9], [t2.c10]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1], [t2.c6], [t2.c7]), range(1,MAX,MAX ; MAX,MAX,MAX), 
      range_cond([t2.c1 > 1])
explain select * from t2 where c1 > 1 and c1 < 10;
Query Plan
================================================
|ID|OPERATOR        |NAME|EST.ROWS|EST.TIME(us)|
------------------------------------------------
|0 |TABLE RANGE SCAN|t2  |1       |4           |
================================================
Outputs & filters:
-------------------------------------
  0 - output([t2.c1], [t2.c2], [t2.c3], [t2.c4], [t2.c5], [t2.c6], [t2.c7], [t2.c8], [t2.c9], [t2.c10]), filter(nil), rowset=16
      access([t2.c1], [t2.c6], [t2.c7], [t2.c2], [t2.c3], [t2.c4], [t2.c5], [t2.c8], [t2.c9], [t2.c10]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1], [t2.c6], [t2.c7]), range(1,MAX,MAX ; 10,MIN,MIN), 
      range_cond([t2.c1 > 1], [t2.c1 < 10])
explain select * from t2 where c1 = 1 and c2 < 1;
Query Plan
==================================================
|ID|OPERATOR        |NAME  |EST.ROWS|EST.TIME(us)|
--------------------------------------------------
|0 |TABLE RANGE SCAN|t2(k2)|1       |4           |
==================================================
Outputs & filters:
-------------------------------------
  0 - output([t2.c1], [t2.c2], [t2.c3], [t2.c4], [t2.c5], [t2.c6], [t2.c7], [t2.c8], [t2.c9], [t2.c10]), filter(nil), rowset=16
      access([t2.c1], [t2.c6], [t2.c7], [t2.c2], [t2.c3], [t2.c4], [t2.c5], [t2.c8], [t2.c9], [t2.c10]), partitions(p0)
      is_index_back=true, is_global_index=false, 
      range_key([t2.c1], [t2.c2], [t2.c6], [t2.c7]), range(1,NULL,MAX,MAX ; 1,1,MIN,MIN), 
      range_cond([t2.c1 = 1], [t2.c2 < 1])
explain select * from t2 where c1 = 1 and c2 = 1;
Query Plan
==================================================
|ID|OPERATOR        |NAME  |EST.ROWS|EST.TIME(us)|
--------------------------------------------------
|0 |TABLE RANGE SCAN|t2(k2)|1       |4           |
==================================================
Outputs & filters:
-------------------------------------
  0 - output([t2.c1], [t2.c2], [t2.c3], [t2.c4], [t2.c5], [t2.c6], [t2.c7], [t2.c8], [t2.c9], [t2.c10]), filter(nil), rowset=16
      access([t2.c1], [t2.c6], [t2.c7], [t2.c2], [t2.c3], [t2.c4], [t2.c5], [t2.c8], [t2.c9], [t2.c10]), partitions(p0)
      is_index_back=true, is_global_index=false, 
      range_key([t2.c1], [t2.c2], [t2.c6], [t2.c7]), range(1,1,MIN,MIN ; 1,1,MAX,MAX), 
      range_cond([t2.c1 = 1], [t2.c2 = 1])
explain select * from t2 where c1 = 1 and c2 = 1 and c3 < 1;
Query Plan
==================================================
|ID|OPERATOR        |NAME  |EST.ROWS|EST.TIME(us)|
--------------------------------------------------
|0 |TABLE RANGE SCAN|t2(k3)|1       |4           |
==================================================
Outputs & filters:
-------------------------------------
  0 - output([t2.c1], [t2.c2], [t2.c3], [t2.c4], [t2.c5], [t2.c6], [t2.c7], [t2.c8], [t2.c9], [t2.c10]), filter(nil), rowset=16
      access([t2.c1], [t2.c6], [t2.c7], [t2.c2], [t2.c3], [t2.c4], [t2.c5], [t2.c8], [t2.c9], [t2.c10]), partitions(p0)
      is_index_back=true, is_global_index=false, 
      range_key([t2.c1], [t2.c2], [t2.c3], [t2.c6], [t2.c7]), range(1,1,NULL,MAX,MAX ; 1,1,1,MIN,MIN), 
      range_cond([t2.c1 = 1], [t2.c2 = 1], [t2.c3 < 1])
explain select * from t2 where c1 = 1 and c2 = 1 and c3 = 1;
Query Plan
==================================================
|ID|OPERATOR        |NAME  |EST.ROWS|EST.TIME(us)|
--------------------------------------------------
|0 |TABLE RANGE SCAN|t2(k3)|1       |4           |
==================================================
Outputs & filters:
-------------------------------------
  0 - output([t2.c1], [t2.c2], [t2.c3], [t2.c4], [t2.c5], [t2.c6], [t2.c7], [t2.c8], [t2.c9], [t2.c10]), filter(nil), rowset=16
      access([t2.c1], [t2.c6], [t2.c7], [t2.c2], [t2.c3], [t2.c4], [t2.c5], [t2.c8], [t2.c9], [t2.c10]), partitions(p0)
      is_index_back=true, is_global_index=false, 
      range_key([t2.c1], [t2.c2], [t2.c3], [t2.c6], [t2.c7]), range(1,1,1,MIN,MIN ; 1,1,1,MAX,MAX), 
      range_cond([t2.c1 = 1], [t2.c2 = 1], [t2.c3 = 1])
explain select count(*) from t3;
Query Plan
===================================================
|ID|OPERATOR         |NAME  |EST.ROWS|EST.TIME(us)|
---------------------------------------------------
|0 |SCALAR GROUP BY  |      |1       |4           |
|1 |└─TABLE FULL SCAN|t3(k1)|1       |4           |
===================================================
Outputs & filters:
-------------------------------------
  0 - output([T_FUN_COUNT_SUM(T_FUN_COUNT(*))]), filter(nil), rowset=16
      group(nil), agg_func([T_FUN_COUNT_SUM(T_FUN_COUNT(*))])
  1 - output([T_FUN_COUNT(*)]), filter(nil), rowset=16
      access(nil), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t3.c1], [t3.c2], [t3.c6]), range(MIN,MIN,MIN ; MAX,MAX,MAX)always true
explain select * from t3 where c1 = 1;
Query Plan
================================================
|ID|OPERATOR        |NAME|EST.ROWS|EST.TIME(us)|
------------------------------------------------
|0 |TABLE RANGE SCAN|t3  |1       |4           |
================================================
Outputs & filters:
-------------------------------------
  0 - output([t3.c1], [t3.c2], [t3.c3], [t3.c4], [t3.c5], [t3.c6], [t3.c7], [t3.c8], [t3.c9], [t3.c10]), filter(nil), rowset=16
      access([t3.c1], [t3.c2], [t3.c6], [t3.c3], [t3.c4], [t3.c5], [t3.c7], [t3.c8], [t3.c9], [t3.c10]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t3.c1], [t3.c2], [t3.c6]), range(1,MIN,MIN ; 1,MAX,MAX), 
      range_cond([t3.c1 = 1])
explain select * from t3 where c1 < 1;
Query Plan
================================================
|ID|OPERATOR        |NAME|EST.ROWS|EST.TIME(us)|
------------------------------------------------
|0 |TABLE RANGE SCAN|t3  |1       |4           |
================================================
Outputs & filters:
-------------------------------------
  0 - output([t3.c1], [t3.c2], [t3.c3], [t3.c4], [t3.c5], [t3.c6], [t3.c7], [t3.c8], [t3.c9], [t3.c10]), filter(nil), rowset=16
      access([t3.c1], [t3.c2], [t3.c6], [t3.c3], [t3.c4], [t3.c5], [t3.c7], [t3.c8], [t3.c9], [t3.c10]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t3.c1], [t3.c2], [t3.c6]), range(NULL,MAX,MAX ; 1,MIN,MIN), 
      range_cond([t3.c1 < 1])
explain select * from t3 where c1 > 1;
Query Plan
================================================
|ID|OPERATOR        |NAME|EST.ROWS|EST.TIME(us)|
------------------------------------------------
|0 |TABLE RANGE SCAN|t3  |1       |4           |
================================================
Outputs & filters:
-------------------------------------
  0 - output([t3.c1], [t3.c2], [t3.c3], [t3.c4], [t3.c5], [t3.c6], [t3.c7], [t3.c8], [t3.c9], [t3.c10]), filter(nil), rowset=16
      access([t3.c1], [t3.c2], [t3.c6], [t3.c3], [t3.c4], [t3.c5], [t3.c7], [t3.c8], [t3.c9], [t3.c10]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t3.c1], [t3.c2], [t3.c6]), range(1,MAX,MAX ; MAX,MAX,MAX), 
      range_cond([t3.c1 > 1])
explain select * from t3 where c1 > 1 and c1 < 10;
Query Plan
================================================
|ID|OPERATOR        |NAME|EST.ROWS|EST.TIME(us)|
------------------------------------------------
|0 |TABLE RANGE SCAN|t3  |1       |4           |
================================================
Outputs & filters:
-------------------------------------
  0 - output([t3.c1], [t3.c2], [t3.c3], [t3.c4], [t3.c5], [t3.c6], [t3.c7], [t3.c8], [t3.c9], [t3.c10]), filter(nil), rowset=16
      access([t3.c1], [t3.c2], [t3.c6], [t3.c3], [t3.c4], [t3.c5], [t3.c7], [t3.c8], [t3.c9], [t3.c10]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t3.c1], [t3.c2], [t3.c6]), range(1,MAX,MAX ; 10,MIN,MIN), 
      range_cond([t3.c1 > 1], [t3.c1 < 10])
explain select * from t3 where c1 = 1 and c2 < 1;
Query Plan
================================================
|ID|OPERATOR        |NAME|EST.ROWS|EST.TIME(us)|
------------------------------------------------
|0 |TABLE RANGE SCAN|t3  |1       |4           |
================================================
Outputs & filters:
-------------------------------------
  0 - output([t3.c1], [t3.c2], [t3.c3], [t3.c4], [t3.c5], [t3.c6], [t3.c7], [t3.c8], [t3.c9], [t3.c10]), filter(nil), rowset=16
      access([t3.c1], [t3.c2], [t3.c6], [t3.c3], [t3.c4], [t3.c5], [t3.c7], [t3.c8], [t3.c9], [t3.c10]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t3.c1], [t3.c2], [t3.c6]), range(1,NULL,MAX ; 1,1,MIN), 
      range_cond([t3.c1 = 1], [t3.c2 < 1])
explain select * from t3 where c1 = 1 and c2 = 1;
Query Plan
================================================
|ID|OPERATOR        |NAME|EST.ROWS|EST.TIME(us)|
------------------------------------------------
|0 |TABLE RANGE SCAN|t3  |1       |4           |
================================================
Outputs & filters:
-------------------------------------
  0 - output([t3.c1], [t3.c2], [t3.c3], [t3.c4], [t3.c5], [t3.c6], [t3.c7], [t3.c8], [t3.c9], [t3.c10]), filter(nil), rowset=16
      access([t3.c1], [t3.c2], [t3.c6], [t3.c3], [t3.c4], [t3.c5], [t3.c7], [t3.c8], [t3.c9], [t3.c10]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t3.c1], [t3.c2], [t3.c6]), range(1,1,MIN ; 1,1,MAX), 
      range_cond([t3.c1 = 1], [t3.c2 = 1])
explain select * from t3 where c1 = 1 and c2 = 1 and c3 < 1;
Query Plan
==================================================
|ID|OPERATOR        |NAME  |EST.ROWS|EST.TIME(us)|
--------------------------------------------------
|0 |TABLE RANGE SCAN|t3(k3)|1       |4           |
==================================================
Outputs & filters:
-------------------------------------
  0 - output([t3.c1], [t3.c2], [t3.c3], [t3.c4], [t3.c5], [t3.c6], [t3.c7], [t3.c8], [t3.c9], [t3.c10]), filter(nil), rowset=16
      access([t3.c1], [t3.c2], [t3.c6], [t3.c3], [t3.c4], [t3.c5], [t3.c7], [t3.c8], [t3.c9], [t3.c10]), partitions(p0)
      is_index_back=true, is_global_index=false, 
      range_key([t3.c1], [t3.c2], [t3.c3], [t3.c6]), range(1,1,NULL,MAX ; 1,1,1,MIN), 
      range_cond([t3.c1 = 1], [t3.c2 = 1], [t3.c3 < 1])
explain select * from t3 where c1 = 1 and c2 = 1 and c3 = 1;
Query Plan
==================================================
|ID|OPERATOR        |NAME  |EST.ROWS|EST.TIME(us)|
--------------------------------------------------
|0 |TABLE RANGE SCAN|t3(k3)|1       |4           |
==================================================
Outputs & filters:
-------------------------------------
  0 - output([t3.c1], [t3.c2], [t3.c3], [t3.c4], [t3.c5], [t3.c6], [t3.c7], [t3.c8], [t3.c9], [t3.c10]), filter(nil), rowset=16
      access([t3.c1], [t3.c2], [t3.c6], [t3.c3], [t3.c4], [t3.c5], [t3.c7], [t3.c8], [t3.c9], [t3.c10]), partitions(p0)
      is_index_back=true, is_global_index=false, 
      range_key([t3.c1], [t3.c2], [t3.c3], [t3.c6]), range(1,1,1,MIN ; 1,1,1,MAX), 
      range_cond([t3.c1 = 1], [t3.c2 = 1], [t3.c3 = 1])
