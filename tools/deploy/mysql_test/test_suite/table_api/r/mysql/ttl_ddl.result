drop table if exists test_kv_attr;
CREATE TABLE test_kv_attr(
K varbinary(1024) NOT NULL,
Q varbinary(256)  NOT NULL,
T bigint NOT NULL,
V varbinary(1024) DEFAULT NULL,
PRIMARY KEY (K, Q, T)
) kv_attributes ='{"HColumnDescriptor": {"TimeToLive": 5, "MaxVersions": 2}}' partition by key(K) partitions 3;
ERROR 0A000: kv attributes with wrong format not supported
CREATE TABLE test_kv_attr(
K varbinary(1024) NOT NULL,
Q varbinary(256)  NOT NULL,
T bigint NOT NULL,
V varbinary(1024) DEFAULT NULL,
PRIMARY KEY (K, Q, T)
) kv_attributes ='{}' partition by key(K) partitions 3;
ERROR 0A000: kv attributes with wrong format not supported
CREATE TABLE test_kv_attr(
K varbinary(1024) NOT NULL,
Q varbinary(256)  NOT NULL,
T bigint NOT NULL,
V varbinary(1024) DEFAULT NULL,
PRIMARY KEY (K, Q, T)
) kv_attributes ='{"Hbase": {"MaxVersion": 2}}' partition by key(K) partitions 3;
ERROR 0A000: kv attributes with wrong format not supported
CREATE TABLE test_kv_attr(
K varbinary(1024) NOT NULL,
Q varbinary(256)  NOT NULL,
T bigint NOT NULL,
V varbinary(1024) DEFAULT NULL,
PRIMARY KEY (K, Q, T)
) kv_attributes ='{"Hbase": {"TimeToLive": 5, "MaxVersions": 2, "MinVersions": 1}}' partition by key(K) partitions 3;
ERROR 0A000: kv attributes with wrong format not supported
CREATE TABLE test_kv_attr(
K varbinary(1024) NOT NULL,
Q varbinary(256)  NOT NULL,
T bigint NOT NULL,
V varbinary(1024) DEFAULT NULL,
PRIMARY KEY (K, Q, T)
) kv_attributes ='{"Hbase": {"TimeToLive": 1, "MaxVersions": 0}}' partition by key(K) partitions 3;
ERROR HY000: MaxVersions of hbase table must be greater than 0
CREATE TABLE test_kv_attr(
K varbinary(1024) NOT NULL,
Q varbinary(256)  NOT NULL,
T bigint NOT NULL,
V varbinary(1024) DEFAULT NULL,
PRIMARY KEY (K, Q, T)
) kv_attributes ='{"Hbase": {"TimeToLive": 0, "MaxVersions": 1}}' partition by key(K) partitions 3;
ERROR HY000: Time to live of hbase table must be greater than 0
CREATE TABLE test_kv_attr(
K varbinary(1024) NOT NULL,
Q varbinary(256)  NOT NULL,
T bigint NOT NULL,
V varbinary(1024) DEFAULT NULL,
PRIMARY KEY (K, Q, T)
) kv_attributes ='{"TimeSeries": {}}' partition by key(K) partitions 3;
ERROR 0A000: kv attributes with wrong format not supported
CREATE TABLE test_kv_attr(
K varbinary(1024) NOT NULL,
Q varbinary(256)  NOT NULL,
T bigint NOT NULL,
V varbinary(1024) DEFAULT NULL,
PRIMARY KEY (K, Q, T)
) kv_attributes ='{"Hbase": {"TimeToLive": 0}, "Hbase": {"MaxVersions": 1}}' partition by key(K) partitions 3;
ERROR 0A000: kv attributes with wrong format not supported
CREATE TABLE test_kv_attr(
K varbinary(1024) NOT NULL,
Q varbinary(256)  NOT NULL,
T bigint NOT NULL,
V varbinary(1024) DEFAULT NULL,
PRIMARY KEY (K, Q, T)
) kv_attributes ='{"Hbase": {"TimeToLive": "10", "MaxVersions": 2}}' partition by key(K) partitions 3;
ERROR 0A000: TimeToLive value not number not supported
CREATE TABLE test_kv_attr(
K varbinary(1024) NOT NULL,
Q varbinary(256)  NOT NULL,
T bigint NOT NULL,
V varbinary(1024) DEFAULT NULL,
PRIMARY KEY (K, Q, T)
) kv_attributes ='{"Hbase": {"TimeToLive": 10, "MaxVersions": "2"}}' partition by key(K) partitions 3;
ERROR 0A000: MaxVersions value not number not supported
CREATE TABLE test_kv_attr(
K varbinary(1024) NOT NULL,
Q varbinary(256)  NOT NULL,
T bigint NOT NULL,
V varbinary(1024) DEFAULT NULL,
PRIMARY KEY (K, Q, T)
) kv_attributes ='{"Hbase": {"TimeToLive": 10, "MaxVersions": 2, "MaxVersions": 3}}' partition by key(K) partitions 3;
ERROR 0A000: repeatedly setting MaxVersions not supported
CREATE TABLE test_kv_attr(
K varbinary(1024) NOT NULL,
Q varbinary(256)  NOT NULL,
T bigint NOT NULL,
V varbinary(1024) DEFAULT NULL,
PRIMARY KEY (K, Q, T)
) kv_attributes ='{"Hbase": {"TimeToLive": 10, "MaxVersions": 2, "TimeToLive": 20}}' partition by key(K) partitions 3;
ERROR 0A000: repeatedly setting TimeToLive not supported
CREATE TABLE test_kv_attr(
K varbinary(1024) NOT NULL,
Q varbinary(256)  NOT NULL,
T bigint NOT NULL,
V varbinary(1024) DEFAULT NULL,
PRIMARY KEY (K, Q, T)
) kv_attributes ='{"Hbase": {"TTL": 2}}' partition by key(K) partitions 3;
ERROR 0A000: kv attributes with wrong format not supported
CREATE TABLE test_kv_attr(
K varbinary(1024) NOT NULL,
Q varbinary(256)  NOT NULL,
T bigint NOT NULL,
V varbinary(1024) DEFAULT NULL,
PRIMARY KEY (K, Q, T)
) kv_attributes ='{"Table": {"TTL": 3}}' partition by key(K) partitions 3;
ERROR 0A000: kv attributes with wrong format not supported
CREATE TABLE test_kv_attr(
K varbinary(1024) NOT NULL,
Q varbinary(256)  NOT NULL,
T bigint NOT NULL,
V varbinary(1024) DEFAULT NULL,
PRIMARY KEY (K, Q, T)
) kv_attributes ='{"Table": }' partition by key(K) partitions 3;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your OceanBase version for the right syntax to use
CREATE TABLE test_kv_attr(
K varbinary(1024) NOT NULL,
Q varbinary(256)  NOT NULL,
T bigint NOT NULL,
V varbinary(1024) DEFAULT NULL,
PRIMARY KEY (K, Q, T)
) kv_attributes ='{"Table": {"TTL"}}' partition by key(K) partitions 3;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your OceanBase version for the right syntax to use
create table test_kv_attr(
db bigint not null,
rkey varbinary(16384) not null,
expire_ts timestamp(6) default null,
value varbinary(1048576) not null,
primary key(db, rkey)) 
kv_attributes ='{"Redis": {"isTTL": "true", "model": "string"}}'
partition by key(db, rkey) partitions 389;
ERROR 0A000: isTTL value not true or false not supported
create table test_kv_attr(
db bigint not null,
rkey varbinary(16384) not null,
expire_ts timestamp(6) default null,
value varbinary(1048576) not null,
primary key(db, rkey)) 
kv_attributes ='{"Redis": {"isTTL": true, "model": 10}}'
partition by key(db, rkey) partitions 389;
ERROR 0A000: Model value not string not supported
create table test_kv_attr(
db bigint not null,
rkey varbinary(16384) not null,
expire_ts timestamp(6) default null,
value varbinary(1048576) not null,
primary key(db, rkey)) 
kv_attributes ='{"Redis": {"isTTL": true, "model": "string", "isTTL": false}}'
partition by key(db, rkey) partitions 389;
ERROR 0A000: repeatedly setting isTTL not supported
create table test_kv_attr(
db bigint not null,
rkey varbinary(16384) not null,
expire_ts timestamp(6) default null,
value varbinary(1048576) not null,
primary key(db, rkey)) 
kv_attributes ='{"Redis": {"isTTL": true, "model": "string", "model": "hash"}}'
partition by key(db, rkey) partitions 389;
ERROR 0A000: repeatedly setting Model not supported
create table test_kv_attr(
db bigint not null,
rkey varbinary(16384) not null,
expire_ts timestamp(6) default null,
value varbinary(1048576) not null,
primary key(db, rkey)) 
kv_attributes ='{"Redis": {"isTTL": true, "model": "invalid"}}'
partition by key(db, rkey) partitions 389;
ERROR 0A000: Model value with wrong format not supported
create table test_kv_attr(
db bigint not null,
rkey varbinary(16384) not null,
expire_ts timestamp(6) default null,
value varbinary(1048576) not null,
primary key(db, rkey)) 
kv_attributes ='{"Redis": {"TimeToLive": true, "model": "string"}}'
partition by key(db, rkey) partitions 389;
ERROR 0A000: kv attributes with wrong format not supported
CREATE TABLE test_kv_attr(
K varbinary(1024) NOT NULL,
Q varbinary(256)  NOT NULL,
T bigint NOT NULL,
V varbinary(1024) DEFAULT NULL,
PRIMARY KEY (K, Q, T)
) kv_attributes ='{"Hbase": {"TimeToLive": 10, "MaxVersions": 2}}' partition by key(K) partitions 3;
show create table test_kv_attr;
Table	Create Table
test_kv_attr	CREATE TABLE `test_kv_attr` (
  `K` varbinary(1024) NOT NULL,
  `Q` varbinary(256) NOT NULL,
  `T` bigint(20) NOT NULL,
  `V` varbinary(1024) DEFAULT NULL,
  PRIMARY KEY (`K`, `Q`, `T`)
) ORGANIZATION INDEX DEFAULT CHARSET = utf8mb4 ROW_FORMAT = DYNAMIC COMPRESSION = 'zstd_1.3.8' REPLICA_NUM = 2 BLOCK_SIZE = 16384 USE_BLOOM_FILTER = FALSE ENABLE_MACRO_BLOCK_BLOOM_FILTER = FALSE TABLET_SIZE = 134217728 PCTFREE = 0 KV_ATTRIBUTES = '{"Hbase": {"TimeToLive": 10, "MaxVersions": 2}}'
 partition by key(k)
(partition `p0`,
partition `p1`,
partition `p2`)
alter table test_kv_attr kv_attributes = '{"Table": {"TTL"}}';
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your OceanBase version for the right syntax to use
alter table test_kv_attr kv_attributes = '{"Table": {"TTL": 3}}';
ERROR 0A000: kv attributes with wrong format not supported
alter table test_kv_attr kv_attributes = '{"Redis": {"isTTL": "true", "model": "string"}}';
ERROR 0A000: isTTL value not true or false not supported
alter table test_kv_attr kv_attributes = '{"Redis": {"isTTL": true, "model": "invalid"}}';
ERROR 0A000: Model value with wrong format not supported
alter table test_kv_attr kv_attributes = '{"Redis": {"TimeToLive": true, "model": "string"}}';
ERROR 0A000: kv attributes with wrong format not supported
alter table test_kv_attr kv_attributes = '{"Redis": {"isTTL": true, "model": 10}}';
ERROR 0A000: Model value not string not supported
alter table test_kv_attr kv_attributes = '{"Redis": {"isTTL": true, "model": "string", "isTTL": false}}';
ERROR 0A000: repeatedly setting isTTL not supported
alter table test_kv_attr kv_attributes = '{"Redis": {"isTTL": true, "model": "string", "model": "hash"}}';
ERROR 0A000: repeatedly setting Model not supported
alter table test_kv_attr kv_attributes '{"HColumnDescriptor": {"TimeToLive": 5, "MaxVersions": 2}}';
ERROR 0A000: kv attributes with wrong format not supported
alter table test_kv_attr kv_attributes '{}';
ERROR 0A000: kv attributes with wrong format not supported
alter table test_kv_attr kv_attributes = '{"Hbase": {"TTL": 2}}';
ERROR 0A000: kv attributes with wrong format not supported
alter table test_kv_attr kv_attributes = '{"Hbase": {"TimeToLive": 5, "MaxVersions": 2, "MinVersions": 1}}';
ERROR 0A000: kv attributes with wrong format not supported
alter table test_kv_attr kv_attributes = '{"Hbase": {"MaxVersion": 2}}';
ERROR 0A000: kv attributes with wrong format not supported
alter table test_kv_attr kv_attributes = '{"Hbase": {"MaxVersions": "2"}}';
ERROR 0A000: MaxVersions value not number not supported
alter table test_kv_attr kv_attributes = '{"Hbase": {"TimeToLive": "2"}}';
ERROR 0A000: TimeToLive value not number not supported
alter table test_kv_attr kv_attributes = '{"Hbase": {"MaxVersions": 2, "maxVerSions": 3}}';
ERROR 0A000: repeatedly setting MaxVersions not supported
alter table test_kv_attr kv_attributes = '{"Hbase": {"TimeToLive": 2, "timetoLive": 3}}';
ERROR 0A000: repeatedly setting TimeToLive not supported
alter table test_kv_attr kv_attributes = '{"Hbase": {"TimeToLive": 1, "MaxVersions": 0}}';
ERROR HY000: MaxVersions of hbase table must be greater than 0
alter table test_kv_attr kv_attributes = '{"Hbase": {"TimeToLive": 0, "MaxVersions": 1}}';
ERROR HY000: Time to live of hbase table must be greater than 0
alter table test_kv_attr kv_attributes ='{"Redis": {"isTTL": true, "model": "string"}}';
alter table test_kv_attr kv_attributes ='{"Table": {}}';
alter table test_kv_attr kv_attributes ='{"hbase": {"maxversions": 3}}';
alter table test_kv_attr kv_attributes ='{"Hbase": {"MaxVersions": 4}}';
alter table test_kv_attr kv_attributes ='{"Hbase": {"timetolive": 20000000}}';
alter table test_kv_attr kv_attributes ='{"Hbase": {"TimeToLive": 10000000}}';
alter table test_kv_attr kv_attributes ='{"Hbase": {"MaxVersions": 4, "TimeToLive": 10000000}}';
alter table test_kv_attr kv_attributes ='{"Hbase": {}}';
drop table if exists test_ttl;
create table test_ttl(a int primary key, b varchar(1024), c timestamp) TTL(c + INTERVAL 1 hour);
show create table test_ttl;
Table	Create Table
test_ttl	CREATE TABLE `test_ttl` (
  `a` int(11) NOT NULL,
  `b` varchar(1024) DEFAULT NULL,
  `c` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`a`)
) ORGANIZATION INDEX DEFAULT CHARSET = utf8mb4 ROW_FORMAT = DYNAMIC COMPRESSION = 'zstd_1.3.8' REPLICA_NUM = 2 BLOCK_SIZE = 16384 USE_BLOOM_FILTER = FALSE ENABLE_MACRO_BLOCK_BLOOM_FILTER = FALSE TABLET_SIZE = 134217728 PCTFREE = 0 TTL = (c + INTERVAL 1 hour)
drop table test_ttl;
create table test_ttl(a int primary key, b varchar(1024), c datetime) TTL(c + INTERVAL 1 hour);
show create table test_ttl;
Table	Create Table
test_ttl	CREATE TABLE `test_ttl` (
  `a` int(11) NOT NULL,
  `b` varchar(1024) DEFAULT NULL,
  `c` datetime DEFAULT NULL,
  PRIMARY KEY (`a`)
) ORGANIZATION INDEX DEFAULT CHARSET = utf8mb4 ROW_FORMAT = DYNAMIC COMPRESSION = 'zstd_1.3.8' REPLICA_NUM = 2 BLOCK_SIZE = 16384 USE_BLOOM_FILTER = FALSE ENABLE_MACRO_BLOCK_BLOOM_FILTER = FALSE TABLET_SIZE = 134217728 PCTFREE = 0 TTL = (c + INTERVAL 1 hour)
drop table test_ttl;
create table test_ttl(a int primary key, b varchar(1024), c varchar(1024)) TTL(c + INTERVAL 1 hour);
ERROR HY000: Column type of 'c' is not supported for TTL definition
create table test_ttl(a int primary key, b varchar(1024), c date) TTL(c + INTERVAL 1 hour);
ERROR HY000: Column type of 'c' is not supported for TTL definition
create table test_ttl(a int primary key, b varchar(1024), c time) TTL(c + INTERVAL 1 hour);
ERROR HY000: Column type of 'c' is not supported for TTL definition
create table test_ttl(a int primary key, b varchar(1024)) TTL(now() + INTERVAL 1 hour);
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your OceanBase version for the right syntax to use near '() + INTERVAL 1 hour)' at line 1
create table test_ttl(a int primary key, b varchar(1024)) TTL(c + INTERVAL 1 hour);
ERROR HY000: TTL column 'c' not exists
create table test_ttl(a int primary key, b varchar(1024), c timestamp, d datetime) TTL(c + INTERVAL 0 hour);
show create table test_ttl;
Table	Create Table
test_ttl	CREATE TABLE `test_ttl` (
  `a` int(11) NOT NULL,
  `b` varchar(1024) DEFAULT NULL,
  `c` timestamp NULL DEFAULT NULL,
  `d` datetime DEFAULT NULL,
  PRIMARY KEY (`a`)
) ORGANIZATION INDEX DEFAULT CHARSET = utf8mb4 ROW_FORMAT = DYNAMIC COMPRESSION = 'zstd_1.3.8' REPLICA_NUM = 2 BLOCK_SIZE = 16384 USE_BLOOM_FILTER = FALSE ENABLE_MACRO_BLOCK_BLOOM_FILTER = FALSE TABLET_SIZE = 134217728 PCTFREE = 0 TTL = (c + INTERVAL 0 hour)
alter table test_ttl TTL(c + INTERVAL 60 DAY);
show create table test_ttl;
Table	Create Table
test_ttl	CREATE TABLE `test_ttl` (
  `a` int(11) NOT NULL,
  `b` varchar(1024) DEFAULT NULL,
  `c` timestamp NULL DEFAULT NULL,
  `d` datetime DEFAULT NULL,
  PRIMARY KEY (`a`)
) ORGANIZATION INDEX DEFAULT CHARSET = utf8mb4 ROW_FORMAT = DYNAMIC COMPRESSION = 'zstd_1.3.8' REPLICA_NUM = 2 BLOCK_SIZE = 16384 USE_BLOOM_FILTER = FALSE ENABLE_MACRO_BLOCK_BLOOM_FILTER = FALSE TABLET_SIZE = 134217728 PCTFREE = 0 TTL = (c + INTERVAL 60 DAY)
drop table test_ttl;
create table test_ttl(a int primary key, b varchar(1024), c timestamp) TTL(c + INTERVAL 1 second);
drop table test_ttl;
create table test_ttl(a int primary key, b varchar(1024), c timestamp) TTL(c + INTERVAL 1 minute);
drop table test_ttl;
create table test_ttl(a int primary key, b varchar(1024), c timestamp) TTL(c + INTERVAL 1 hour);
drop table test_ttl;
create table test_ttl(a int primary key, b varchar(1024), c timestamp) TTL(c + INTERVAL 1 day);
drop table test_ttl;
create table test_ttl(a int primary key, b varchar(1024), c timestamp) TTL(c + INTERVAL 1 month);
drop table test_ttl;
create table test_ttl(a int primary key, b varchar(1024), c timestamp) TTL(c + INTERVAL 1 year);
alter table test_ttl drop column c;
ERROR 0A000: Modify/Change TTL column not supported
alter table test_ttl change column c c2 datetime;
ERROR 0A000: Modify/Change TTL column not supported
alter table test_ttl modify column c bigint;
ERROR 0A000: Modify/Change TTL column not supported
alter table test_ttl modify column c datetime;
ERROR 0A000: Modify/Change TTL column not supported
alter table test_ttl ttl(d + INTERVAL 1 minute);
ERROR HY000: TTL column 'd' not exists
alter table test_ttl add column d datetime, ttl(d + INTERVAL 1 minute);
ERROR HY000: TTL column 'd' not exists
alter table test_ttl remove ttl;
show create table test_ttl;
Table	Create Table
test_ttl	CREATE TABLE `test_ttl` (
  `a` int(11) NOT NULL,
  `b` varchar(1024) DEFAULT NULL,
  `c` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`a`)
) ORGANIZATION INDEX DEFAULT CHARSET = utf8mb4 ROW_FORMAT = DYNAMIC COMPRESSION = 'zstd_1.3.8' REPLICA_NUM = 2 BLOCK_SIZE = 16384 USE_BLOOM_FILTER = FALSE ENABLE_MACRO_BLOCK_BLOOM_FILTER = FALSE TABLET_SIZE = 134217728 PCTFREE = 0
alter table test_ttl drop column c;
drop table test_ttl;
create table test_ttl(a int primary key, b varchar(1024), c timestamp) TTL(c + INTERVAL -1 year);
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your OceanBase version for the right syntax to use near '-1 year)' at line 1
create table test_ttl(a int primary key, b varchar(1024), c timestamp) TTL(c +- INTERVAL -1 year);
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your OceanBase version for the right syntax to use near '- INTERVAL -1 year)' at line 1
create table test_ttl(a int primary key, b varchar(1024), c timestamp) TTL(c + INTERVA L -1 year);
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your OceanBase version for the right syntax to use near 'INTERVA L -1 year)' at line 1
create table test_ttl(a int primary key, b varchar(1024), c timestamp) TTL('c' + INTERVAL 1 year);
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your OceanBase version for the right syntax to use near ''c' + INTERVAL 1 year)' at line 1
create table test_ttl(a int primary key, b varchar(1024), c timestamp) TTL(c + INTERVAL '1' year);
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your OceanBase version for the right syntax to use near ''1' year)' at line 1
create table test_ttl(a int primary key, b varchar(1024), c timestamp) TTL(         c       + INTERVAL 1 year  );
drop table test_ttl;
create table test_ttl(a int primary key, b varchar(1024), c timestamp) TTL(         `c`       + INTERVAL 1 year  );
alter table test_ttl TTL( c + INTERVAL 1 month  );
alter table test_ttl TTL( c + INTERVAL 1 day  );
alter table test_ttl TTL( c + INTERVAL 1 hour  );
alter table test_ttl TTL( `c` + INTERVAL 1 minute  );
alter table test_ttl TTL( `c` + INTERVAL 1 second  );
alter table test_ttl add column d datetime;
alter table test_ttl TTL( `d` + INTERVAL 1 second  );
show create table test_ttl;
Table	Create Table
test_ttl	CREATE TABLE `test_ttl` (
  `a` int(11) NOT NULL,
  `b` varchar(1024) DEFAULT NULL,
  `c` timestamp NULL DEFAULT NULL,
  `d` datetime DEFAULT NULL,
  PRIMARY KEY (`a`)
) ORGANIZATION INDEX DEFAULT CHARSET = utf8mb4 ROW_FORMAT = DYNAMIC COMPRESSION = 'zstd_1.3.8' REPLICA_NUM = 2 BLOCK_SIZE = 16384 USE_BLOOM_FILTER = FALSE ENABLE_MACRO_BLOCK_BLOOM_FILTER = FALSE TABLET_SIZE = 134217728 PCTFREE = 0 TTL = (`d` + INTERVAL 1 second)
drop table test_kv_attr;
drop table test_ttl;
