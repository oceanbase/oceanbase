[
  {
    "scenario": "express_oltp",
    "comment" : "for workloads like trade, payment core system, internet high throughput application, etc. no restrictions like foreign key, no stored procedure, no long transaction, no large transaction, no complex join, no complex subquery",
    "parameters": {
      "cluster": [
        {
          "name": "enable_record_trace_log",
          "value": false,
          "comment": "forbid recording sql and transaction trace event"
        },
        {
          "name": "enable_syslog_recycle",
          "value": 1,
          "comment": "enable syslog auto recycle can prevent log files from filling up disk space"
        },
        {
          "name": "max_syslog_file_count",
          "value": 300,
          "comment": "when enable_syslog_recycle is enabled, should set this value to a proper value. 300 is an empirical value."
        }
      ],
      "tenant": [
        {
          "name": "log_transport_compress_all",
          "value": 1,
          "comment": "In scenarios with limited bandwidth, network bandwidth can be saved with a small amount of CPU overhead through RPC compression"
        },
        {
          "name": "default_load_mode",
          "value": "DISABLED",
          "comment": "for simple OLTP workloads, the default import is not-direct load"
        },
        {
          "name": "direct_load_allow_fallback",
          "value": 1,
          "comment": "for simple OLTP workloads, fallback is allowed when direct load fails"
        },
        {
          "name": "_enable_filter_reordering",
          "value": false,
          "comment": "disable filter reordering for simple OLTP workloads"
        }
      ]
    }
  },
  {
    "scenario": "complex_oltp",
    "comment" : "for workloads like bank, insurance system. they often have complex join, complex correlated subquery, batch jobs written in PL, have both long and large transactions. Sometimes use parallel execution for short running queries",
    "parameters": {
      "cluster": [
        {
          "name": "enable_record_trace_log",
          "value": false,
          "comment": "forbid recording sql and transaction trace event"
        },
        {
          "name": "large_query_threshold",
          "value": "600s",
          "comment": "for complex OLTP scenario, some query will run for very long time."
        },
        {
          "name": "enable_syslog_recycle",
          "value": 1,
          "comment": "enable syslog auto recycle can prevent log files from filling up disk space"
        },
        {
          "name": "max_syslog_file_count",
          "value": 300,
          "comment": "when enable_syslog_recycle is enabled, should set this value to a proper value. 300 is an empirical value."
        }
      ],
      "tenant": [
        {
          "name": "log_transport_compress_all",
          "value": 1,
          "comment": "In scenarios with limited bandwidth, network bandwidth can be saved with a small amount of CPU overhead through RPC compression"
        },
        {
          "name": "default_load_mode",
          "value": "DISABLED",
          "comment": "for complex OLTP workloads, the default import is not-direct load"
        },
        {
          "name": "direct_load_allow_fallback",
          "value": 1,
          "comment": "for complex OLTP workloads, fallback is allowed when direct load fails"
        },
        {
          "name": "_enable_filter_reordering",
          "value": false,
          "comment": "disable filter reordering for complex OLTP workloads"
        }
      ]
    }
  },
  {
    "scenario": "olap",
    "comment": "for real-time data warehouse analytics scenarios.",
    "parameters": {
      "cluster": [
        {
          "name": "enable_record_trace_log",
          "value": false,
          "comment": "disable trace log for better AP performance"
        },
        {
          "name": "trace_log_slow_query_watermark",
          "value": "7d",
          "comment": "7 days. no 'slow query' concept for AP query"
        },
        {
          "name": "large_query_threshold",
          "value": "0ms",
          "comment": "disable large query detection for AP query"
        },
        {
          "name": "enable_syslog_recycle",
          "value": 1,
          "comment": "enable syslog auto recycle can prevent log files from filling up disk space"
        },
        {
          "name": "max_syslog_file_count",
          "value": 300,
          "comment": "when enable_syslog_recycle is enabled, should set this value to a proper value. 300 is an empirical value."
        }
      ],
      "tenant": [
        {
          "name": "default_table_store_format",
          "value": "column",
          "comment": "default to column format for AP"
        },
        {
          "name": "_io_read_batch_size",
          "value": "128K",
          "comment": "Maximum batch size in one read io request"
        },
        {
          "name": "_io_read_redundant_limit_percentage",
          "value": "50",
          "comment": "Maximum percentage of redundant size in one read io request, redundant data means blocks in the middle of the batch that hit in cache or filtered by skipping index but must be read"
        },
        {
          "name": "default_load_mode",
          "value": "FULL_DIRECT_WRITE",
          "comment": "for classic OLAP workloads, the default import is full direct load"
        },
        {
          "name": "direct_load_allow_fallback",
          "value": 0,
          "comment": "for classic OLAP workloads, fallback is not allowed when direct load fails"
        }
      ]
    }
  },
  {
    "scenario": "kv",
    "comment": "for key-value workloads and hbase-like wide-column workloads, which commonly experience very high throughput and are sensitive to latency",
    "parameters": {
      "cluster": [
        {
          "name": "enable_record_trace_log",
          "value": false,
          "comment": "disable trace log for better AP performance"
        },
        {
          "name": "large_query_threshold",
          "value": "0ms",
          "comment": "disable large query detection for KV mode"
        },
        {
          "name": "enable_syslog_recycle",
          "value": 1,
          "comment": "enable syslog auto recycle can prevent log files from filling up disk space"
        },
        {
          "name": "max_syslog_file_count",
          "value": 300,
          "comment": "when enable_syslog_recycle is enabled, should set this value to a proper value. 300 is an empirical value."
        }
      ],
      "tenant": [
        {
          "name": "log_transport_compress_all",
          "value": 1,
          "comment": "In scenarios with limited bandwidth, network bandwidth can be saved with a small amount of CPU overhead through RPC compression"
        },
        {
          "name": "_enable_filter_reordering",
          "value": false,
          "comment": "disable filter reordering for KV mode"
        }
      ]
    }
  },
  {
    "scenario": "htap",
    "comment": "for mixed OLAP and OLTP workload. Typically utilized for obtaining instant insights from active operational data, fraud detection, and personalized recommendations",
    "parameters": {
      "cluster": [
        {
          "name": "large_query_threshold",
          "value": "600s",
          "comment": "AP query exist in HTAP workload, we need it running fast too."
        },
        {
          "name": "enable_record_trace_log",
          "value": false,
          "comment": "disable trace log for better AP performance"
        },
        {
          "name": "enable_syslog_recycle",
          "value": 1,
          "comment": "enable syslog auto recycle can prevent log files from filling up disk space"
        },
        {
          "name": "max_syslog_file_count",
          "value": 300,
          "comment": "when enable_syslog_recycle is enabled, should set this value to a proper value. 300 is an empirical value."
        }
      ],
      "tenant": [
        {
          "name": "log_transport_compress_all",
          "value": 1,
          "comment": "In scenarios with limited bandwidth, network bandwidth can be saved with a small amount of CPU overhead through RPC compression"
        },
        {
          "name": "default_load_mode",
          "value": "DISABLED",
          "comment": "for classic HTAP workloads, the default import is not-direct load"
        },
        {
          "name": "direct_load_allow_fallback",
          "value": 1,
          "comment": "for classic HTAP workloads, fallback is allowed when direct load fails"
        }
      ]
    }
  },
  {
    "scenario": "express_oltp_perf",
    "comment" : "for high performance workloads like trade, payment core system, internet high throughput application, etc. no restrictions like foreign key, no stored procedure, no long transaction, no large transaction, no complex join, no complex subquery",
    "parameters": {
      "cluster": [
        {
          "name": "_enable_defensive_check",
          "value": 0,
          "comment": "disabling the defensive check feature in production environment can result in a 10% performance improvement for DML operations"
        },
        {
          "name": "_enable_newsort",
          "value": false,
          "comment": "disabling the new sort algorithm can achieve 20% performance improvement for range query"
        },
        {
          "name": "enable_record_trace_log",
          "value": false,
          "comment": "forbid recording sql and transaction trace event"
        },
        {
          "name": "ignore_replay_checksum_error",
          "value": true,
          "comment": "ignore transaction data checksum validation when submitting redo/commit log"
        },
        {
          "name": "micro_block_merge_verify_level",
          "value": 0,
          "comment": "accelating the process of minor/mini merge"
        },
        {
          "name": "_lcl_op_interval",
          "value": "0ms",
          "comment": "closing deadlock detecting"
        }
      ],
      "tenant": [
        {
          "name": "default_auto_increment_mode",
          "value": "noorder",
          "comment": "adjust the default auto-increment mode to avoid acquiring incremental id with rpc"
        },
        {
          "name": "_enable_adaptive_compaction",
          "value": false,
          "comment": "close adaptive compaction to reduce cpu costs of tablet major compaction"
        },
        {
          "name": "_enable_filter_reordering",
          "value": false,
          "comment": "disable filter reordering for simple OLTP_PERF workloads"
        }
      ]
    }
  }
]
