/**
 * Copyright (c) 2021 OceanBase
 * OceanBase CE is licensed under Mulan PubL v2.
 * You can use this software according to the terms and conditions of the Mulan PubL v2.
 * You may obtain a copy of Mulan PubL v2 at:
 *          http://license.coscl.org.cn/MulanPubL-2.0
 * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
 * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
 * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
 * See the Mulan PubL v2 for more details.
 */

/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ob_pl_java_udf.proto */

#ifndef PROTOBUF_C_ob_5fpl_5fjava_5fudf_2eproto__INCLUDED
#define PROTOBUF_C_ob_5fpl_5fjava_5fudf_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif


typedef struct ObPl__JavaUdf__BatchedArgs ObPl__JavaUdf__BatchedArgs;
typedef struct ObPl__JavaUdf__Values ObPl__JavaUdf__Values;
typedef struct ObPl__JavaUdf__ByteValues ObPl__JavaUdf__ByteValues;
typedef struct ObPl__JavaUdf__ShortValues ObPl__JavaUdf__ShortValues;
typedef struct ObPl__JavaUdf__IntValues ObPl__JavaUdf__IntValues;
typedef struct ObPl__JavaUdf__LongValues ObPl__JavaUdf__LongValues;
typedef struct ObPl__JavaUdf__FloatValues ObPl__JavaUdf__FloatValues;
typedef struct ObPl__JavaUdf__DoubleValues ObPl__JavaUdf__DoubleValues;
typedef struct ObPl__JavaUdf__BigDecimalValues ObPl__JavaUdf__BigDecimalValues;
typedef struct ObPl__JavaUdf__StringValues ObPl__JavaUdf__StringValues;
typedef struct ObPl__JavaUdf__ByteBufferValues ObPl__JavaUdf__ByteBufferValues;


/* --- enums --- */


/* --- messages --- */

struct  ObPl__JavaUdf__BatchedArgs
{
  ProtobufCMessage base;
  uint64_t batch_size;
  size_t n_args;
  ObPl__JavaUdf__Values **args;
};
#define OB_PL__JAVA_UDF__BATCHED_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ob_pl__java_udf__batched_args__descriptor) \
, 0, 0,NULL }


typedef enum {
  OB_PL__JAVA_UDF__VALUES__VALUES__NOT_SET = 0,
  OB_PL__JAVA_UDF__VALUES__VALUES_BYTE_VALUES = 2,
  OB_PL__JAVA_UDF__VALUES__VALUES_SHORT_VALUES = 3,
  OB_PL__JAVA_UDF__VALUES__VALUES_INT_VALUES = 4,
  OB_PL__JAVA_UDF__VALUES__VALUES_LONG_VALUES = 5,
  OB_PL__JAVA_UDF__VALUES__VALUES_FLOAT_VALUES = 6,
  OB_PL__JAVA_UDF__VALUES__VALUES_DOUBLE_VALUES = 7,
  OB_PL__JAVA_UDF__VALUES__VALUES_BIG_DECIMAL_VALUES = 8,
  OB_PL__JAVA_UDF__VALUES__VALUES_STRING_VALUES = 9,
  OB_PL__JAVA_UDF__VALUES__VALUES_BYTE_BUFFER_VALUES = 10
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(OB_PL__JAVA_UDF__VALUES__VALUES__CASE)
} ObPl__JavaUdf__Values__ValuesCase;

struct  ObPl__JavaUdf__Values
{
  ProtobufCMessage base;
  ProtobufCBinaryData null_map;
  ObPl__JavaUdf__Values__ValuesCase values_case;
  union {
    ObPl__JavaUdf__BigDecimalValues *big_decimal_values;
    ObPl__JavaUdf__ByteBufferValues *byte_buffer_values;
    ObPl__JavaUdf__ByteValues *byte_values;
    ObPl__JavaUdf__DoubleValues *double_values;
    ObPl__JavaUdf__FloatValues *float_values;
    ObPl__JavaUdf__IntValues *int_values;
    ObPl__JavaUdf__LongValues *long_values;
    ObPl__JavaUdf__ShortValues *short_values;
    ObPl__JavaUdf__StringValues *string_values;
  };
};
#define OB_PL__JAVA_UDF__VALUES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ob_pl__java_udf__values__descriptor) \
, {0,NULL}, OB_PL__JAVA_UDF__VALUES__VALUES__NOT_SET, {0} }


struct  ObPl__JavaUdf__ByteValues
{
  ProtobufCMessage base;
  ProtobufCBinaryData value;
};
#define OB_PL__JAVA_UDF__BYTE_VALUES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ob_pl__java_udf__byte_values__descriptor) \
, {0,NULL} }


struct  ObPl__JavaUdf__ShortValues
{
  ProtobufCMessage base;
  size_t n_value;
  int32_t *value;
};
#define OB_PL__JAVA_UDF__SHORT_VALUES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ob_pl__java_udf__short_values__descriptor) \
, 0,NULL }


struct  ObPl__JavaUdf__IntValues
{
  ProtobufCMessage base;
  size_t n_value;
  int32_t *value;
};
#define OB_PL__JAVA_UDF__INT_VALUES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ob_pl__java_udf__int_values__descriptor) \
, 0,NULL }


struct  ObPl__JavaUdf__LongValues
{
  ProtobufCMessage base;
  size_t n_value;
  int64_t *value;
};
#define OB_PL__JAVA_UDF__LONG_VALUES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ob_pl__java_udf__long_values__descriptor) \
, 0,NULL }


struct  ObPl__JavaUdf__FloatValues
{
  ProtobufCMessage base;
  size_t n_value;
  float *value;
};
#define OB_PL__JAVA_UDF__FLOAT_VALUES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ob_pl__java_udf__float_values__descriptor) \
, 0,NULL }


struct  ObPl__JavaUdf__DoubleValues
{
  ProtobufCMessage base;
  size_t n_value;
  double *value;
};
#define OB_PL__JAVA_UDF__DOUBLE_VALUES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ob_pl__java_udf__double_values__descriptor) \
, 0,NULL }


struct  ObPl__JavaUdf__BigDecimalValues
{
  ProtobufCMessage base;
  size_t n_value;
  ProtobufCBinaryData *value;
};
#define OB_PL__JAVA_UDF__BIG_DECIMAL_VALUES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ob_pl__java_udf__big_decimal_values__descriptor) \
, 0,NULL }


struct  ObPl__JavaUdf__StringValues
{
  ProtobufCMessage base;
  size_t n_value;
  ProtobufCBinaryData *value;
};
#define OB_PL__JAVA_UDF__STRING_VALUES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ob_pl__java_udf__string_values__descriptor) \
, 0,NULL }


struct  ObPl__JavaUdf__ByteBufferValues
{
  ProtobufCMessage base;
  size_t n_value;
  ProtobufCBinaryData *value;
};
#define OB_PL__JAVA_UDF__BYTE_BUFFER_VALUES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ob_pl__java_udf__byte_buffer_values__descriptor) \
, 0,NULL }


/* ObPl__JavaUdf__BatchedArgs methods */
void   ob_pl__java_udf__batched_args__init
                     (ObPl__JavaUdf__BatchedArgs         *message);
size_t ob_pl__java_udf__batched_args__get_packed_size
                     (const ObPl__JavaUdf__BatchedArgs   *message);
size_t ob_pl__java_udf__batched_args__pack
                     (const ObPl__JavaUdf__BatchedArgs   *message,
                      uint8_t             *out);
size_t ob_pl__java_udf__batched_args__pack_to_buffer
                     (const ObPl__JavaUdf__BatchedArgs   *message,
                      ProtobufCBuffer     *buffer);
ObPl__JavaUdf__BatchedArgs *
       ob_pl__java_udf__batched_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ob_pl__java_udf__batched_args__free_unpacked
                     (ObPl__JavaUdf__BatchedArgs *message,
                      ProtobufCAllocator *allocator);
/* ObPl__JavaUdf__Values methods */
void   ob_pl__java_udf__values__init
                     (ObPl__JavaUdf__Values         *message);
size_t ob_pl__java_udf__values__get_packed_size
                     (const ObPl__JavaUdf__Values   *message);
size_t ob_pl__java_udf__values__pack
                     (const ObPl__JavaUdf__Values   *message,
                      uint8_t             *out);
size_t ob_pl__java_udf__values__pack_to_buffer
                     (const ObPl__JavaUdf__Values   *message,
                      ProtobufCBuffer     *buffer);
ObPl__JavaUdf__Values *
       ob_pl__java_udf__values__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ob_pl__java_udf__values__free_unpacked
                     (ObPl__JavaUdf__Values *message,
                      ProtobufCAllocator *allocator);
/* ObPl__JavaUdf__ByteValues methods */
void   ob_pl__java_udf__byte_values__init
                     (ObPl__JavaUdf__ByteValues         *message);
size_t ob_pl__java_udf__byte_values__get_packed_size
                     (const ObPl__JavaUdf__ByteValues   *message);
size_t ob_pl__java_udf__byte_values__pack
                     (const ObPl__JavaUdf__ByteValues   *message,
                      uint8_t             *out);
size_t ob_pl__java_udf__byte_values__pack_to_buffer
                     (const ObPl__JavaUdf__ByteValues   *message,
                      ProtobufCBuffer     *buffer);
ObPl__JavaUdf__ByteValues *
       ob_pl__java_udf__byte_values__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ob_pl__java_udf__byte_values__free_unpacked
                     (ObPl__JavaUdf__ByteValues *message,
                      ProtobufCAllocator *allocator);
/* ObPl__JavaUdf__ShortValues methods */
void   ob_pl__java_udf__short_values__init
                     (ObPl__JavaUdf__ShortValues         *message);
size_t ob_pl__java_udf__short_values__get_packed_size
                     (const ObPl__JavaUdf__ShortValues   *message);
size_t ob_pl__java_udf__short_values__pack
                     (const ObPl__JavaUdf__ShortValues   *message,
                      uint8_t             *out);
size_t ob_pl__java_udf__short_values__pack_to_buffer
                     (const ObPl__JavaUdf__ShortValues   *message,
                      ProtobufCBuffer     *buffer);
ObPl__JavaUdf__ShortValues *
       ob_pl__java_udf__short_values__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ob_pl__java_udf__short_values__free_unpacked
                     (ObPl__JavaUdf__ShortValues *message,
                      ProtobufCAllocator *allocator);
/* ObPl__JavaUdf__IntValues methods */
void   ob_pl__java_udf__int_values__init
                     (ObPl__JavaUdf__IntValues         *message);
size_t ob_pl__java_udf__int_values__get_packed_size
                     (const ObPl__JavaUdf__IntValues   *message);
size_t ob_pl__java_udf__int_values__pack
                     (const ObPl__JavaUdf__IntValues   *message,
                      uint8_t             *out);
size_t ob_pl__java_udf__int_values__pack_to_buffer
                     (const ObPl__JavaUdf__IntValues   *message,
                      ProtobufCBuffer     *buffer);
ObPl__JavaUdf__IntValues *
       ob_pl__java_udf__int_values__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ob_pl__java_udf__int_values__free_unpacked
                     (ObPl__JavaUdf__IntValues *message,
                      ProtobufCAllocator *allocator);
/* ObPl__JavaUdf__LongValues methods */
void   ob_pl__java_udf__long_values__init
                     (ObPl__JavaUdf__LongValues         *message);
size_t ob_pl__java_udf__long_values__get_packed_size
                     (const ObPl__JavaUdf__LongValues   *message);
size_t ob_pl__java_udf__long_values__pack
                     (const ObPl__JavaUdf__LongValues   *message,
                      uint8_t             *out);
size_t ob_pl__java_udf__long_values__pack_to_buffer
                     (const ObPl__JavaUdf__LongValues   *message,
                      ProtobufCBuffer     *buffer);
ObPl__JavaUdf__LongValues *
       ob_pl__java_udf__long_values__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ob_pl__java_udf__long_values__free_unpacked
                     (ObPl__JavaUdf__LongValues *message,
                      ProtobufCAllocator *allocator);
/* ObPl__JavaUdf__FloatValues methods */
void   ob_pl__java_udf__float_values__init
                     (ObPl__JavaUdf__FloatValues         *message);
size_t ob_pl__java_udf__float_values__get_packed_size
                     (const ObPl__JavaUdf__FloatValues   *message);
size_t ob_pl__java_udf__float_values__pack
                     (const ObPl__JavaUdf__FloatValues   *message,
                      uint8_t             *out);
size_t ob_pl__java_udf__float_values__pack_to_buffer
                     (const ObPl__JavaUdf__FloatValues   *message,
                      ProtobufCBuffer     *buffer);
ObPl__JavaUdf__FloatValues *
       ob_pl__java_udf__float_values__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ob_pl__java_udf__float_values__free_unpacked
                     (ObPl__JavaUdf__FloatValues *message,
                      ProtobufCAllocator *allocator);
/* ObPl__JavaUdf__DoubleValues methods */
void   ob_pl__java_udf__double_values__init
                     (ObPl__JavaUdf__DoubleValues         *message);
size_t ob_pl__java_udf__double_values__get_packed_size
                     (const ObPl__JavaUdf__DoubleValues   *message);
size_t ob_pl__java_udf__double_values__pack
                     (const ObPl__JavaUdf__DoubleValues   *message,
                      uint8_t             *out);
size_t ob_pl__java_udf__double_values__pack_to_buffer
                     (const ObPl__JavaUdf__DoubleValues   *message,
                      ProtobufCBuffer     *buffer);
ObPl__JavaUdf__DoubleValues *
       ob_pl__java_udf__double_values__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ob_pl__java_udf__double_values__free_unpacked
                     (ObPl__JavaUdf__DoubleValues *message,
                      ProtobufCAllocator *allocator);
/* ObPl__JavaUdf__BigDecimalValues methods */
void   ob_pl__java_udf__big_decimal_values__init
                     (ObPl__JavaUdf__BigDecimalValues         *message);
size_t ob_pl__java_udf__big_decimal_values__get_packed_size
                     (const ObPl__JavaUdf__BigDecimalValues   *message);
size_t ob_pl__java_udf__big_decimal_values__pack
                     (const ObPl__JavaUdf__BigDecimalValues   *message,
                      uint8_t             *out);
size_t ob_pl__java_udf__big_decimal_values__pack_to_buffer
                     (const ObPl__JavaUdf__BigDecimalValues   *message,
                      ProtobufCBuffer     *buffer);
ObPl__JavaUdf__BigDecimalValues *
       ob_pl__java_udf__big_decimal_values__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ob_pl__java_udf__big_decimal_values__free_unpacked
                     (ObPl__JavaUdf__BigDecimalValues *message,
                      ProtobufCAllocator *allocator);
/* ObPl__JavaUdf__StringValues methods */
void   ob_pl__java_udf__string_values__init
                     (ObPl__JavaUdf__StringValues         *message);
size_t ob_pl__java_udf__string_values__get_packed_size
                     (const ObPl__JavaUdf__StringValues   *message);
size_t ob_pl__java_udf__string_values__pack
                     (const ObPl__JavaUdf__StringValues   *message,
                      uint8_t             *out);
size_t ob_pl__java_udf__string_values__pack_to_buffer
                     (const ObPl__JavaUdf__StringValues   *message,
                      ProtobufCBuffer     *buffer);
ObPl__JavaUdf__StringValues *
       ob_pl__java_udf__string_values__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ob_pl__java_udf__string_values__free_unpacked
                     (ObPl__JavaUdf__StringValues *message,
                      ProtobufCAllocator *allocator);
/* ObPl__JavaUdf__ByteBufferValues methods */
void   ob_pl__java_udf__byte_buffer_values__init
                     (ObPl__JavaUdf__ByteBufferValues         *message);
size_t ob_pl__java_udf__byte_buffer_values__get_packed_size
                     (const ObPl__JavaUdf__ByteBufferValues   *message);
size_t ob_pl__java_udf__byte_buffer_values__pack
                     (const ObPl__JavaUdf__ByteBufferValues   *message,
                      uint8_t             *out);
size_t ob_pl__java_udf__byte_buffer_values__pack_to_buffer
                     (const ObPl__JavaUdf__ByteBufferValues   *message,
                      ProtobufCBuffer     *buffer);
ObPl__JavaUdf__ByteBufferValues *
       ob_pl__java_udf__byte_buffer_values__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ob_pl__java_udf__byte_buffer_values__free_unpacked
                     (ObPl__JavaUdf__ByteBufferValues *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ObPl__JavaUdf__BatchedArgs_Closure)
                 (const ObPl__JavaUdf__BatchedArgs *message,
                  void *closure_data);
typedef void (*ObPl__JavaUdf__Values_Closure)
                 (const ObPl__JavaUdf__Values *message,
                  void *closure_data);
typedef void (*ObPl__JavaUdf__ByteValues_Closure)
                 (const ObPl__JavaUdf__ByteValues *message,
                  void *closure_data);
typedef void (*ObPl__JavaUdf__ShortValues_Closure)
                 (const ObPl__JavaUdf__ShortValues *message,
                  void *closure_data);
typedef void (*ObPl__JavaUdf__IntValues_Closure)
                 (const ObPl__JavaUdf__IntValues *message,
                  void *closure_data);
typedef void (*ObPl__JavaUdf__LongValues_Closure)
                 (const ObPl__JavaUdf__LongValues *message,
                  void *closure_data);
typedef void (*ObPl__JavaUdf__FloatValues_Closure)
                 (const ObPl__JavaUdf__FloatValues *message,
                  void *closure_data);
typedef void (*ObPl__JavaUdf__DoubleValues_Closure)
                 (const ObPl__JavaUdf__DoubleValues *message,
                  void *closure_data);
typedef void (*ObPl__JavaUdf__BigDecimalValues_Closure)
                 (const ObPl__JavaUdf__BigDecimalValues *message,
                  void *closure_data);
typedef void (*ObPl__JavaUdf__StringValues_Closure)
                 (const ObPl__JavaUdf__StringValues *message,
                  void *closure_data);
typedef void (*ObPl__JavaUdf__ByteBufferValues_Closure)
                 (const ObPl__JavaUdf__ByteBufferValues *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor ob_pl__java_udf__batched_args__descriptor;
extern const ProtobufCMessageDescriptor ob_pl__java_udf__values__descriptor;
extern const ProtobufCMessageDescriptor ob_pl__java_udf__byte_values__descriptor;
extern const ProtobufCMessageDescriptor ob_pl__java_udf__short_values__descriptor;
extern const ProtobufCMessageDescriptor ob_pl__java_udf__int_values__descriptor;
extern const ProtobufCMessageDescriptor ob_pl__java_udf__long_values__descriptor;
extern const ProtobufCMessageDescriptor ob_pl__java_udf__float_values__descriptor;
extern const ProtobufCMessageDescriptor ob_pl__java_udf__double_values__descriptor;
extern const ProtobufCMessageDescriptor ob_pl__java_udf__big_decimal_values__descriptor;
extern const ProtobufCMessageDescriptor ob_pl__java_udf__string_values__descriptor;
extern const ProtobufCMessageDescriptor ob_pl__java_udf__byte_buffer_values__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ob_5fpl_5fjava_5fudf_2eproto__INCLUDED */
